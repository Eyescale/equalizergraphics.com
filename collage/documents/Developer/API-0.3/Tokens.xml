<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_VERSION</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a1d51ce5f0244528aa917bc49d6028dec</Anchor>
    <Abstract>The version of the Compressor API described by this header.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_VERSION_1</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a73e3544bef283514b5404cfd8504c9b7</Anchor>
    <Abstract>At least version 1 of the Compressor API is described by this header.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_VERSION_2</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>ac88609b538391219e61844e3ecc70ce2</Anchor>
    <Abstract>At least version 2 of the Compressor API is described by this header.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_VERSION_3</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>ab04beacee20a7cf909636b812b30636e</Anchor>
    <Abstract>At least version 3 of the Compressor API is described by this header.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_INPLACE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a173cd0cc6074e479774efaf9866764c7</Anchor>
    <Abstract>The compressor can (query time) or should (compress) write the compressed data in the same place as t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATA_1D</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a236e333245c13d38f69f04f3d8c576f8</Anchor>
    <Abstract>The compressor can handle linear data (query time), or the input data is linear (compress, decompress).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATA_2D</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>af91c63c27e93c17d87ab66e9242cc6ed</Anchor>
    <Abstract>The compressor can handle two-dimensional data (query time), or the input data is two-dimensional (co...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_IGNORE_ALPHA</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a41f698f99a730b71794407af791425d1</Anchor>
    <Abstract>The compressor can, does or should drop the alpha channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_IGNORE_MSE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>ac1e582b8b405b1d441c94077899cb587</Anchor>
    <Abstract>Deprecated.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CPU</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a311a438e742d0a2c6863d52e3d3918ea</Anchor>
    <Abstract>The compressor is a CPU compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_TRANSFER</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>ab9cdfbb7d31237c83b4faeae6a11bb0d</Anchor>
    <Abstract>The compressor is a CPU-GPU transfer engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_USE_TEXTURE_RECT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a95c653f27f6f6ce1501f3362bb81ccf1</Anchor>
    <Abstract>Capability to use a GL_TEXTURE_RECTANGLE_ARB texture as source or destination.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_USE_TEXTURE_2D</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a631f4e55fc0fd01586027dd03d898c4c</Anchor>
    <Abstract>Capability to use a GL_TEXTURE_2D texture as source or destination.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_USE_FRAMEBUFFER</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>af38c4f877c9393e7bcaa3a4e04eb54a8</Anchor>
    <Abstract>Capability to use the frame buffer as source or destination.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorGetNumCompressors</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>ae52553ae282ce687cca471bbdfb233fb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorGetInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a777d0298b72d8aa6838607dc2144eb07</Anchor>
    <Abstract>Query information of the nth compressor in the DSO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorNewCompressor</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a5e7c2180cffa2dd75bbbf337315629dc</Anchor>
    <Abstract>Instantiate a new compressor or a new downloader.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorDeleteCompressor</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a4af897a56b806583b5c4b093446e07c5</Anchor>
    <Abstract>Release a compressor or downloader instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorNewDecompressor</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a3bdbfcd8f109347cfb600ad6df36f5bf</Anchor>
    <Abstract>Instantiate a new decompressor or a new uploader.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorDeleteDecompressor</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>ab34434eafc0cb92b0b898e9381593c09</Anchor>
    <Abstract>Release a decompressor instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorCompress</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a9b57dfdccdb79bc01a3ca7c6d6cfff1a</Anchor>
    <Abstract>Compress data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorGetNumResults</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a3646188a0b27e50620ea1bf2ff2cfe87</Anchor>
    <Abstract>Return the number of results produced by the last compression.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorGetResult</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>ad1ffb6ee7db430b05413be0e8b920e07</Anchor>
    <Abstract>Return the ith result of the last compression.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorDecompress</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a033a5642aec0832c6a603f9ed1b35520</Anchor>
    <Abstract>Decompress data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorIsCompatible</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a80ac98b11fc3a146c758871c024fda59</Anchor>
    <Abstract>Check if the compressor may be used with the current OpenGL context.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorDownload</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a529e9fbf75442ee8d62c406898c1c8d1</Anchor>
    <Abstract>Transfer frame buffer data into main memory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorUpload</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>compressor_8h.html</Path>
    <Anchor>a60382962fabfbc0cc7180ff0c2f6f562</Anchor>
    <Abstract>Transfer data from main memory into GPU memory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_NONE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>ada6cf176f24f340ee2fb086ea6811642</Anchor>
    <Abstract>Invalid data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BYTE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a64b4e32b9fc704d69c31467eddc8305d</Anchor>
    <Abstract>Data is processed in one-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_UNSIGNED</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a7bafbfaeb300e23b840698b0945dce1d</Anchor>
    <Abstract>Data is processed in four-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_HALF_FLOAT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a1405308ea9271a4d699b3592e7003574</Anchor>
    <Abstract>Data is processed in float16 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_FLOAT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a679b5eeb3c428c18de287fa8d37c0f37</Anchor>
    <Abstract>Data is processed in float32 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_3_BYTE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>afb5fa363942ff9d54e18ac22034e4ebe</Anchor>
    <Abstract>Data is processed in three interleaved streams of one-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_4_BYTE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a427ee2177eab3e19f2e6dc6584693a44</Anchor>
    <Abstract>Data is processed in four interleaved streams of one-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_3_HALF_FLOAT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>aa9ac8ac07856eedfabb3f1ca0b2b6bd4</Anchor>
    <Abstract>Data is processed in four interleaved streams of float16 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_4_HALF_FLOAT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a7c0e6c187471e75a9fb81d965fe657ba</Anchor>
    <Abstract>Data is processed in four interleaved streams of float16 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_3_FLOAT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a5d903ca8019c270163935ac36416ff72</Anchor>
    <Abstract>Data is processed in four interleaved streams of three float32 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_4_FLOAT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a741e423f0945b740a709886c8edec727</Anchor>
    <Abstract>Data is processed in four interleaved streams of four float32 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_3BYTE_1BYTE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a74fb96927efc499af24122309a0225d3</Anchor>
    <Abstract>Data is processed in one 24 bit and one 8 bit interleaved streams.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGR10_A2</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>ac807efbb79730b1308f0e65c77bea006</Anchor>
    <Abstract>Data is processed in three 10-bit color tokens and one 2-bit alpha token.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGBA</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>af973712fd1d87a41f63327b882d3d001</Anchor>
    <Abstract>Data is processed in four interleaved streams of RGBA color of unsigned Byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGBA_UINT_8_8_8_8_REV</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a43d38ec44ec3454e8c4f58cfd113c12d</Anchor>
    <Abstract>Data is processed in four interleaved streams of RGBA color of unsigned byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGBA16F</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>af36e12369d957f31f2aec05f05bd6509</Anchor>
    <Abstract>Data is processed in four interleaved streams of RGBA color of half float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGBA32F</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a4f00d0c46cee0db351b9df9e9c540aec</Anchor>
    <Abstract>Data is processed in four interleaved streams of RGBA color of float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGRA</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>ac5d9264420ac6dc85460dda13be36752</Anchor>
    <Abstract>Data is processed in four interleaved streams of BGRA color of unsigned byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGRA_UINT_8_8_8_8_REV</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>af6bdacb06b19f9f2e0104dab58067c70</Anchor>
    <Abstract>Data is processed in four interleaved streams of BGRA color of unsigned byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGRA16F</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a80a0f25ea28ee20c11c89f0c6699f9fa</Anchor>
    <Abstract>Data is processed in four interleaved streams of BGRA color of half float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGRA32F</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a920dc0fc8060055e0698f0f19a2579e5</Anchor>
    <Abstract>Data is processed in four interleaved streams of BGRA color of float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_DEPTH</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a8270ad16682a229771fd36e794927a85</Anchor>
    <Abstract>Data is a (source) depth buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_DEPTH_FLOAT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a1e3de6802c69bc5b77e1ae81cc15316e</Anchor>
    <Abstract>Data is processed in one stream of depth of float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_DEPTH_UNSIGNED_INT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>af57580a0b54c48dced48156442483840</Anchor>
    <Abstract>Data is processed in one stream of unsigned int depth tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGB</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a9cf922644e8de8ea1aa605a9266971fd</Anchor>
    <Abstract>Data is processed in three interleaved streams of RGB unsigned byte color tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGB16F</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a0332606c3ed3428bca2be0dc0e591e9b</Anchor>
    <Abstract>Data is processed in three interleaved streams of RGB half float color tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGB32F</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a1c985e33f96291d3082ff1b711ccd955</Anchor>
    <Abstract>Data is processed in three interleaved streams of RGB float color tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a4f4346088c2c271a2a7f992595d2caf3</Anchor>
    <Abstract>Data is processed in three interleaved streams of BGR unsigned byte color tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGR16F</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a9bd9cbbea615db69c8ef521f57018457</Anchor>
    <Abstract>Data is processed in three interleaved streams of BGR half float color tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_BGR32F</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>ad345388ba0ce33844b75b7f98174de9f</Anchor>
    <Abstract>Data is processed in three interleaved streams of BGR float color tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_YUVA_50P</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>aff4c54efd0a8c62e87bb063cb7257ccf</Anchor>
    <Abstract>Data is processed in four interleaved streams of YUVA components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_RGB10_A2</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a5828ee3eb373d45ffac14317d4ef8242</Anchor>
    <Abstract>Data is processed in three 10-bit color tokens and one 2-bit alpha token.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_INVALID</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a805f2f33c74caeeecc9c264ba9d338ce</Anchor>
    <Abstract>Invalid data type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DATATYPE_PRIVATE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTokens_8h.html</Path>
    <Anchor>a032965521e2f4f650c3ba695833514a7</Anchor>
    <Abstract>Private token types -FOR DEVELOPMENT ONLY-.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_INVALID</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aef61c477b34cce7af60e4f68547ecef6</Anchor>
    <Abstract>Invalid Compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_NONE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a22000e8d4a4f298ee39a7bb819eecd9f</Anchor>
    <Abstract>No Compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_UNSIGNED</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aa22757fad44b0b5fb99ee7f965f26efd</Anchor>
    <Abstract>RLE Compression of 4-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_BYTE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>accfd6805535e3ab63279c5627a75bc5e</Anchor>
    <Abstract>RLE Compression of 1-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_3_BYTE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ad11bfedd0116c7a2ba15cbb5058b952c</Anchor>
    <Abstract>RLE Compression of three 1-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_4_BYTE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>acdefb599af7363fe8667c3a7d19c14af</Anchor>
    <Abstract>RLE Compression of four 1-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_4_FLOAT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a16ceec2bf512ac560feda7528e03b370</Anchor>
    <Abstract>RLE Compression of four float32 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_4_HALF_FLOAT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a52e0dc735af1d6d223cc1038a440ddcb</Anchor>
    <Abstract>RLE Compression of four float16 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DIFF_RLE_3_BYTE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a0fd34429947d60c38b9942abe36d0c8b</Anchor>
    <Abstract>Differential RLE Compression of three 1-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_DIFF_RLE_4_BYTE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a68cf94d8fe07f36661120d34b4b74695</Anchor>
    <Abstract>Differential RLE Compression of four 1-byte tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_4_BYTE_UNSIGNED</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a096face1d27d580098ce751e31381b43</Anchor>
    <Abstract>RLE Compression of one 4-byte token.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_565</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a1e55ef7016fed1a0a2f7f6ea1860fe90</Anchor>
    <Abstract>Lossy Differential RLE Compression.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_BGR10_A2</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>abad30f075e041679b6c88de59eb7a11c</Anchor>
    <Abstract>RLE Compression of three token of 10-bits and one toke of 2-bits.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_4_HALF_FLOAT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a8fabd93cb366e4eb5dd954c37d7a96d8</Anchor>
    <Abstract>RLE Compression of four float16 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_YUVA_50P</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a0953ef6a5d11868f10cb1d194f38ebb4</Anchor>
    <Abstract>Differential RLE Compression of YUV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_YUVA_50P</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ab02f18cf4c9d69424dddaa015de7241d</Anchor>
    <Abstract>RLE Compression of YUV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_RGBA</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a130550df2ede35efa9daa8e61e49c941</Anchor>
    <Abstract>Differential RLE Compression of RGBA bytes tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_BGRA</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a8c76871866dd2cf4f5ee31cd0a8d3298</Anchor>
    <Abstract>Differential RLE Compression of BGRA bytes tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_RGBA_UINT_8_8_8_8_REV</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a31f04c45e86447fde26834005e21df9e</Anchor>
    <Abstract>Differential RLE Compression of RGBA UINT_8_8_8_8_REV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_BGRA_UINT_8_8_8_8_REV</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aa313031f21df17573fdc4bd2efdce28f</Anchor>
    <Abstract>Differential RLE Compression of BGRA UINT_8_8_8_8_REV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_DEPTH_UNSIGNED_INT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a0f751d4f135a07ef78a85953354e2349</Anchor>
    <Abstract>Differential RLE Compression of DEPTH UNSIGNED INT tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_RGBA16F</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ad6001916c3275515a21b84fd0fe9746e</Anchor>
    <Abstract>RLE Compression of RGBA half float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_BGRA16F</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a6999be62b1f4c742145964482a9ecbb1</Anchor>
    <Abstract>RLE Compression of BGRA half float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_RGBA16F</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aa68a9db9d073bf4495bddaf5f8df20d5</Anchor>
    <Abstract>Differential RLE Compression of RGBA half float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_BGRA16F</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aa9c9a90589a991025fcf11c8609ea802</Anchor>
    <Abstract>Differential RLE Compression of BGRA half float tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_565_RGBA</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a8b10016927ca23be31571be0cd51ee75</Anchor>
    <Abstract>Lossy Differential RLE Compression of RGBA bytes tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_565_BGRA</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a68024febd695710409ab4c0b575c299d</Anchor>
    <Abstract>Lossy Differential RLE Compression of RGBA bytes tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_565_RGBA_UINT_8_8_8_8_REV</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a1c0ba3bd09f5e5f74822b3aa0abe29ca</Anchor>
    <Abstract>Lossy Differential RLE Compression of RGBA UINT_8_8_8_8_REV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_565_BGRA_UINT_8_8_8_8_REV</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a1c3c68bb2d33a5e46a0c5c72fc7c52d3</Anchor>
    <Abstract>Lossy Differential RLE Compression of BGRA UINT_8_8_8_8_REV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_RGBA</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ae288575133515166cf42f7817ddcf5f3</Anchor>
    <Abstract>RLE Compression of RGBA bytes tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_BGRA</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ae8736c8c414998d9c2b3d59120d65718</Anchor>
    <Abstract>RLE Compression of BGRA bytes tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_RGBA_UINT_8_8_8_8_REV</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ad8fcbdde916c109b41b27b92c676094f</Anchor>
    <Abstract>RLE Compression of RGBA UINT_8_8_8_8_REV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_BGRA_UINT_8_8_8_8_REV</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ae8d2bed2cfd3ed2a8ab2f5ba79911042</Anchor>
    <Abstract>RLE Compression of BGRA UINT_8_8_8_8_REV tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_RGB10_A2</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>abff56a1a521d5bc53f62fe2396c74a65</Anchor>
    <Abstract>RLE Compression of RGBA 10_10_10_2 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_BGR10_A2</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a1d521b403a46f68dbba84f76b6815217</Anchor>
    <Abstract>RLE Compression of BGRA 10_10_10_2 tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DEPTH_UNSIGNED_INT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aafceca2f5d9c36eb48c4579f449c2faa</Anchor>
    <Abstract>RLE Compression of depth unsigned int tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_RLE_DIFF_UNSIGNED</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a01c73b3fbdb53e66ddbb5b095405c238</Anchor>
    <Abstract>RLE Compression of unsigned tokens.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_HQ</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a9d31e6f66a6b4c29694f4aa0d1561c22</Anchor>
    <Abstract>Quasi-lossless CPU jpeg compressor from rtt.ag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_MQ</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a3a3e25fc03848909b6486064e830d5cf</Anchor>
    <Abstract>Medium quality CPU jpeg compressor from rtt.ag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_LQ</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a5730fcb20298e51e86e9e7920880a33e</Anchor>
    <Abstract>Low quality CPU jpeg compressor from rtt.ag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_HQ_A</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a774b845b5be0b194a34a325b7c3af87d</Anchor>
    <Abstract>Quasi-lossless CPU jpeg compressor from rtt.ag retaining alpha.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_MQ_A</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aa3238d3b3f5341b4f632627caa8ffe28</Anchor>
    <Abstract>Medium quality CPU jpeg compressor from rtt.ag retaining alpha.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_AG_RTT_JPEG_LQ_A</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a41eb32aeee2fba12f57f9b15a21bbd01</Anchor>
    <Abstract>Low quality CPU jpeg compressor from rtt.ag retaining alpha.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGBA100</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aab04c57f8a75d0e79b11647a76d59fc7</Anchor>
    <Abstract>Eyescale quasi-lossless CPU jpeg RGBA compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGBA90</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a8cc0749e2ca57ddbc6262e761ef91681</Anchor>
    <Abstract>Eyescale 90% quality CPU jpeg RGBA compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGBA80</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a8b0c44ad9e4f2f0d61b2bb768f53f31d</Anchor>
    <Abstract>Eyescale 80% quality CPU jpeg RGBA compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGRA100</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a5ccaf11754c89210272c664a7fff088d</Anchor>
    <Abstract>Eyescale quasi-lossless CPU jpeg BGRA compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGRA90</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a0fbc14f882bd26a73325d3da6b6e8355</Anchor>
    <Abstract>Eyescale 90% quality CPU jpeg BGRA compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGRA80</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a7957c30c7f1d9cb2389f1aabc6ac76ea</Anchor>
    <Abstract>Eyescale 80% quality CPU jpeg BGRA compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGB100</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>ace11a52ad2781833928cdbdf33692c8f</Anchor>
    <Abstract>Eyescale quasi-lossless CPU jpeg RGB compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGB90</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a3923f4ae63969e4868ce6de39a8d078a</Anchor>
    <Abstract>Eyescale 90% quality CPU jpeg RGB compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_RGB80</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aada794546f4932ee866c96ef8849639f</Anchor>
    <Abstract>Eyescale 80% quality CPU jpeg RGB compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGR100</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a85abdd7930d22535bb1699940d75ff57</Anchor>
    <Abstract>Eyescale quasi-lossless CPU jpeg BGR compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGR90</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>aee7f2d82ca8ec749936fd3ae619510f5</Anchor>
    <Abstract>Eyescale 90% quality CPU jpeg BGR compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_CH_EYESCALE_JPEG_BGR80</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a4d483c33b8d0c52d24ae905838fa9a28</Anchor>
    <Abstract>Eyescale 80% quality CPU jpeg BGR compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQ_COMPRESSOR_PRIVATE</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>compressorTypes_8h.html</Path>
    <Anchor>a0f41c834aeb373f89f0a74760a44adde</Anchor>
    <Abstract>Private types -FOR DEVELOPMENT ONLY-.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>base_2log_8h.html</Path>
    <Anchor>a17ad6473d2d22c4eb7900986059ae39b</Anchor>
    <Abstract>Output an error message to the per-thread Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQWARN</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>base_2log_8h.html</Path>
    <Anchor>a8aef40ffdda91b7d66d8ca58d722bad9</Anchor>
    <Abstract>Output a warning message to the per-thread Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQINFO</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>base_2log_8h.html</Path>
    <Anchor>a093ffc2ddf09e98b395fec787c719fe6</Anchor>
    <Abstract>Output an informational message to the per-thread Log.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQVERB</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>base_2log_8h.html</Path>
    <Anchor>af3171460900dc034410966bd4c1a51c9</Anchor>
    <Abstract>Output a verbatim message to the per-thread Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EQLOG</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>base_2log_8h.html</Path>
    <Anchor>a53775a3747b1d1c7232187eb186aedc3</Anchor>
    <Abstract>Output a message pertaining to a topic to the per-thread Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a8f0a5606eeb5fb6e65c08b8b6d981fb2</Anchor>
    <Abstract>Increases the indentation level of the Log stream, causing subsequent lines to be intended by four ch...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exdent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a1a5c0f436149bf867d3b155797a09353</Anchor>
    <Abstract>Decrease the indent of the Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a236b03098c7c71d7eb7e4bbb07e99f5c</Anchor>
    <Abstract>Disable flushing of the Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a0f4102a4338efbd8c9d808f2e875a706</Anchor>
    <Abstract>Re-enable flushing of the Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a6d5d863b10ca2d923277ab7d55a7e424</Anchor>
    <Abstract>Flush the Log stream regardless of the auto-flush state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a0f0113252e02957a30fcf4a29b919ec7</Anchor>
    <Abstract>Disable printing of the Log header for subsequent lines.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a8dee96078587956dc45566d34c203156</Anchor>
    <Abstract>Re-enable printing of the Log header.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usort</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>stdExt_8h.html</Path>
    <Anchor>ab8d7ccba9bd4cc0365cd853805efcc77</Anchor>
    <Abstract>MSVC.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>stdExt_8h.html</Path>
    <Anchor>a4c2ca9332a0249da9919d0ff680eac86</Anchor>
    <Abstract>Find the element in the given vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>stdExt_8h.html</Path>
    <Anchor>a2b306eb5653be48581c7a3e38b5e76a7</Anchor>
    <Abstract>Find the element in the given vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>stdExt_8h.html</Path>
    <Anchor>ac4436459e0ea7e62a8a305a4899f71dc</Anchor>
    <Abstract>Find the element matching the predicate.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>stdExt_8h.html</Path>
    <Anchor>a620112986276db305985695f41ba610e</Anchor>
    <Abstract>Find the element matching the predicate.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Strings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a57b9f406ff6fcc2e3f4dc8d5db9ead18</Anchor>
    <Abstract>A vector of std::strings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EqCompressorInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Abstract>Information about one compressor.</Abstract>
    <DeclaredIn>compressor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>version</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>a53a85431bc9f0e9a5d60141dc6562136</Anchor>
    <Abstract>The compressor API version used.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>a3d2f2d44c8d175fc0791d2d058d899dd</Anchor>
    <Abstract>The type name of the compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tokenType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>ae848919427e79ef6073da9a483ebc793</Anchor>
    <Abstract>The input token type supported by the compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>capabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>ab0ddae05d1d45bab5d8db7962aac6302</Anchor>
    <Abstract>Capabilities supported by the compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>a0d21f4d6634b516c656a4f587a17d9e2</Anchor>
    <Abstract>Compression quality (1.0f: loss-less, &amp;lt;1.0f: lossy).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ratio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>a3ab85c8d8bf4485e4f129ef54e2bd9a0</Anchor>
    <Abstract>Approximate compression ratio (sizeCompressed/sizeIn).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>speed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>a5618cd8db6fca238c2f34d1fd6b64b32</Anchor>
    <Abstract>Approximate compression speed relative to BYTE_RLE.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputTokenType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>a57640c08fee57277c73aeb72c2bb44e5</Anchor>
    <Abstract>The output token type of a plugin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>outputTokenSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>EqCompressorInfo</Scope>
    </TokenIdentifier>
    <Path>structEqCompressorInfo.html</Path>
    <Anchor>a9123aced0d007768c496fc7108ca051d</Anchor>
    <Abstract>The size of one output token in bytes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash&lt; co::base::uint128_t &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>hash&lt; co::base::uint128_t &gt;</Scope>
    </TokenIdentifier>
    <Path>structhash_3_01co_1_1base_1_1uint128__t_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash&lt; co::ObjectVersion &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>hash&lt; co::ObjectVersion &gt;</Scope>
    </TokenIdentifier>
    <Path>structhash_3_01co_1_1ObjectVersion_01_4.html</Path>
    <Abstract>ObjectVersion hash function.</Abstract>
    <DeclaredIn>objectVersion.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std::hash_map</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>hash_map</Scope>
    </TokenIdentifier>
    <Path>classstd_1_1hash__map.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Abstract>Object-oriented network library.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a3e7ec22e94baf2866b4fe2ffa2ed33ed</Anchor>
    <Abstract>Serialize a vector of connection descriptions to a string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a5cc1b4bea0441a8bf8da7ac6f58c37f8</Anchor>
    <Abstract>Deserialize a vector or connection descriptions from a string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a0a7afad9b390cd61ddafacbc46cf510a</Anchor>
    <Abstract>Initialize the Equalizer network classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a36f727b7884ef2481c11faa68ba78a6a</Anchor>
    <Abstract>De-initialize the Equalizer network classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>aaab379b6d50e3f42385b1eccc35c82ae</Anchor>
    <Abstract>A unique identifier for nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodePtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a84063f2a46b131c94f6245a1c92835b3</Anchor>
    <Abstract>A reference pointer for Node pointers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LocalNodePtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a8b00f2fc42fe26786aaac866ff4c2d13</Anchor>
    <Abstract>A reference pointer for LocalNode pointers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a393cee488e7d367657a94ac5516b3df2</Anchor>
    <Abstract>A reference pointer for Connection pointers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionDescriptionPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a9447f627b33dcd20c5bf18d10e11f948</Anchor>
    <Abstract>A reference pointer for ConnectionDescription pointers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a01cebaaa8a6445eff1d5d521b4c3788c</Anchor>
    <Abstract>A vector of NodePtr&amp;#39;s.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodesCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a8651ffbf1aefecb60fe63172d16b3d1e</Anchor>
    <Abstract>A const iterator for a vector of nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Objects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a90140aaf1b3530738fb58f45c1c339dd</Anchor>
    <Abstract>A vector of objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjectsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a34bdfeaf4dfe360604293480e67c2f5d</Anchor>
    <Abstract>A const iterator for a vector of objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Barriers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>abdb8eca4372f1432c7790af99f78066a</Anchor>
    <Abstract>A vector of Barriers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Connections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a33f9994b4ed5425f2f45f32fa41e3091</Anchor>
    <Abstract>A vector of ConnectionPtr&amp;#39;s.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a3062ad2d898b10a94311f82ee110229b</Anchor>
    <Abstract>A const iterator for a vector of ConnectionPtr&amp;#39;s.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionDescriptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>aa7f4826fe6e31acc4e44b6f31b3fe572</Anchor>
    <Abstract>A vector of ConnectionDescriptionPtr&amp;#39;s.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionDescriptionsIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a79bbaa648ae2f68c00585491eba0183b</Anchor>
    <Abstract>An iterator for a vector of ConnectionDescriptionPtr&amp;#39;s.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConnectionDescriptionsCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>aae8dd29c48efa5a4fbebe82a001565a8</Anchor>
    <Abstract>A const iterator for a vector of ConnectionDescriptionPtr&amp;#39;s.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VERSION_NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>ad7106c2489284a841be4e90600ca3844</Anchor>
    <Abstract>Special object version values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_TCPIP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdba3679bc9affad045bbb6b126d0cea4248</Anchor>
    <Abstract>TCP/IP sockets.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_SDP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdbaaf478ea8d405467dd3b4937c75ac1c04</Anchor>
    <Abstract>SDP sockets (InfiniBand)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_PIPE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdba9f9eeb3e30869888b2960b36c05a75ad</Anchor>
    <Abstract>pipe() based uni-directional connection</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_NAMEDPIPE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdba84856bb2ccca579181438c03426df251</Anchor>
    <Abstract>Named pipe based bidirectional connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_IB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdba98dbe0b6bf7d16e79c5ac5912b960c69</Anchor>
    <Abstract>Infiniband based RDMA.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_UDP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdbaed0a90754bfe0bcca755c1b16555a6d2</Anchor>
    <Abstract>Unreliable UDP connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_MCIP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdbade7f3815f2e3aa10169fa836c07469fb</Anchor>
    <Abstract>IP-based multicast.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_PGM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdba70ad1067433167c187f12a92af344ccf</Anchor>
    <Abstract>IP-based multicast connection (PGM)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CONNECTIONTYPE_RSP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>a65133c6a094c4df2f4d59562f82bdfdba96cc6084d953a46bce53e1a8e437532c</Anchor>
    <Abstract>UDP-based reliable stream protocol.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NODETYPE_CO_INVALID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>ace4f054098ff777aa389698d2fc60004aff6ceeea922fc9d75917dbbe35cc91c1</Anchor>
    <Abstract>Invalid type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NODETYPE_CO_NODE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>ace4f054098ff777aa389698d2fc60004a048bfcce128b53e3a697203227791d5d</Anchor>
    <Abstract>A plain co::Node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NODETYPE_CO_USER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co</Scope>
    </TokenIdentifier>
    <Path>namespaceco.html</Path>
    <Anchor>ace4f054098ff777aa389698d2fc60004ac7c943cbd260cae1b17b8ab425a9064e</Anchor>
    <Abstract>Application-specific types.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Barrier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Abstract>A networked, versioned barrier.</Abstract>
    <DeclaredIn>barrier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Barrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>aebdce4ac407014d2a68a941b07539f81</Anchor>
    <Abstract>Construct a new barrier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Barrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>a6e47858db16a78ae50a88eba26910a4a</Anchor>
    <Abstract>Construct a new barrier, to be mapped to the master version.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Barrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>ac248f41e9ef327a0c8d093d2ff4775ed</Anchor>
    <Abstract>Destruct the barrier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>a54026ec12c2ba921e99ce79a13d2c3c1</Anchor>
    <Abstract>Set the number of participants in the barrier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>increase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>ae62740f8fa3115d2e8b1accb140a77bf</Anchor>
    <Abstract>Add one participant to the barrier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>ab6039c2603d1abd127d95572b68d4178</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>a0a1d84bb8817ee93d5a005c4c381c7bc</Anchor>
    <Abstract>Enter the barrier, blocks until the barrier has been reached.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>af62af3b831125b5fc05e9767cbca2d72</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>ae6e006c5f55c09c5ca1889ab391f2c92</Anchor>
    <Abstract>Serialize all instance information of this distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>ab1b08a3585d53ffd7ddae7a94b31752c</Anchor>
    <Abstract>Deserialize the instance data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>a235ecb9d239bb2c5429909745dc43da3</Anchor>
    <Abstract>Serialize the modifications since the last call to commit().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unpack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Barrier</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Barrier.html</Path>
    <Anchor>ae50668367d38f99a371d4ef4660421c7</Anchor>
    <Abstract>Deserialize a change.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::BufferConnection</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::BufferConnection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1BufferConnection.html</Path>
    <Abstract>A proxy connection buffering outgoing data into a memory region.</Abstract>
    <DeclaredIn>bufferConnection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::BufferConnection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1BufferConnection.html</Path>
    <Anchor>a50f0c20955b166e912fec426c3e50cdc</Anchor>
    <Abstract>Start a read operation on the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::BufferConnection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1BufferConnection.html</Path>
    <Anchor>a8e2f52a08be7f835f757ec09a71ef3bb</Anchor>
    <Abstract>Finish reading data from the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::BufferConnection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1BufferConnection.html</Path>
    <Anchor>ae891a6ececc54b504170326a201758f9</Anchor>
    <Abstract>Write data to the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNotifier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::BufferConnection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1BufferConnection.html</Path>
    <Anchor>ac0e6c63ec1950be126e9610128621783</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Command</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Command</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Command.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invoke</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Command</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Command.html</Path>
    <Anchor>a00d33a1465980b6b2f224110cd3d93ab</Anchor>
    <Abstract>Invoke and clear the command function of a dispatched command.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::CommandCache</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::CommandCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandCache.html</Path>
    <Abstract>A command cache handles the reuse of allocated packets for a node.</Abstract>
    <DeclaredIn>commandCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alloc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandCache.html</Path>
    <Anchor>a4ead420dfb9accf89d8240a35adc824f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandCache.html</Path>
    <Anchor>aa24f5ee2d4bf2bfcef13eb0d25a21807</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandCache.html</Path>
    <Anchor>a618b89ba709a07a7b0897ed2884141a3</Anchor>
    <Abstract>Flush all allocated commands.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::CommandFunc</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::CommandFunc</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandFunc.html</Path>
    <Abstract>A wrapper to register a function callback on an object instance.</Abstract>
    <DeclaredIn>commandFunc.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::CommandQueue</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Abstract>A CommandQueue is a thread-safe queue for command packets.</Abstract>
    <DeclaredIn>commandQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>a6e7e4e6e504262d02205b614188c3a25</Anchor>
    <Abstract>Push a command to the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>abbcde3e81afc31176d118d43c89b6dbf</Anchor>
    <Abstract>Push a command to the front of the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wakeup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>a04079c71200f6b5bab3148f50c7c7e23</Anchor>
    <Abstract>Wake up the command queue, pop() will return 0.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>a0a07230ddef2cec3e6688518e4c6bcc7</Anchor>
    <Abstract>Pop a command from the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tryPop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>afe556aaa535e334ac9bb6c025574237b</Anchor>
    <Abstract>Try to pop a command from the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>a0076c1d8a02bf5aeafbd8651bf262c88</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>a795b9031c81717c3a8af1f0cf29e5226</Anchor>
    <Abstract>Flush all cached commands.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::CommandQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1CommandQueue.html</Path>
    <Anchor>a68eb6662dc8cdb65bc447594819f4195</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Connection</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Abstract>An interface definition for communication between hosts.</Abstract>
    <DeclaredIn>connection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNotifier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a55c29bda54df50cb4bac0ce35b08db61</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>abb14cb3ff5222062a7d2e68ac8a38c0a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ae8aa84a77b1b7288d686b4b4a58bc611</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isConnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>aa3467ce39ac68d2add5b9168676d66db</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isListening</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a340c6fb3736456cb1f344da26588caae</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ab7dfa315b0f95e19732cad4f23f678e9</Anchor>
    <Abstract>Set the connection parameter description.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a58edf5d69591594aa8826c2aad2a59db</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a86dbe1ac7ecbc4baf1aa0427a9da1184</Anchor>
    <Abstract>Connect to the remote peer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>listen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a4d0c190e88d3763666bbd9f6ffdc320b</Anchor>
    <Abstract>Put the connection into the listening state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a539fe42f7056fb3932139f3e95b050fb</Anchor>
    <Abstract>Close a connected or listening connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a0b73910e1ab5eb1eb4bba6f93cf42a17</Anchor>
    <Abstract>Add a listener for connection state changes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a340d6578ed0dd9c4462575b78e8b53e3</Anchor>
    <Abstract>Remove a listener for connection state changes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>acceptNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>aa770ca400361be45e38fe49c220df3fd</Anchor>
    <Abstract>Start an accept operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>acceptSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a8d6d5b7070d58f849e2d875ff692455a</Anchor>
    <Abstract>Complete an accept operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recvNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>aa108aa861672f7016a4abf0d8a365a30</Anchor>
    <Abstract>Start a read operation on the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>recvSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a5ab2ef4b6d2a9af3c1af839b636bb2af</Anchor>
    <Abstract>Finish reading data from the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a9d51b4f926adc20c850ead432f8715c3</Anchor>
    <Abstract>Start a read operation on the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a56c11cedd911361f2a3a4b989ddd08a7</Anchor>
    <Abstract>Finish reading data from the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a1878e46b53111fe973c7f1c568024084</Anchor>
    <Abstract>Create a new connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Notifier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a85ae0b69f0dc3996ae79809fa21703f6</Anchor>
    <Abstract>The Notifier used by the ConnectionSet to detect readiness of a Connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_state</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>aa81510c900a1eba047d62d58f8f38fef</Anchor>
    <Abstract>The connection state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_description</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>acacd948150751c56d4f3ca21ff344c94</Anchor>
    <Abstract>The connection parameters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sendLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ade68541e3e0dd4cb7cfa79ee85170549</Anchor>
    <Abstract>The lock used to protect multiple write calls.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a875aaa521f4360c51a9ababc392865bf</Anchor>
    <Abstract>Sends a packaged message to multiple connections.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>af7161e0a18de1835b5e5ad89ee2aaa90</Anchor>
    <Abstract>Sends a packaged message including additional data to multiple connections.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a7b156825ea3c4a5d5f97f7b3ed8fc7b2</Anchor>
    <Abstract>Sends a packaged message including additional, multiple data items to multiple connections.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a1d29eeca302db9b2b6dec50a50da9eb5</Anchor>
    <Abstract>Send data using the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lockSend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a418aa2153555ac4c03ca274e2b5cf965</Anchor>
    <Abstract>Lock the connection, no other thread can send data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unlockSend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a7a12a19846a614d352f2fd8868194db6</Anchor>
    <Abstract>Unlock the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ac317067fca1e4fa7cc769849312f74ea</Anchor>
    <Abstract>Sends a packaged message using the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a905d882795668cc6ab8c509dd98ffe93</Anchor>
    <Abstract>Sends a packaged message including a string using the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a04fbc4ef10e8ec5fd33ba499cc4a5885</Anchor>
    <Abstract>Sends a packaged message including additional data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a308a375e24ed11ad81cf61b5076f042d</Anchor>
    <Abstract>Sends a packaged message including additional data using the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>a19d0c9df49e4466b1599f3f22e16bf74</Anchor>
    <Abstract>Write data to the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATE_CLOSED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ad6263ab2bfaa081884dd0a7d34a4df43a58fa21b18ae8fbb4c9b0425ffe41646c</Anchor>
    <Abstract>Closed, initial state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATE_CONNECTING</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ad6263ab2bfaa081884dd0a7d34a4df43ad3c63eb66f6623ff2d5f460db6e08259</Anchor>
    <Abstract>A connect() or listen() is in progress.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATE_CONNECTED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ad6263ab2bfaa081884dd0a7d34a4df43abd4a6387bed8dc64c3f0a5c4238a25e3</Anchor>
    <Abstract>The connection has been connected and is open.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATE_LISTENING</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ad6263ab2bfaa081884dd0a7d34a4df43aa9d1cc97507d378290e64f916badb694</Anchor>
    <Abstract>The connection is listening for connects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATE_CLOSING</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Connection</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Connection.html</Path>
    <Anchor>ad6263ab2bfaa081884dd0a7d34a4df43a8a128bf2c7c80c0d64c77c46021ef2d5</Anchor>
    <Abstract>A close() is in progress.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::ConnectionDescription</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Abstract>Describes Connection parameters.</Abstract>
    <DeclaredIn>connectionDescription.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Anchor>ad97d018428e714c48e8fe1068b2b9253</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Anchor>a93229874ced3b5a4d567eb99cd11cf1e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Anchor>a116b2194f2fb3dd329304dea10b0c944</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fromString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Anchor>ae47626eef330573e75a2ead60b79811c</Anchor>
    <Abstract>Reads the connection description from a string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Anchor>a09a58e93a477bb31806d0d972506b980</Anchor>
    <Abstract>The network protocol for the connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bandwidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Anchor>a57bde83f437f4a04b5dcf74046c441d8</Anchor>
    <Abstract>The bandwidth in kilobyte per second for this connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::ConnectionDescription</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionDescription.html</Path>
    <Anchor>a7063d28b28ab1753a33564d92bdc92b3</Anchor>
    <Abstract>The listening port (TCPIP, SDP, IB, MCIP).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::ConnectionListener</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::ConnectionListener</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionListener.html</Path>
    <Abstract>A listener interface to connection changes.</Abstract>
    <DeclaredIn>connectionListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::ConnectionSet</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Abstract>A set of connections.</Abstract>
    <DeclaredIn>connectionSet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>select</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>aeef5e4364f2f5b368b1f1827b8eb8090</Anchor>
    <Abstract>Selects a Connection which is ready for I/O.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interrupt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>ae3c0812fc0651efdd4908354058cd607</Anchor>
    <Abstract>Interrupt the current or next select call.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182af88bb8d3f777c44578ce498f8f36dbff</Anchor>
    <Abstract>No event has occurred.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_CONNECT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182a82c7ed39e0604f8549e8c1a64d4e8899</Anchor>
    <Abstract>A new connection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_DISCONNECT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182a3a1e404e5dc37f529d74721ccd696ac6</Anchor>
    <Abstract>A disconnect.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_DATA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182a4381cedcb23749fe913527f8fdb4b624</Anchor>
    <Abstract>Data can be read.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_TIMEOUT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182a88d0630ad6bb46f4bcfbb4b019dbd3d7</Anchor>
    <Abstract>The selection request timed out.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_INTERRUPT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182ae698d5c9c0ed8cfbe1c2001fe1d03a54</Anchor>
    <Abstract>ConnectionSet::interrupt was called.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_ERROR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182adb18d95a1a2cc46a92ff719233d9b435</Anchor>
    <Abstract>A connection signaled an error.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_SELECT_ERROR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182a6fe96068efc89c9c12178570353c31b4</Anchor>
    <Abstract>An error occurred during select()</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EVENT_INVALID_HANDLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::ConnectionSet</Scope>
    </TokenIdentifier>
    <Path>classco_1_1ConnectionSet.html</Path>
    <Anchor>a160c9d1faea8c6a1079fd491baa20182ae2efc842b9f07e4e4186be0c0628e50a</Anchor>
    <Abstract>A connection is not select&amp;#39;able.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::DataIStream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Abstract>A std::istream-like input data stream for binary data.</Abstract>
    <DeclaredIn>dataIStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nRemainingBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a18cd18cc1e4dd263e6748a5d144a2578</Anchor>
    <Abstract>Get the number of remaining buffers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a32a457520fa40342305febe4a1bebed3</Anchor>
    <Abstract>Read a plain data item.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>ab769cf468151cb129f1b26db8b4f89a0</Anchor>
    <Abstract>Read a std::vector of serializable items.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserializeChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a0157c359b53014e2887c615abb867cd1</Anchor>
    <Abstract>Deserialize child objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>read</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>aa67337802302e5c77b3c2a0a3a7e52b9</Anchor>
    <Abstract>Read a number of bytes from the stream into a buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRemainingBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>ac547306f7dca41d1dbf6e593a8e95de0</Anchor>
    <Abstract>Get the pointer to the remaining data in the current buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRemainingBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>ac9403b531f7d38ed2bfa7e64603006d9</Anchor>
    <Abstract>Get the size of the remaining data in the current buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>advanceBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a5e8803e654564de272f1efc74d674947</Anchor>
    <Abstract>Advance the current buffer by a number of bytes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>afe708fb09da5cb9528e58dab3fb7ae55</Anchor>
    <Abstract>Read a std::string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a46b73072c45e9f1b6fa1352c227602b8</Anchor>
    <Abstract>Deserialize an object (id+version).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>acf31770bf3172c9c69081f9a97761043</Anchor>
    <Abstract>Optimized specialization to read a std::vector of uint8_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a26d0d0bd14bb3319e1e87fd1efb0799f</Anchor>
    <Abstract>Optimized specialization to read a std::vector of uint16_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a679d2e4671fdada2747e130c30c32551</Anchor>
    <Abstract>Optimized specialization to read a std::vector of int16_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a323d41d648421b8a21190e0fb10590e7</Anchor>
    <Abstract>Optimized specialization to read a std::vector of uint32_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a5aa5f11c4445eeeb4cf7fbe559e7f51f</Anchor>
    <Abstract>Optimized specialization to read a std::vector of int32_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>ad569014a6db3279731cb03f19bc08299</Anchor>
    <Abstract>Optimized specialization to read a std::vector of uint64_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a2694ff2141b9647914d46b7ff6043336</Anchor>
    <Abstract>Optimized specialization to read a std::vector of int64_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a63f9bb7be26f1b2a6ab36cffa636abba</Anchor>
    <Abstract>Optimized specialization to read a std::vector of float.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>a532e4afd717a54058afa922a22d12b71</Anchor>
    <Abstract>Optimized specialization to read a std::vector of double.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataIStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataIStream.html</Path>
    <Anchor>ac7f43e684c1cc73df0df8f3b0b984b1f</Anchor>
    <Abstract>Optimized specialization to read a std::vector of ObjectVersion.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::DataOStream</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Abstract>A std::ostream buffering and/or retaining data in a binary format.</Abstract>
    <DeclaredIn>dataOStream.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>af352084cc8a2e48f9281551841d24b87</Anchor>
    <Abstract>Disable, flush and unlock the output to the current receivers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableSave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a4069e5b260f27551fa06ec66475fc1a1</Anchor>
    <Abstract>Enable copying of all data into a saved buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableSave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a2f2c618813dcd6bda9357d5d9fb5b0a4</Anchor>
    <Abstract>Disable copying of all data into a saved buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSentData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>afa37ce2c0001740515bb03667bac136b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>aa3cb1495d2a3d326fe035aba9b0346ce</Anchor>
    <Abstract>Write a plain data item by copying it to the stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a5a3eda93bd17e90cefb42290ff6ae46f</Anchor>
    <Abstract>Write a std::vector of serializable items.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>write</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a038ca1ac28ce87779cfc30214e6661a9</Anchor>
    <Abstract>Write a number of bytes from data into the stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serializeChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a567b317f33868f4d59c4f14ca471af89</Anchor>
    <Abstract>Serialize child objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a959ff8f91a49ea79bb127dbd96e044b1</Anchor>
    <Abstract>Write a std::string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a6d62ae6bb1ecff36d33df289262cc2d9</Anchor>
    <Abstract>Write an object identifier and version.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a87f122cb0ab0c083587aa91b98462868</Anchor>
    <Abstract>Optimized specialization to write a std::vector of uint8_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a5b9cdb988584354021d6dc3db7633364</Anchor>
    <Abstract>Optimized specialization to write a std::vector of uint16_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a6cb531cbf476ef829a20c376971c13f7</Anchor>
    <Abstract>Optimized specialization to write a std::vector of int16_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a02c671f026e08edf6d336cdf33699063</Anchor>
    <Abstract>Optimized specialization to write a std::vector of uint32_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>ab8254de80a1d2ec46d4855cae2187e4b</Anchor>
    <Abstract>Optimized specialization to write a std::vector of int32_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a5c4c41cadaee93c03e922729373ec0be</Anchor>
    <Abstract>Optimized specialization to write a std::vector of uint64_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a2c7821066136793a4f243d457f4b0122</Anchor>
    <Abstract>Optimized specialization to write a std::vector of int64_t.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>abd392efd1017aed520d62086518e5afe</Anchor>
    <Abstract>Optimized specialization to write a std::vector of float.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a359458a3316b60750c08d4b071e540f0</Anchor>
    <Abstract>Optimized specialization to write a std::vector of double.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a10edfdadce322afb22fe4e7eb54eaf4c</Anchor>
    <Abstract>Optimized specialization to write a std::vector of ObjectVersion.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_initCompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>af156b658638f161d6a842b679d960ceb</Anchor>
    <Abstract>Initialize the given compressor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_enable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a9a4a7c33bc77db654f3cb9d0365230a4</Anchor>
    <Abstract>Enable output.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>aef8b502f8a2b21ef1ed414e62aaf1b76</Anchor>
    <Abstract>Flush remaining data in the buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_setupConnections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a9bd23e9ce3473d1a7fa7485a74a1e20e</Anchor>
    <Abstract>Set up the connection list for a group of nodes, using multicast where possible.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_setupConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>ad4eea48a07238b49178b7e7e4a5b09e9</Anchor>
    <Abstract>Set up the connection (list) for one node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_resend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>aded4453ac92ac728d95233832ff5fb1f</Anchor>
    <Abstract>Resend the saved buffer to all enabled connections.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>a1f17f2243c5866400d80e658e91b8902</Anchor>
    <Abstract>Reset the whole stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::DataOStream</Scope>
    </TokenIdentifier>
    <Path>classco_1_1DataOStream.html</Path>
    <Anchor>accc955744a11f5a6058aee355c0bf512</Anchor>
    <Abstract>Send a data buffer (packet) to the receivers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Dispatcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Dispatcher</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Dispatcher.html</Path>
    <Abstract>A helper class providing command packet dispatch functionality to networked objects.</Abstract>
    <DeclaredIn>dispatcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Dispatcher</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Dispatcher.html</Path>
    <Anchor>ad8ace4a8ae225dacb2a8cb178263cc11</Anchor>
    <Abstract>NOP assignment operator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Dispatcher</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Dispatcher.html</Path>
    <Anchor>ac1980943f3d0fbb6e2d7cb0de89b7d7b</Anchor>
    <Abstract>Dispatch a command from the receiver thread to the registered queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Dispatcher</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Dispatcher.html</Path>
    <Anchor>ab13abd53e8499f34b1ff9625a620c0df</Anchor>
    <Abstract>Registers a command member function for a command.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_cmdUnknown</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Dispatcher</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Dispatcher.html</Path>
    <Anchor>aab10ccfcd438a5db32ac237bd6e89bf5</Anchor>
    <Abstract>The default handler for handling commands.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Global</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Abstract>Global parameter handling for the Equalizer network implementation.</Abstract>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProgramName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>a731ea77fb13042343b26b8f3b41aff31</Anchor>
    <Abstract>Sets the name of the program.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProgramName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>aa7f9a3aaef8d82355291d545b95aa76c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWorkDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>a054f9e722a267bb4b5c72521dea627ee</Anchor>
    <Abstract>Sets the working directory of the program.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWorkDir</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>ae8fc2242f274ece53c6a68b0fa01349f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>a08c32db858f6d07cbe1c28f7f0d70316</Anchor>
    <Abstract>Sets the default listening port.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDefaultPort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>a3103c106b2d3f16bd1192bb736a6c167</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setObjectBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>aa19d31a25f55b566051fa0eb5a86d252</Anchor>
    <Abstract>Set the minimum buffer size for Object serialization.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getObjectBufferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>abab9d172b0927d79733a28af60a2d9f0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>ab4f059502046665a74f30bd09d3bfc07</Anchor>
    <Abstract>Set an integer attribute.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Global.html</Path>
    <Anchor>a2e6a343853761d6277ce6efde3ebf23c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::InstanceCache</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InstanceCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>af68cba4b724d80be9d26e660117223d1</Anchor>
    <Abstract>Construct a new instance cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~InstanceCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>aabdb4b8561263db31fa17352f612c3ac</Anchor>
    <Abstract>Destruct this instance cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>ab686b107afbdb948a76a2602e68c7ef5</Anchor>
    <Abstract>Add a new command to the instance cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>ab5ba11011e11e7c10e425e5c9d2f0f18</Anchor>
    <Abstract>Remove all items from the given node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>a8d839f3f35e54553f71b6da8226cec65</Anchor>
    <Abstract>Direct access to the cached instance data for the given object id.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>a01c57f94a049eeef75dac759f1fd7e3d</Anchor>
    <Abstract>Release the retrieved instance data of the given object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>erase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>a72177f632422b2bc1bcaf848176401f4</Anchor>
    <Abstract>Erase all the data for the given object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>a623220441cc4485052292ae7797d2d30</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>a654c16828234fe3a3b8945eb41e27b41</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>expire</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::InstanceCache</Scope>
    </TokenIdentifier>
    <Path>classco_1_1InstanceCache.html</Path>
    <Anchor>a50999455d7e9f31061087006dbc9c1e6</Anchor>
    <Abstract>Remove all items which are older than the given time.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::InstanceCache::Data</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::InstanceCache::Data</Scope>
    </TokenIdentifier>
    <Path>structco_1_1InstanceCache_1_1Data.html</Path>
    <Abstract>One cache entry.</Abstract>
    <DeclaredIn>instanceCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>masterInstanceID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::InstanceCache::Data</Scope>
    </TokenIdentifier>
    <Path>structco_1_1InstanceCache_1_1Data.html</Path>
    <Anchor>a62c9d2a0c81f26ba79363a804f8cda6e</Anchor>
    <Abstract>The instance ID of the master object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>versions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::InstanceCache::Data</Scope>
    </TokenIdentifier>
    <Path>structco_1_1InstanceCache_1_1Data.html</Path>
    <Anchor>a82378ebdce0daf98ddd42bc5d2df3e0a</Anchor>
    <Abstract>all cached data</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::InstanceCache::Data</Scope>
    </TokenIdentifier>
    <Path>structco_1_1InstanceCache_1_1Data.html</Path>
    <Anchor>a57d8d5299e70ce3710d4b7a1c75c946e</Anchor>
    <Abstract>&amp;#39;0&amp;#39; return value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::LocalNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Abstract>Specialization of a local node.</Abstract>
    <DeclaredIn>localNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a86faec9ee143e8f5e33e6794405ecf7b</Anchor>
    <Abstract>Initialize the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>listen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a32f39c19067df54010ff15bdf081a48f</Anchor>
    <Abstract>Open all connections and put this node into the listening state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a40df2d93c9d4551f6243fde90825c25f</Anchor>
    <Abstract>Close a listening node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>affc726d4898efc6a9bd38cb17379cd3f</Anchor>
    <Abstract>Close a listening node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>ad86c386a14c7c57ce55f38a2988eff61</Anchor>
    <Abstract>Connect a proxy node to this listening node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a34d4fb6f2ceb5578daa9a1e9dca0bf05</Anchor>
    <Abstract>Create and connect a node given by an identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disconnect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>acef4dc0c6271e5af3cfb1cd1d951ded2</Anchor>
    <Abstract>Disconnects a connected node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableInstanceCache</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a3ff22f4938a755eeda411d9bea3b4bf6</Anchor>
    <Abstract>Disable the instance cache of a stopped local node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableSendOnRegister</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a7a516662ed06e068b93253667eb56cb7</Anchor>
    <Abstract>Enable sending instance data after registration.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableSendOnRegister</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a9ea86ca7b7644f8f318200aedc459aec</Anchor>
    <Abstract>Disable sending data of newly registered objects when idle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a278baf32e8502ab3dfef3f29c2f7e06a</Anchor>
    <Abstract>Register a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deregisterObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>af18a5bfeb64f54d08cdd9c5737d1af27</Anchor>
    <Abstract>Deregister a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>ac4b7dd1b0204368f7039f71be8538fbc</Anchor>
    <Abstract>Map a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>af4c1977afa5ad1cff5cd9b39a0866293</Anchor>
    <Abstract>Convenience wrapper for mapObject().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a5eccd74e7fe0f2242b75cabba331902d</Anchor>
    <Abstract>Start mapping a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a1072dda9b055d2f6ef43c89090c83c8d</Anchor>
    <Abstract>Start mapping a distributed object from a known master.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapObjectSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a90d12c5795a13d228de42ba928177007</Anchor>
    <Abstract>Finalize the mapping of a distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmapObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a9bc28bde0d88c37b1f4784f90bb100ec</Anchor>
    <Abstract>Unmap a mapped object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a392032264ab66a90389a3e0081ad4fbc</Anchor>
    <Abstract>Convenience method to deregister or unmap an object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a185cbe3b22d6a78c8c25d04096274406</Anchor>
    <Abstract>Get a node by identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a11b1cbc62d1f986eb1d4bd1c811a4f3a</Anchor>
    <Abstract>Assemble a vector of the currently connected nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCommandThreadQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>ab85a91dd9b28d5408bed6e992c8cf92f</Anchor>
    <Abstract>Return the command queue to the command thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inCommandThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a07f1884eeb76fb82d5d67373d2ed230e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>aeda95d8c3a32e00b275568087c8494d6</Anchor>
    <Abstract>Add a listening connection to this listening node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeListenerNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a09b8e6c875fe88bf04161769b1d4d63b</Anchor>
    <Abstract>Remove a listening connection from this listening node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flushCommands</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>ad288bac16adb0f3e1ae36ce414b4e4a9</Anchor>
    <Abstract>Flush all pending commands on this listening node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchCommand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a382a32d6d931bd152184e9150e6211cd</Anchor>
    <Abstract>Dispatches a packet to the registered command queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_connect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::LocalNode</Scope>
    </TokenIdentifier>
    <Path>classco_1_1LocalNode.html</Path>
    <Anchor>a7b78a69e9764ce60536e93cc4a79585e</Anchor>
    <Abstract>Connect a node proxy to this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Abstract>Manages a node.</Abstract>
    <DeclaredIn>node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>abe2a8ce2b1387ece163995c0187940b1</Anchor>
    <Abstract>Construct a new Node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>af9d951e9872b1aacb700d3a12861e844</Anchor>
    <Abstract>Serialize the node&amp;#39;s information.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deserialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>af7cea5c5934aaf1f9f06c50b16d0a3b5</Anchor>
    <Abstract>Deserialize the node information, consumes given data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a243668926eb442f8ff0a42eda94fc75b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addConnectionDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>ae7709b31c664bb82d8fcc48dd73241b6</Anchor>
    <Abstract>Adds a new description how this node can be reached.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeConnectionDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a456b8b13f5d0bc765dc0143a9966d6e3</Anchor>
    <Abstract>Removes a connection description.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConnectionDescriptions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a66004e9f3587dee643b2cc1919c5d660</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a40972a301d345d1625b82ecbe29c9933</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMulticast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a5b6ee5c25ac7437eb83cb48e4002e21f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a715a9c1589249b567a0e4f8977ca2c29</Anchor>
    <Abstract>Sends a packet to this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a0317a4f3d43255de7de76fe92d0c6a7e</Anchor>
    <Abstract>Sends a packet with a string to the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a72352d186ea8f66eb5d2105471f8394b</Anchor>
    <Abstract>Sends a packet with additional data to the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a04a25bf2a78e06911c5dc0bffc576aee</Anchor>
    <Abstract>Sends a packet with additional data to the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multicast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>ac0e063fb45caad8d30a96563cb197c72</Anchor>
    <Abstract>Multicasts a packet to the multicast group of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>a4fc6fbcc0cdc88b6c50c058f7b358e4d</Anchor>
    <Abstract>Destructs this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>adf17936215b867c44cf5e85097f0fd60</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Node</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Node.html</Path>
    <Anchor>adb3fd83cc7f0d973a9d3dc5e11e50406</Anchor>
    <Abstract>Factory method to create a new node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Object</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Abstract>A generic, distributed object.</Abstract>
    <DeclaredIn>object.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a62698acaa2b516590684a53d9b062bee</Anchor>
    <Abstract>Construct a new distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a5d43aacaf2328cebd2051364f28965b0</Anchor>
    <Abstract>Destruct the distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAttached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a9352a2b0bdfc5e6551ebd831d42ad6fc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLocalNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a5b76afac372bbe1f4c2940a6497351a5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a94ece8de39782095c1d49dd550447435</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstanceID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aa09eabedfe256d605af204358283b2d3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMaster</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a01dd9f1747fc1cdb162f737936d09205</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getChangeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a10ba549521822bf9401319e1d15c94bd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chooseCompressor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>ac5c35d27fb9c4149924abefca4a610f2</Anchor>
    <Abstract>Return the compressor to be used for data transmission.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>ae437c5c262ccfbb1dddb4ac38aa3e0f9</Anchor>
    <Abstract>Return if this object needs a commit.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a59657ecbfdf4544a881e24abaaa0e57c</Anchor>
    <Abstract>Commit a new version of this object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitNB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>af928dbf41a7abcea29c4ceadcd10f088</Anchor>
    <Abstract>Start committing a new version of this object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>commitSync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>ad54d3e31bf90da046b4b9343f97e5b03</Anchor>
    <Abstract>Finalize a commit transaction.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAutoObsolete</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aebcd51f44793e5e17ea2fd03a629661a</Anchor>
    <Abstract>Automatically obsolete old versions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAutoObsolete</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aa0abbb623bfad9d2f3e0b3d72ccbbba6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sync</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a5eb3261859f4be179e9c68ca4ca52384</Anchor>
    <Abstract>Sync to a given version.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeadVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a0ecd810a8b443ef4d1404162d9ba73c1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a00a8f6a69e9599371bb2105ea3f82fe0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyNewHeadVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a3bb8ca350f2bce94912a8142f9427242</Anchor>
    <Abstract>Notification that a new head version was received by a slave object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyNewVersion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>ac86523c3143a409558cc383fbeb09359</Anchor>
    <Abstract>Notification that a new version was received by a master object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aacac279363ecc549cac67e715ab49864</Anchor>
    <Abstract>Serialize all instance information of this distributed object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyInstanceData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>ad5d185282f6677499100df40e462e1b1</Anchor>
    <Abstract>Deserialize the instance data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>ac98e060ef02dd0e670cc058590e22c00</Anchor>
    <Abstract>Serialize the modifications since the last call to commit().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unpack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a94778929cb6d88643727be222d305671</Anchor>
    <Abstract>Deserialize a change.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a57a7bda6eb752c11d7834352448853a9</Anchor>
    <Abstract>Send a packet to peer object instance(s) on another node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>ae054c920159a4580af2e6ddc55b47b9a</Anchor>
    <Abstract>Send a packet to peer object instance(s) on another node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>send</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>abd1d911628c62570b11e47e9975bcf7f</Anchor>
    <Abstract>Send a packet to peer object instance(s) on another node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyAttached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>adea849be34cf83a2809075c16d16685b</Anchor>
    <Abstract>Notify that this object has been registered or mapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyDetach</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a0533209c42d646b4aefe0f62074e4fc9</Anchor>
    <Abstract>Notify that this object will be deregistered or unmapped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Object</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a2cfda48d66c0a0db146dcec338aebcda</Anchor>
    <Abstract>Copy constructor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>a5f5ce1eac8bd5f58e395344907063b19</Anchor>
    <Abstract>NOP assignment operator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STATIC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aaae58400a7f8d052bfa2b5392a5fbfe8abffa92dfe324266d5363ea52e6d28eff</Anchor>
    <Abstract>non-versioned, static object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INSTANCE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aaae58400a7f8d052bfa2b5392a5fbfe8afc5de780b268580c941aa751a7dcd4dd</Anchor>
    <Abstract>use only instance data</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DELTA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aaae58400a7f8d052bfa2b5392a5fbfe8a2b1bfe2c6f342bc3c0e73f7ebdd87f07</Anchor>
    <Abstract>use pack/unpack delta</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UNBUFFERED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::Object</Scope>
    </TokenIdentifier>
    <Path>classco_1_1Object.html</Path>
    <Anchor>aaae58400a7f8d052bfa2b5392a5fbfe8a396f5b4bfe97cc2df900e569c4e5e10d</Anchor>
    <Abstract>versioned, but don&amp;#39;t retain versions</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::ObjectVersion</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::ObjectVersion</Scope>
    </TokenIdentifier>
    <Path>structco_1_1ObjectVersion.html</Path>
    <Abstract>A helper struct bundling an object identifier and version.</Abstract>
    <DeclaredIn>objectVersion.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::ObjectVersion</Scope>
    </TokenIdentifier>
    <Path>structco_1_1ObjectVersion.html</Path>
    <Anchor>abfc03f94ed52ed2e67202b3f2f22b594</Anchor>
    <Abstract>An unset object version.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::Packet</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::Packet</Scope>
    </TokenIdentifier>
    <Path>structco_1_1Packet.html</Path>
    <Abstract>A packet send over the network.</Abstract>
    <DeclaredIn>packets.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::Packet</Scope>
    </TokenIdentifier>
    <Path>structco_1_1Packet.html</Path>
    <Anchor>aff3724a8aba8cb0aae72be7940783b13</Anchor>
    <Abstract>Total size, set by the most specific sub-struct.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::Packet</Scope>
    </TokenIdentifier>
    <Path>structco_1_1Packet.html</Path>
    <Anchor>ad7603b23bd35358e6dcb3a895f99c49f</Anchor>
    <Abstract>The packet (receiver) type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>command</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::Packet</Scope>
    </TokenIdentifier>
    <Path>structco_1_1Packet.html</Path>
    <Anchor>a9a92967b0a995a06f493cb05af375ead</Anchor>
    <Abstract>The specific command name.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::NodePacket</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::NodePacket</Scope>
    </TokenIdentifier>
    <Path>structco_1_1NodePacket.html</Path>
    <Abstract>Packet sent to and handled by an co::Node.</Abstract>
    <DeclaredIn>packets.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::ObjectPacket</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::ObjectPacket</Scope>
    </TokenIdentifier>
    <Path>structco_1_1ObjectPacket.html</Path>
    <Abstract>Packet sent to and handled by an co::Object.</Abstract>
    <DeclaredIn>packets.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Abstract>Base abstraction layer and common utility classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIndexOfLastBit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a3f17471b721d4c44e0b40dbe18b653f7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>ae20e2273650511a2497fc2c80bc137a6</Anchor>
    <Abstract>Used to trap into an infinite loop to allow debugging of assertions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkHeap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a152ae9b788a581c278194d199701bb40</Anchor>
    <Abstract>Check the consistency of the heap and abort on error (Win32 only).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sysError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a220f40c98e41855e57cbb1bb3ed428cd</Anchor>
    <Abstract>Print a textual description of the current system error.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backtrace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a7cd19245f89a103619feeef32d986dc2</Anchor>
    <Abstract>Print the current call stack.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>className</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a1c3998c9d5b17224506a5225061c5773</Anchor>
    <Abstract>Print the RTTI name of the given class.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a7b4906fdff89ff86a2065b5daad04b7d</Anchor>
    <Abstract>Print the error in a human-readable format.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>searchDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a9707c90a7696d2b3086f67b5eb6c87e8</Anchor>
    <Abstract>Retrieve a list of files in a directory matching a pattern.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>aae2b77ea4f80a4a4bb564b0eec7bb91a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirname</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a31d25e68dfe1fea5ac059dbe7b405e97</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>ab5d04005a9a0a4b8e7d1c0d4216ae856</Anchor>
    <Abstract>Initialize the Equalizer base classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a358d39e44dcca30e9ea6fe89c6a0c86f</Anchor>
    <Abstract>De-initialize the Equalizer base classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>ab4bca59c746d4ef7c1faf8022a644760</Anchor>
    <Abstract>Print the data to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a8f0a5606eeb5fb6e65c08b8b6d981fb2</Anchor>
    <Abstract>Increases the indentation level of the Log stream, causing subsequent lines to be intended by four ch...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exdent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a1a5c0f436149bf867d3b155797a09353</Anchor>
    <Abstract>Decrease the indent of the Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a236b03098c7c71d7eb7e4bbb07e99f5c</Anchor>
    <Abstract>Disable flushing of the Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a0f4102a4338efbd8c9d808f2e875a706</Anchor>
    <Abstract>Re-enable flushing of the Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a6d5d863b10ca2d923277ab7d55a7e424</Anchor>
    <Abstract>Flush the Log stream regardless of the auto-flush state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a0f0113252e02957a30fcf4a29b919ec7</Anchor>
    <Abstract>Disable printing of the Log header for subsequent lines.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a8dee96078587956dc45566d34c203156</Anchor>
    <Abstract>Re-enable printing of the Log header.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a10f727b547eae741913762d1dca3d97b</Anchor>
    <Abstract>Print the monitor to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a4260fce1ed53010b39a66dd0bdfcd553</Anchor>
    <Abstract>Print the reference pointer to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sleep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>aa58196981e474b1dbead423ddf24e975</Anchor>
    <Abstract>Sleep the current thread for a number of milliseconds.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a1036f78ecd3dce6a1b66d6b3b200dfc7</Anchor>
    <Abstract>Print the thread to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a101cdd093c39fc9f83263ecea02f765c</Anchor>
    <Abstract>Print the thread to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>ac86ab8cf3ae0be0bf06310f329627baa</Anchor>
    <Abstract>ostream operator for 128 bit unsigned integers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>ac1acd869e205bac95d10e7fcb1b96408</Anchor>
    <Abstract>Add a 64 bit value to a 128 bit value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>aac5fd2d91ea9c58d83023922064e93ce</Anchor>
    <Abstract>Subtract a 64 bit value from a 128 bit value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a_int32_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>aa639e3ad153ccc30d56efa1f0b7bb7e3</Anchor>
    <Abstract>An atomic 32 bit integer variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Monitorb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a2244065e13684bf6efd93b354635555c</Anchor>
    <Abstract>A boolean monitor variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Monitoru</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a6773e44959875c80146ba377b42d6493</Anchor>
    <Abstract>An unsigned 32bit integer monitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Strings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a57b9f406ff6fcc2e3f4dc8d5db9ead18</Anchor>
    <Abstract>A vector of std::strings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_ERROR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>ab9441e207ffa7f3ac5ce7209f4eceec0ad82b06344dda5038cd533f7926cabaaf</Anchor>
    <Abstract>Output critical errors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_WARN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>ab9441e207ffa7f3ac5ce7209f4eceec0a0771921e52df33adf86e0a63d3e82564</Anchor>
    <Abstract>Output potentially critical warnings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_INFO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>ab9441e207ffa7f3ac5ce7209f4eceec0ae69da0b2e19220597616c78f4e34d56a</Anchor>
    <Abstract>Output informational messages.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_VERB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>ab9441e207ffa7f3ac5ce7209f4eceec0a5f3a3a82ec126253498fef2c8cac439a</Anchor>
    <Abstract>Be noisy.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_PLUGIN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a6e42140e228053c04e7bb0dac5082191af77ef0fad60c0c0170c0ac05f9c783c6</Anchor>
    <Abstract>Plugin usage (1)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_CUSTOM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a6e42140e228053c04e7bb0dac5082191a72ab38b4d3859769f4dad58b40199df7</Anchor>
    <Abstract>Log topics for other namespaces start here.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_ANY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>co::base</Scope>
    </TokenIdentifier>
    <Path>namespaceco_1_1base.html</Path>
    <Anchor>a6e42140e228053c04e7bb0dac5082191a3b698e76edb77dc3e0354aa50eab36b5</Anchor>
    <Abstract>Log all Equalizer topics.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::Atomic</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::base::Atomic</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Atomic.html</Path>
    <Abstract>An variable with atomic operations.</Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Atomic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Atomic</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Atomic.html</Path>
    <Anchor>a2ff35620802ee299e7cbd81246d1b863</Anchor>
    <Abstract>Construct a new atomic variable with an initial value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Atomic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Atomic</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Atomic.html</Path>
    <Anchor>a9a0189d210e4e4adbe117b1aff00fc5c</Anchor>
    <Abstract>Construct a copy of an atomic variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator T</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Atomic</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Atomic.html</Path>
    <Anchor>a30382942b30345e576a662c35a481d2b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Atomic</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Atomic.html</Path>
    <Anchor>a1e1712336adadbd7a562a63d9c37da70</Anchor>
    <Abstract>Assign a new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Atomic</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Atomic.html</Path>
    <Anchor>a1a3b53fa7e5bdfc1bcdb0d52c3e08ae5</Anchor>
    <Abstract>Assign a new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Atomic</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Atomic.html</Path>
    <Anchor>aa8fda9302e4e5d905c264a3a4802e600</Anchor>
    <Abstract>Atomically add a value and return the new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Atomic</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Atomic.html</Path>
    <Anchor>abb87a93e85e8cf469e1824a4fd0431a2</Anchor>
    <Abstract>Atomically substract a value and return the new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Atomic</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Atomic.html</Path>
    <Anchor>a3bd59eb8ebf42ea4a9c64c2e500bc306</Anchor>
    <Abstract>Atomically increment by one and return the new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Atomic</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Atomic.html</Path>
    <Anchor>a4b647d08f7383f22c94b2012a1a888e2</Anchor>
    <Abstract>Atomically decrement by one and return the new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Atomic</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Atomic.html</Path>
    <Anchor>a7fb9175fe199d4f1f15b4d00830bc81c</Anchor>
    <Abstract>Atomically increment by one and return the old value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Atomic</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Atomic.html</Path>
    <Anchor>ae6f85305d89af3c23e6db81b637588ce</Anchor>
    <Abstract>Atomically decrement by one and return the old value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::Buffer</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Abstract>A simple memory buffer with some helper functions.</Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a70ff6d084acdebb1155bea8b96e5835a</Anchor>
    <Abstract>Construct a new, empty buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>ae51357251be1cecf9ee8de9631785018</Anchor>
    <Abstract>Construct a new buffer of the given size.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a2b3c8ce7f95ba4f7f40e334ff93f4c0d</Anchor>
    <Abstract>Destruct the buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a95293d35e04ed800e762f76dad073f6f</Anchor>
    <Abstract>Flush the buffer, deleting all data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a769d83539b1aa93fb754220458626d0a</Anchor>
    <Abstract>Tighten the allocated memory to the size of the buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a4a3800e06244e01918c60cd83fc295b6</Anchor>
    <Abstract>Copy constructor, transfers ownership to new Buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a07478e1ff9110257d6d7a593a83bba48</Anchor>
    <Abstract>Assignment operator, copies data from Buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a522f1141663586eee40c27669b8e3e60</Anchor>
    <Abstract>Direct access to the element at the given index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a6066758e9f572c67cdf56586cd1e7cca</Anchor>
    <Abstract>Direct const access to an element.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>ad3c950df375b7d1f457dd5ec34be30da</Anchor>
    <Abstract>Ensure that the buffer contains at least newSize elements.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>grow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a22f46879d735b99b0729801c83c21aca</Anchor>
    <Abstract>Ensure that the buffer contains at least newSize elements.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reserve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>addfabfb7f22260355103d592b0514bb0</Anchor>
    <Abstract>Ensure that the buffer contains at least newSize elements.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a09cedc2aa82318786603846d25a84d3e</Anchor>
    <Abstract>Set the buffer size and malloc enough memory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a8822e4d6f172fbc191dfadff6f746522</Anchor>
    <Abstract>Append elements to the buffer, increasing the size.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a15955a5c1508279cf5270122970a7644</Anchor>
    <Abstract>Append one element to the buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a1767c86aea29984ae9aba9d561bdf8d6</Anchor>
    <Abstract>Replace the existing data with new data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a7327ca5653b02199c0e70a4dbd920464</Anchor>
    <Abstract>Swap the buffer contents with another Buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a5a1df816266888ecfd2099487272f35c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>aecbaafe615ddc2326590625f32353dd8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a05f9a3b32dcf7b958c4219381b87e40f</Anchor>
    <Abstract>Set the size of the buffer without changing its allocation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a881d825c0f91602de075fd48cb91c479</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>a175548199cab043bf3d1899ce850bbc6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Buffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Buffer.html</Path>
    <Anchor>ad668dc95c56eaab35b14b06ee3a9f8e0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::Clock</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::Clock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Clock.html</Path>
    <Abstract>A class for time measurements.</Abstract>
    <DeclaredIn>clock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Clock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Clock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Clock.html</Path>
    <Anchor>ada633b3961b0eece40decbeb02105449</Anchor>
    <Abstract>Construct a new clock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Clock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Clock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Clock.html</Path>
    <Anchor>a67edaa8095b0d359173bb83568d40291</Anchor>
    <Abstract>Destroy the clock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Clock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Clock.html</Path>
    <Anchor>a2315ad8b47ba8c4255ca2d1d98317284</Anchor>
    <Abstract>Reset the base time of the clock to the current time.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Clock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Clock.html</Path>
    <Anchor>a831711d4be118d6ad10699d32bacbe1b</Anchor>
    <Abstract>Set the current time of the clock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Clock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Clock.html</Path>
    <Anchor>aef21f5327447f821c11de396255bdabd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTimef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Clock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Clock.html</Path>
    <Anchor>aed26d412055b06e5fd3edae0d2fe8352</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTime64</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Clock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Clock.html</Path>
    <Anchor>ad5942e9976b1ca6d9bfb1643f3c64866</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Clock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Clock.html</Path>
    <Anchor>a7e44d277787ca1cdb8db0f59cd3be0f2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMilliSecondsf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Clock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Clock.html</Path>
    <Anchor>a1d15989e3bf15dd2d00da06c28f4b029</Anchor>
    <Abstract>Returns the millisecond part of the time elapsed since the last reset.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::Condition</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::Condition</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Condition.html</Path>
    <Abstract>A condition variable and associated lock.</Abstract>
    <DeclaredIn>condition.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Condition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Condition</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Condition.html</Path>
    <Anchor>a53f02eff62295e48eac974444bb9221f</Anchor>
    <Abstract>Construct a new condition variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Condition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Condition</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Condition.html</Path>
    <Anchor>a536ff552204367a33d9c719c179d8ff5</Anchor>
    <Abstract>Destruct this condition variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Condition</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Condition.html</Path>
    <Anchor>aa6069bddd9aea61a5932101c534fb182</Anchor>
    <Abstract>Lock the mutex.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Condition</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Condition.html</Path>
    <Anchor>abb20a39c7a76530824776be0d22b332a</Anchor>
    <Abstract>Unlock the mutex.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>signal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Condition</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Condition.html</Path>
    <Anchor>a6bc2556ffe7c9a75c0ab0fd1d2d614ba</Anchor>
    <Abstract>Signal the condition.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>broadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Condition</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Condition.html</Path>
    <Anchor>a4f74f2635210861ccf00c542cf8d776b</Anchor>
    <Abstract>Broadcast the condition.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wait</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Condition</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Condition.html</Path>
    <Anchor>a7c2a49b5ce5a9d00e219a760556e74ea</Anchor>
    <Abstract>Atomically unlock the mutex, wait for a signal and relock the mutex.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timedWait</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Condition</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Condition.html</Path>
    <Anchor>a7bfee3a5480433c8f45d79ae362556fc</Anchor>
    <Abstract>Atomically unlock the mutex, wait for a signal and relock the mutex.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::DSO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::DSO</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1DSO.html</Path>
    <Abstract>Helper to access dynamic shared objects (DSO)</Abstract>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DSO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::DSO</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1DSO.html</Path>
    <Anchor>a46dae5d65d113ffce515b28deba3e99e</Anchor>
    <Abstract>Construct a new dynamic shared object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DSO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::DSO</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1DSO.html</Path>
    <Anchor>aa93728643dfb2cf7bef5aca809e8655f</Anchor>
    <Abstract>Destruct this DSO handle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::DSO</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1DSO.html</Path>
    <Anchor>a4831c1bcc79da2db28bcbdd1ca9bf7f2</Anchor>
    <Abstract>Open a dynamic shared object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::DSO</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1DSO.html</Path>
    <Anchor>a84d0470c3613104195e2c161cf19994f</Anchor>
    <Abstract>Close the DSO, invalidates retrieved function pointers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFunctionPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::DSO</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1DSO.html</Path>
    <Anchor>a1840abd7137b98c798134f315fc68703</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::DSO</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1DSO.html</Path>
    <Anchor>ae2d346b5d091a741b0d29674dad9e34e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::ErrorRegistry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::ErrorRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ErrorRegistry.html</Path>
    <Abstract>A registry translating error codes to strings.</Abstract>
    <DeclaredIn>errorRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ErrorRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ErrorRegistry.html</Path>
    <Anchor>a78d85e9caf6860587f87ecd646bdce87</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ErrorRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ErrorRegistry.html</Path>
    <Anchor>a1856c02ebe363d87f9466e597d29358d</Anchor>
    <Abstract>Set an error string for the given error code.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>eraseString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ErrorRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ErrorRegistry.html</Path>
    <Anchor>a8d5cbe13522c5bc3c042011e2b886b6d</Anchor>
    <Abstract>Clear a given error code string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::ExecutionListener</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::ExecutionListener</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ExecutionListener.html</Path>
    <Abstract>A listener interface to monitor execution unit (Thread, Process) state changes.</Abstract>
    <DeclaredIn>executionListener.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ExecutionListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ExecutionListener</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ExecutionListener.html</Path>
    <Anchor>a0e66082f8e7d3fda06a59affbe7529f5</Anchor>
    <Abstract>Destruct the execution listener.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyExecutionStarted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ExecutionListener</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ExecutionListener.html</Path>
    <Anchor>abfbf85db5edef0bbec484ae4430e3af8</Anchor>
    <Abstract>Notify that a new execution unit started.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyExecutionStopping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ExecutionListener</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ExecutionListener.html</Path>
    <Anchor>ae51c36dc5beb7b26d75559055f7972e9</Anchor>
    <Abstract>Notify that the execution unit is about to stop.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::Global</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Global.html</Path>
    <Abstract>Global parameter handling for the Equalizer base library.</Abstract>
    <DeclaredIn>global.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPluginRegistry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::base::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Global.html</Path>
    <Anchor>a7bf5f6bb27d5b9bf9c11bb3cc2be4b44</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getErrorRegistry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::base::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Global.html</Path>
    <Anchor>a89855cf459584574229c6db5d40de061</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>co::base::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Global.html</Path>
    <Anchor>af5cf8493c4313ec35804429bcbbda93a</Anchor>
    <Abstract>Initialize the Equalizer base classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>co::base::Global</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Global.html</Path>
    <Anchor>a2171b74c8c0ff2039491bdc338d05f79</Anchor>
    <Abstract>De-initialize the Equalizer base classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::PtrHash</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::base::PtrHash</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PtrHash.html</Path>
    <Abstract>A hash for pointer keys.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::hashRefPtr</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::base::hashRefPtr</Scope>
    </TokenIdentifier>
    <Path>structco_1_1base_1_1hashRefPtr.html</Path>
    <Abstract>A hash function for RefPtr keys.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::RefPtrHash</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::base::RefPtrHash</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtrHash.html</Path>
    <Abstract>A hash for RefPtr keys.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::UUIDHash</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::base::UUIDHash</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1UUIDHash.html</Path>
    <Abstract>A hash for UUID keys.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::Launcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::Launcher</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Launcher.html</Path>
    <Abstract>The launcher executes a command from a separate process.</Abstract>
    <DeclaredIn>launcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::base::Launcher</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Launcher.html</Path>
    <Anchor>a3a4b13700488418073db08e5e2f9cf54</Anchor>
    <Abstract>Execute the given command in a new process.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::LFQueue</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::base::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1LFQueue.html</Path>
    <Abstract>A thread-safe, lock-free queue with non-blocking access.</Abstract>
    <DeclaredIn>lfQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LFQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1LFQueue.html</Path>
    <Anchor>a7021dfb71123abf98a9fadad2b9efe01</Anchor>
    <Abstract>Construct a new queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~LFQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1LFQueue.html</Path>
    <Anchor>a346f9a02914faac02e3ce3aee3ed8645</Anchor>
    <Abstract>Destruct this queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1LFQueue.html</Path>
    <Anchor>af1e9fa13b2d14730ab124abe2592aa12</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1LFQueue.html</Path>
    <Anchor>a81a5ab93aa295882b0888c77b5c136fe</Anchor>
    <Abstract>Reset (empty) the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1LFQueue.html</Path>
    <Anchor>a06a036a979970b5706636c446590cc8f</Anchor>
    <Abstract>Resize and reset the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1LFQueue.html</Path>
    <Anchor>aab209231fdfe421a9d246d334c9eff2e</Anchor>
    <Abstract>Retrieve and pop the front element from the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1LFQueue.html</Path>
    <Anchor>a48bcd9d6893aafe742de7a6387ed168f</Anchor>
    <Abstract>Retrieve the front element from the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1LFQueue.html</Path>
    <Anchor>a4696880c78170a05501840e57a94a0d3</Anchor>
    <Abstract>Push a new element to the back of the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCapacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1LFQueue.html</Path>
    <Anchor>af26c40b37169fd31901c846f7691cb16</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::Lock</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::Lock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Lock.html</Path>
    <Abstract>A lock (mutex) primitive.</Abstract>
    <DeclaredIn>lock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Lock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Lock.html</Path>
    <Anchor>a9f10859f0e5bed4aaba1456268326dfb</Anchor>
    <Abstract>Construct a new lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Lock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Lock.html</Path>
    <Anchor>a0f14741675af864aa557901c096de503</Anchor>
    <Abstract>Destruct the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Lock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Lock.html</Path>
    <Anchor>a558675567538ef32c771ad2bd942887f</Anchor>
    <Abstract>Acquire the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Lock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Lock.html</Path>
    <Anchor>aa3dc91d5d2bc018b8490d58f2aa13fbf</Anchor>
    <Abstract>Release the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trySet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Lock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Lock.html</Path>
    <Anchor>a3ea713a6f6fa1ecd98ff0aeda53b6bc5</Anchor>
    <Abstract>Attempt to acquire the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Lock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Lock.html</Path>
    <Anchor>a558f4440193e801e75ea4efd1d2c212e</Anchor>
    <Abstract>Test if the lock is set.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::Lockable</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::base::Lockable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Lockable.html</Path>
    <Abstract>A convenience structure to hold data together with a lock for access.</Abstract>
    <DeclaredIn>lockable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lockable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Lockable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Lockable.html</Path>
    <Anchor>af78a28ecb0e870a6ee43d30b00ab5d11</Anchor>
    <Abstract>Construct a new lockable data structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lockable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Lockable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Lockable.html</Path>
    <Anchor>a8c7550708e49682fbb0e92db1d553aab</Anchor>
    <Abstract>Construct and initialize a new data structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Lockable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Lockable.html</Path>
    <Anchor>a7f3526f397e143d5ca7b8c2c2e812f05</Anchor>
    <Abstract>Access the held data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Lockable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Lockable.html</Path>
    <Anchor>a428e22c4d4884120722990946b0f752a</Anchor>
    <Abstract>Access the held data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Lockable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Lockable.html</Path>
    <Anchor>aa2bd4403a3c799c2a7ea740c6039e9f9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Lockable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Lockable.html</Path>
    <Anchor>a3f2fb6d5c26a8019b0e66f5fa88e7598</Anchor>
    <Abstract>Assign another value to the data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::LogBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::LogBuffer</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1LogBuffer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::Log</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::Log</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Log.html</Path>
    <Abstract>The logging class.</Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::base::Log</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Log.html</Path>
    <Anchor>a1d0a010a9c6d3599eecfa2b1e3b601f3</Anchor>
    <Abstract>The per-thread logger.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::base::Log</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Log.html</Path>
    <Anchor>a6300a3ebd5c689a7b98130417733bc42</Anchor>
    <Abstract>The per-thread logger.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::base::Log</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Log.html</Path>
    <Anchor>ab4f38023b94ba07feb205a637668d747</Anchor>
    <Abstract>Exit the log instance for the current thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLogLevelString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::base::Log</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Log.html</Path>
    <Anchor>adb4bc9a71fa8860669e5cc0170b0cd6e</Anchor>
    <Abstract>The string representation of the current log level.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::base::Log</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Log.html</Path>
    <Anchor>aed741187ddf67dbff527fbb1feba28eb</Anchor>
    <Abstract>Change the output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::base::Log</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Log.html</Path>
    <Anchor>a6af4a36f082d7eb774ba6b61a4cf1755</Anchor>
    <Abstract>Get the current output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::base::Log</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Log.html</Path>
    <Anchor>a25ed903070db123f027d16fca84d07e6</Anchor>
    <Abstract>Set the reference clock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>level</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::base::Log</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Log.html</Path>
    <Anchor>a8ea635f84e87d705b22e8640c0885196</Anchor>
    <Abstract>The current log level.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>topics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::base::Log</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Log.html</Path>
    <Anchor>a7877a84cdeae4c59cad5d0a91392c05a</Anchor>
    <Abstract>The current log topics.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::MemoryMap</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MemoryMap.html</Path>
    <Abstract>Helper to map a file to a memory address (mmap)</Abstract>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MemoryMap.html</Path>
    <Anchor>a5a55b981f7e357ef1358b688934038ca</Anchor>
    <Abstract>Construct a new memory map.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MemoryMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MemoryMap.html</Path>
    <Anchor>abba0c27d424d38d5458822798fff3594</Anchor>
    <Abstract>Destruct the memory map.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MemoryMap.html</Path>
    <Anchor>a87c99941e686c8a58024ac3fd8819f35</Anchor>
    <Abstract>Map a file to a memory address.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MemoryMap.html</Path>
    <Anchor>a125b1296de6a8186efaab304ef1a98ef</Anchor>
    <Abstract>Unmap the file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAddress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MemoryMap.html</Path>
    <Anchor>a04ef1ee011528e433c15861f8e4d6338</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MemoryMap.html</Path>
    <Anchor>a0ad101c17fd023561b3cb6483f92b3c1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::Monitor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Abstract>A monitor primitive.</Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Monitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>ab200f903554fd31f512d21dc4269298d</Anchor>
    <Abstract>Constructs a new monitor with a default value of 0.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Monitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>a01b745b62bfdc72e9dbf247e0ccecf4c</Anchor>
    <Abstract>Constructs a new monitor with a given default value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Monitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>a8603be6d7763d343e99cc09d9fe4cbad</Anchor>
    <Abstract>Destructs the monitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>a07bb70e1655e181814f2fddb0576291e</Anchor>
    <Abstract>Increment the monitored value, prefix only.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>a8ee4d41e66f53b1f0f2a27aa70c652f6</Anchor>
    <Abstract>Decrement the monitored value, prefix only.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>a8001c254fd306996c09e1340b5966340</Anchor>
    <Abstract>Assign a new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator|=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>a8a0c60a22cd1db24c136f36881805ed7</Anchor>
    <Abstract>Perform an or operation on the value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>a888dfea8d87a3c828f28f7e198691ab3</Anchor>
    <Abstract>Set a new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitEQ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>ac0b3abc6902b8248d561e325d9dd6eba</Anchor>
    <Abstract>Block until the monitor has the given value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitNE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>ab28493f608da639447dfa6ae3860efc4</Anchor>
    <Abstract>Block until the monitor has not the given value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitNE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>a4435dd835c1f868d0e73529b41fbb2b8</Anchor>
    <Abstract>Block until the monitor has none of the given values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitGE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>afa5d99e18477a36b65c37a47fe1a8baf</Anchor>
    <Abstract>Block until the monitor has a value greater or equal to the given value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>a46864b41aad30134c5c3861e8b7050e4</Anchor>
    <Abstract>Block until the monitor has a value less or equal to the given value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>a2bbca206a87d46913bcf156c6c34cc4c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>aa85babff427061ec5c8a57185d47ef28</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>ac60732a79aa1a3ffbbdd58da73b55e31</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator|</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>a1ad0aec5568bd5caff9e7ed4b5330c05</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&amp;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Monitor</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Monitor.html</Path>
    <Anchor>a083dc1aef925ec3b7ba384efe187143d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::MTQueue</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Abstract>A thread-safe queue with a blocking read access.</Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MTQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>a4c007582a8d7def1001aa6ff28cc2cbb</Anchor>
    <Abstract>Construct a new queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MTQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>a704461ff5d3d4f91993bfc14b22f0f7a</Anchor>
    <Abstract>Construct a copy of a queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MTQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>a2c6288975f58fd08ff85fcd917ff1560</Anchor>
    <Abstract>Destruct this Queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>a0bd26612c8f61beb604709105a8ec38d</Anchor>
    <Abstract>Assign the values of another queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>a766cb1610a2b6ce9fee92a9fc44357fc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>aab1dce922f052bcd98dbc408aa08c41e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>a88d2e84b1a524c04150fc6698612600c</Anchor>
    <Abstract>Wait for the size to be at least the number of given elements.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>ab7ce1469a3aca06792cbc1e678abad86</Anchor>
    <Abstract>Reset (empty) the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>a04d7abba6c7e5a896c6a7fa19f491f53</Anchor>
    <Abstract>Retrieve and pop the front element from the queue, may block.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tryPop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>a5ca9a6d6e9bfe04cc82a53cdbf9cf979</Anchor>
    <Abstract>Retrieve and pop the front element from the queue if it is not empty.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>ad3c6eb031a9df9a3560ef38a2f039e7e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>a0df9c9b7f83bec3be96ba9878caaf953</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>ad2e6274238d625204e74938f6bae6251</Anchor>
    <Abstract>Push a new element to the back of the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>a2b361015ee13f72f29591f9453d40a1a</Anchor>
    <Abstract>Push a vector of elements to the back of the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>adfd833a0fe2b29693430321f4875dfc8</Anchor>
    <Abstract>Push a new element to the front of the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1MTQueue.html</Path>
    <Anchor>adf851e1e3bce896ac355dc7dcc1d7018</Anchor>
    <Abstract>Push a vector of elements to the front of the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::NonCopyable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::NonCopyable</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1NonCopyable.html</Path>
    <Abstract>Base class to make objects non-copyable.</Abstract>
    <DeclaredIn>nonCopyable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::OMP</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::OMP</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1OMP.html</Path>
    <Abstract>Base class for OpenMP functionality.</Abstract>
    <DeclaredIn>omp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNThreads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::base::OMP</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1OMP.html</Path>
    <Anchor>a3981bf5ea9b19bfdb2b3c882cb52cf9c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::PerThread</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Abstract>Implements thread-specific storage for C++ objects.</Abstract>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PerThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>a5be1ebd01fb6a7ab14263b1225742b45</Anchor>
    <Abstract>Construct a new per-thread variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PerThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>ae07954b2b88f165258f4a3fa9eabad51</Anchor>
    <Abstract>Destruct the per-thread variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>a50675090151881b27d16e026062c1bdd</Anchor>
    <Abstract>Assign an object to the thread-local storage.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>a1a3794d61806ccc1b82d6a4548fd7b21</Anchor>
    <Abstract>Assign an object from another thread-local storage.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>a3658bd84e76349b87fb3f33d19f0fdfb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>aac36de589e94765be0102e17c2389f93</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>a49537bfa1114fe9c8b3a5f086a3a1fae</Anchor>
    <Abstract>Access the thread-local object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>aeba330553478423d0b2b68b7967b0b6a</Anchor>
    <Abstract>Access the thread-local object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>a76d43becb131aa191bbb3cd6250311b2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>a062586e519c34b14234d35c36494b29f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>a086577b48fd85c9002d89036df41b858</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>ab564491e18965faf6357d7f259803961</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>aed12c89a97d4900b2b43b97934d4befb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>a9e9b783494f5a5bf9d5a7b610ab83e2a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>a5084ae528c635cd99fe322309673ffeb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyExecutionStopping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThread.html</Path>
    <Anchor>a50ccbe2b5ea157b451aa895c94ccedca</Anchor>
    <Abstract>Notify that the execution unit is about to stop.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::PerThreadRef</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::base::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThreadRef.html</Path>
    <Abstract>Thread-specific storage for a RefPtr.</Abstract>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PerThreadRef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThreadRef.html</Path>
    <Anchor>af625f33f75c0b3b595217090a2cb71d3</Anchor>
    <Abstract>Construct a new per-thread RefPtr.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PerThreadRef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThreadRef.html</Path>
    <Anchor>ab420f87cecd58ddc6f01dc18b681bc4e</Anchor>
    <Abstract>Destruct a per-thread RefPtr.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThreadRef.html</Path>
    <Anchor>af975a3054ff19d7e3eae09bfe3bf216e</Anchor>
    <Abstract>Assign a RefPtr to the thread-local storage.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThreadRef.html</Path>
    <Anchor>a39ffdb043532362676da08eed81b62d0</Anchor>
    <Abstract>Assign a RefPtr to the thread-local storage.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThreadRef.html</Path>
    <Anchor>a5837a54038ec158fe5eba04f026066be</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThreadRef.html</Path>
    <Anchor>a9bc8184ca9d6bce6310b2a2b2b3ed613</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThreadRef.html</Path>
    <Anchor>a496ee00cbe444f114dd915a3e56b9706</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThreadRef.html</Path>
    <Anchor>abd261e23755429671c1f2bd88fe353c1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThreadRef.html</Path>
    <Anchor>a37ce65b94eb79d97ca31fbb95404d3cf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThreadRef.html</Path>
    <Anchor>a7cc6bba4b51932a13070fcee81a430b3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThreadRef.html</Path>
    <Anchor>abeed0c16d4ea123257edd9c6a4c815ad</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThreadRef.html</Path>
    <Anchor>a1d52ae03965809bebaa6bfdbcbf3577f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThreadRef.html</Path>
    <Anchor>a0f375fc1f709b71835183b44ce8e3518</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PerThreadRef.html</Path>
    <Anchor>a2803876ed2e545ce13cf7fcd39f5bbb1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::PluginRegistry</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PluginRegistry.html</Path>
    <Abstract>The registry for all loaded Equalizer plugins.</Abstract>
    <DeclaredIn>pluginRegistry.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PluginRegistry.html</Path>
    <Anchor>a549226f2db2867a09f10e50e1f0cc5ac</Anchor>
    <Abstract>Add a new directory to search for compressor DSOs during init().</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PluginRegistry.html</Path>
    <Anchor>a1ff469b9d2e635d919e45f8b3ff77c9a</Anchor>
    <Abstract>Remove a plugin directory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectories</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::PluginRegistry</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1PluginRegistry.html</Path>
    <Anchor>a9878cc79f24e0107033fc8baa7762012</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::Pool</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::base::Pool</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Pool.html</Path>
    <Abstract>An object allocation pool.</Abstract>
    <DeclaredIn>pool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Pool</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Pool.html</Path>
    <Anchor>a27acf43882b05240b946a69a190d0fc4</Anchor>
    <Abstract>Construct a new pool.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Pool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Pool</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Pool.html</Path>
    <Anchor>af2d3cf9de8ec52810c8cf759fd1de9a1</Anchor>
    <Abstract>Destruct this pool.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alloc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Pool</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Pool.html</Path>
    <Anchor>a00875f882b9c7eccb7dc709990c22e64</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Pool</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Pool.html</Path>
    <Anchor>ad47f94133e807073193dadf51b401e04</Anchor>
    <Abstract>Release an item for reuse.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Pool</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Pool.html</Path>
    <Anchor>a9386daa655142fc525a5c474d18833c2</Anchor>
    <Abstract>Delete all cached items.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::Referenced</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::Referenced</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Referenced.html</Path>
    <Abstract>Base class for referenced objects.</Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ref</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Referenced</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Referenced.html</Path>
    <Anchor>ac4fd42ec616bcf3b4fd030b32820a7f5</Anchor>
    <Abstract>Increase the reference count.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unref</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Referenced</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Referenced.html</Path>
    <Anchor>a97a684d705992c8e5908f50a8ea3f709</Anchor>
    <Abstract>Decrease the reference count.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRefCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Referenced</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Referenced.html</Path>
    <Anchor>a4f67aafcc9ab9432f8d293692d897ed5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Referenced</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Referenced.html</Path>
    <Anchor>a204c38dbb7129ba1456181c0dc30b297</Anchor>
    <Abstract>Construct a new reference-counted object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Referenced</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Referenced.html</Path>
    <Anchor>aac4ca8c82130acd6db9cb5bb5d6fe83c</Anchor>
    <Abstract>Construct a new copy of a reference-counted object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Referenced</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Referenced.html</Path>
    <Anchor>a7a1cb64748d793c5e89633ca841e42ec</Anchor>
    <Abstract>Destruct a reference-counted object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::RefPtr</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Abstract>A smart reference pointer.</Abstract>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RefPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>a30db938bb5960ac9c5d8dd466e4d6d92</Anchor>
    <Abstract>Construct a new, empty reference pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RefPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>a1e5fd1925b6ef710b2fac92369543bd6</Anchor>
    <Abstract>Construct a reference pointer from a C pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RefPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>a1161d26d5495aa83b3feaec3200f9348</Anchor>
    <Abstract>Construct a copy of a reference pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RefPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>a8cff33dacca0d5026c76a81558feee03</Anchor>
    <Abstract>Construct a copy of a reference pointer of a different type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RefPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>aec29f30175d1bd489a3c827be539e04d</Anchor>
    <Abstract>Destruct this reference pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>a852c40ea08903b408a802d913a1ebbc7</Anchor>
    <Abstract>Assign another RefPtr to this reference pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>a44dc2cab4077e7f9622d9c7ed8a2e376</Anchor>
    <Abstract>Assign a C pointer to this reference pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>a85ca1e50ebf6909989daafaa40fbae8b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>af6a9cdeb4edb74a02dedaaa97792a747</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>adb5ffd916b93dbc3c2019352e8acbc76</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>a10cd9adb91ea240c8c9c452911eadb62</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>aa092717e2aa07196314ee63143926c36</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>a7451d14157920a40548ebca816d6163d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>a9fefb36c39097ea7c8db54cf0d3b8898</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>aeacfc58e7bc7fc24a1d00cbfc21b4ab0</Anchor>
    <Abstract>Access the held object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>ae6f73e2258764b067c4986714cdab2a3</Anchor>
    <Abstract>Access the held object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>aee55f51a32a3fee71010ee95df51a369</Anchor>
    <Abstract>Access the held object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>a939c8e614e5715b3a48372cbbb739bbb</Anchor>
    <Abstract>Access the held object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>ab24077c5bc71431ea600bf706c6b4ecf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>a65a429bb7d3a99751270867f5fd3e171</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RefPtr.html</Path>
    <Anchor>a74d456e5f29e50541daaffb0ec034ac9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::RequestHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Abstract>A thread-safe request handler.</Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>a557544e5ac7cc8b76b09dae066e27db9</Anchor>
    <Abstract>Construct a new request handler.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RequestHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>a605fa1603128ffd41094b45969c2ef7b</Anchor>
    <Abstract>Destruct the request handler.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>a1a7fc19f4221e1bf504b5d1b812b665c</Anchor>
    <Abstract>Register a new request.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unregisterRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>a12c887afb89b157e484424b6b0f7543c</Anchor>
    <Abstract>Unregister a request.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>a821da590c9d4ec8510aaea668f80af68</Anchor>
    <Abstract>Wait a given time for the completion of a request.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>aab7cb076c747f2c82a99f2db3c143fe2</Anchor>
    <Abstract>Wait for a request with an uint32_t result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>a8a2808537fbb8a81590919cee01b3d8d</Anchor>
    <Abstract>Wait for a request with a bool result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>aa18e0b716943a8f2568a85047dcdac82</Anchor>
    <Abstract>Wait for a request with an uint128_t result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>a809f5e6a9328173d0314f9838a0f5e7f</Anchor>
    <Abstract>Wait for a request without a result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequestServed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>a93e99764b976f3527458b0bdc2cc1370</Anchor>
    <Abstract>Poll for the completion of a request.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRequestData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>a671b9c14be08bcb988cbd379e668d4ef</Anchor>
    <Abstract>Retrieve the user-specific data for a request.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serveRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>a2567ef9b924516b0d9eea55f07f1abe0</Anchor>
    <Abstract>Serve a request with a void* result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serveRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>a1b1507ac957be6c2bb10bf2c700b40ab</Anchor>
    <Abstract>Serve a request with an uint32_t result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serveRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>a31f8d03c8f535a3c4c383d25cd7435d5</Anchor>
    <Abstract>Serve a request with a bool result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serveRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>ad260b0342e4a4b553c9bbc91389c1022</Anchor>
    <Abstract>Serve a request with an uint128_t result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPendingRequests</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RequestHandler.html</Path>
    <Anchor>a40a93b92dc707ced6ae5c6f1669bc940</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::RNG</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::RNG</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RNG.html</Path>
    <Abstract>A random number generator.</Abstract>
    <DeclaredIn>rng.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RNG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RNG</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RNG.html</Path>
    <Anchor>aa5720f5a7503d8e88e1e5ac8998330f6</Anchor>
    <Abstract>Construct a new random number generator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RNG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RNG</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RNG.html</Path>
    <Anchor>a437146ef53765e91a190f732905f61b4</Anchor>
    <Abstract>Destruct the random number generator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reseed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RNG</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RNG.html</Path>
    <Anchor>abc7fa786a578325d8434cd5438424d8c</Anchor>
    <Abstract>Re-initialize the seed value for pseudo RNG&amp;#39;s.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::RNG</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RNG.html</Path>
    <Anchor>ac48a1dd6009bd6e3edef2f5c6ebdc3f0</Anchor>
    <Abstract>Generate a random number.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>co::base::RNG</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RNG.html</Path>
    <Anchor>af5cf8493c4313ec35804429bcbbda93a</Anchor>
    <Abstract>Initialize the Equalizer base classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>co::base::RNG</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1RNG.html</Path>
    <Anchor>a2171b74c8c0ff2039491bdc338d05f79</Anchor>
    <Abstract>De-initialize the Equalizer base classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::ScopedMutex</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>co::base::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ScopedMutex.html</Path>
    <Abstract>A scoped mutex.</Abstract>
    <DeclaredIn>scopedMutex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedMutex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ScopedMutex.html</Path>
    <Anchor>a923e16b602ccb58c4c052293af19268f</Anchor>
    <Abstract>Construct a new scoped mutex and set the given lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedMutex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ScopedMutex.html</Path>
    <Anchor>a5b293ec5fe77b65460f4b88fc797bf52</Anchor>
    <Abstract>Construct a new scoped mutex and set the given lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedMutex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ScopedMutex.html</Path>
    <Anchor>ac6631af1097413e9135709b897b6e520</Anchor>
    <Abstract>Construct a new scoped mutex for the given Lockable data structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ScopedMutex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ScopedMutex.html</Path>
    <Anchor>af040087e29c46ec37eef2d128907b373</Anchor>
    <Abstract>Destruct the scoped mutex and unset the mutex.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ScopedMutex.html</Path>
    <Anchor>a004df99501ff1421f7d1156840a08681</Anchor>
    <Abstract>Leave and unlock the mutex immediately.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::SpinLock</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1SpinLock.html</Path>
    <Abstract>A fast lock for uncontended memory access.</Abstract>
    <DeclaredIn>spinLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpinLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1SpinLock.html</Path>
    <Anchor>ac46753b9edf75a2dfdd0f4afbe4fe4c9</Anchor>
    <Abstract>Construct a new lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpinLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1SpinLock.html</Path>
    <Anchor>a015889c7e15f6cd4c37fff4160190a5e</Anchor>
    <Abstract>Destruct the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1SpinLock.html</Path>
    <Anchor>a646f33efaab2b1cc36d6028c6dba4e89</Anchor>
    <Abstract>Acquire the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1SpinLock.html</Path>
    <Anchor>ab7afeb61b6eb783e8ea8515c54e59b39</Anchor>
    <Abstract>Release the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trySet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1SpinLock.html</Path>
    <Anchor>ab91b7e46b76db9d160fe0f5a1f8a1dcd</Anchor>
    <Abstract>Attempt to acquire the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1SpinLock.html</Path>
    <Anchor>a44dd363a01fb7192c146f297675799be</Anchor>
    <Abstract>Test if the lock is set.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::Thread</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Abstract>An utility class to execute code in a separate execution thread.</Abstract>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>a9312b39c5a389990da08e32e3038c70e</Anchor>
    <Abstract>Construct a new thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>abb1cfb735121b81d69f51c0133b7e9ca</Anchor>
    <Abstract>Destruct the thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>accaaf1c51839891fe4f9535974942b91</Anchor>
    <Abstract>Start the thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>abd6fd962a6728252a872c9fc56a94560</Anchor>
    <Abstract>The init function for the child thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>a2313e2138766473de734dd865f600a32</Anchor>
    <Abstract>The entry function for the child thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>a1076e0ef9afa70c0057ed018490688ac</Anchor>
    <Abstract>Exit the child thread immediately.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>a4b75c6f33b833ddc781e9ffb55c1b719</Anchor>
    <Abstract>Cancel (stop) the child thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>join</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>af79e061817ab0f867e175e365e8c956b</Anchor>
    <Abstract>Wait for the exit of the child thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStopped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>a3c7c2fdda28dfd91f178ca28d938c7a3</Anchor>
    <Abstract>Return if the thread is stopped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>a83ade324a13f1d0f9d25880880b19d89</Anchor>
    <Abstract>Return if the thread is running.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>af6a74b32b3ccc32bae27d3a46ec91b84</Anchor>
    <Abstract>Returns if this thread object is the current (calling) thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>acfac6b11b6b74cecc952b12ca18b900a</Anchor>
    <Abstract>Add a new thread state listener.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>a90d610e4212fdaf24d87eb89a47d5876</Anchor>
    <Abstract>Remove a thread state listener.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllListeners</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>af45a7b2a5b223a48ce26d16776996114</Anchor>
    <Abstract>Remove all registered listeners, used at exit.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSelfThreadID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>a0b74b5b3c3a1f6c7a1ba1f36b97fe82d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>co::base::Thread</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1Thread.html</Path>
    <Anchor>a6c70952d7fbecf91d9407607ccad6b39</Anchor>
    <Abstract>Print the thread to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::ThreadID</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ThreadID.html</Path>
    <Abstract>An utility class to wrap OS-specific thread identifiers.</Abstract>
    <DeclaredIn>threadID.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ThreadID.html</Path>
    <Anchor>a47e4c781017305b1d6bbf877321b66e1</Anchor>
    <Abstract>Construct a new, zero thread identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ThreadID.html</Path>
    <Anchor>ac92f85d3d4ed05a7723389dd21c5b28a</Anchor>
    <Abstract>Construct a copy of a thread identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThreadID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ThreadID.html</Path>
    <Anchor>a61e0c18c02f0efdb946a73834016aedd</Anchor>
    <Abstract>Destruct this thread identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ThreadID.html</Path>
    <Anchor>ac6f79bbb98192b164b8daad42ded5e6e</Anchor>
    <Abstract>Assign another thread identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ThreadID.html</Path>
    <Anchor>aa4932875b90417ffff5a71f78c568a8f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ThreadID.html</Path>
    <Anchor>a019755f32b2b45d39e4edff7181525ed</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZERO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::base::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ThreadID.html</Path>
    <Anchor>aff63b8d33343dc3188669f9be5aea3b3</Anchor>
    <Abstract>a &amp;#39;NULL&amp;#39; thread identifier</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>co::base::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1ThreadID.html</Path>
    <Anchor>abf1f3e7bc56b10030c87b97be6186b6b</Anchor>
    <Abstract>Print the thread to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::TimedLock</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1TimedLock.html</Path>
    <Abstract>A mutex with timeout capabilities.</Abstract>
    <DeclaredIn>timedLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TimedLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1TimedLock.html</Path>
    <Anchor>a90efd153e703cbd07e95e41e498b3346</Anchor>
    <Abstract>Construct a new timed lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TimedLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1TimedLock.html</Path>
    <Anchor>aa8bc3ef6415d74980f1cecb529686bfe</Anchor>
    <Abstract>Destruct the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1TimedLock.html</Path>
    <Anchor>ae0c8f8e40a934f1c4d440a3479ea7125</Anchor>
    <Abstract>Set the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1TimedLock.html</Path>
    <Anchor>a7825eaeabdc64f395d99422d65866d7e</Anchor>
    <Abstract>Release the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trySet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1TimedLock.html</Path>
    <Anchor>a5b504aadba56b943f2bfca92422b1be7</Anchor>
    <Abstract>Attempt to set the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1TimedLock.html</Path>
    <Anchor>a077033fe8e2e568b82a869041d1474a2</Anchor>
    <Abstract>Test if the lock is set.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::uint128_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Abstract>A base type for 128 bit unsigned integer values.</Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uint128_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>ad38fc26023fe04bf34b074d2a2de74f2</Anchor>
    <Abstract>Construct a new 128 bit integer with a default value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uint128_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>ad681ea6901dced39bc5b7f72e4eee0fd</Anchor>
    <Abstract>Construct a new 128 bit integer with default values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>a650996421f13cc897b0757aae421d076</Anchor>
    <Abstract>Assign another 128 bit value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>aac443fcb06872925cd19fa27f6296a85</Anchor>
    <Abstract>Assign an 128 bit value from a std::string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>a0f24cb8ae08128adfc236ae834f6b1f6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>ab1fcc0726820e4f0f40f9e5638741cb3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>a5e5f740aa618e75c6ab7a3e5dba6292d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>aa70271c4d62724ce7bd2237d2d8b7691</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>a0f168be243106b8ba8a5abb890a6fcb3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>a4157c6d153d50a2eae3ce95e58a2bfd6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>ae500434ceab2fbaf330dce60fe60b197</Anchor>
    <Abstract>Increment the value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>a7be0025b916854adf74b3a65b794af7a</Anchor>
    <Abstract>Decrement the value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>low</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>a0e9178e2c709ac00aa76c4caa7f4ca4a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>high</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>adc904b4c71c2ce8fad89040c52a6d0fe</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>low</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>a2c141ef53ba4514eb5af5d87a52966a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>high</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>a90722dcfcd5154d90f8d6b5788e76a65</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShortString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1uint128__t.html</Path>
    <Anchor>a9bf3b7f4f9f17bd28093299352310393</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>co::base::UUID</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>co::base::UUID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1UUID.html</Path>
    <Abstract>Provides a universally unique identifier.</Abstract>
    <DeclaredIn>uuid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UUID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::UUID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1UUID.html</Path>
    <Anchor>a99327163d3f616509825903880e6c323</Anchor>
    <Abstract>Construct a new universally unique identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UUID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::UUID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1UUID.html</Path>
    <Anchor>ad27efb2d1f907ad764162f8eda3114c9</Anchor>
    <Abstract>Construct a new universally unique identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UUID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::UUID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1UUID.html</Path>
    <Anchor>a4487ec680cffdfb681c8e9bf5e3f21d5</Anchor>
    <Abstract>Construct a new universally unique identifier from an unsigned 128 bit integer value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::UUID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1UUID.html</Path>
    <Anchor>ac7996630f1554090f988ecedd2642e8c</Anchor>
    <Abstract>Assign another UUID from a string representation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGenerated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>co::base::UUID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1UUID.html</Path>
    <Anchor>afd045362a835c3f1779bd089bb59a260</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZERO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>co::base::UUID</Scope>
    </TokenIdentifier>
    <Path>classco_1_1base_1_1UUID.html</Path>
    <Anchor>a84e9e0e941ad4f5004b8d9a46edbf5dd</Anchor>
    <Abstract>The NULL UUID.</Abstract>
  </Token>
</Tokens>
