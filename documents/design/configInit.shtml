#define S_DOCUMENTATION
#define S_DOCUMENTATION_DEVELOPER
#define PAGE Documentation
#define SUBPAGE Developer
#define TITLE Config Initialization Sequence

#include "header.shtml"

<p>
  Author: <a href="mailto:eilemann@gmail.com">eilemann@gmail.com</a><br/>
  State:
  <ul>
    <li>Implemented in 0.3</li>
  </ul>
</p>

<p>
  The following table lists the order of operations during eq::Config::init. The
  same operation for different instances will happen in parallel when the
  instances belong to different threads, e.g., all <code>Pipe::configInit</code>
  are executed in parallel.
</p>
<p>
  Operations for <a href="/documents/design/nonthreaded.html">non-threaded
  pipes</a> are executed in the node thread immediately and in the app thread
  during <code>Config::finishInit</code>. The children for an entity are
  initialized before the next sibling of the entity is initialized, e.g,
  the <code>Channel::configInit</code> task methods for all channels of a window
  are called before the next <code>Window::configInit</code> is executed.
</p>
<table>
  <tr><th>App thread</th> <th>Node thread(s)</th> <th>Pipe thread(s)</th></tr>
  <tr><td colspan="3"><hr></td></tr>
  <tr><td>Config::init</td> <td></td> <td></td></tr>
  <tr><td></td> <td>Config::Config</td> <td></td></tr>
  <tr><td></td> <td>Node::Node</td> <td></td></tr>
  <tr><td></td> <td>Node::configInit</td> <td></td></tr>
  <tr><td></td> <td>Pipe::Pipe</td> <td></td></tr>
  <tr><td></td> <td></td> <td>Pipe::configInit</td></tr>
  <tr><td></td> <td></td> <td>Window::Window</td></tr>
  <tr><td></td> <td></td> <td>Window::configInit</td></tr>
  <tr><td></td> <td></td> <td>Channel::Channel</td></tr>
  <tr><td></td> <td></td> <td>Channel::configInit</td></tr>
  <tr><td>Config::init returns</td> <td></td> <td></td></tr>
  <tr><td colspan="3"><hr></td></tr>
  <tr><td>Config::exit</td> <td></td> <td></td></tr>
  <tr><td></td> <td></td> <td>Channel::configExit</td></tr>
  <tr><td></td> <td></td> <td>Window::configExit</td></tr>
  <tr><td></td> <td></td> <td>Pipe::configExit</td></tr>
  <tr><td></td> <td>Node::configExit</td> <td></td></tr>
  <tr><td></td> <td></td> <td>Channel::~Channel</td></tr>
  <tr><td></td> <td></td> <td>Window::~Window</td></tr>
  <tr><td></td> <td></td> <td>Pipe::~Pipe</td></tr>
  <tr><td></td> <td>Node::~Node</td> <td></td></tr>
  <tr><td></td> <td>Config::~Config</td> <td></td></tr>
  <tr><td>Config::exit returns</td> <td></td> <td></td></tr>
  <tr><td colspan="3"><hr></td></tr>
</table>

<h2>Open Issues</h2>
<p>
  <code>Config::exit</code> should also be separated into <code>startExit</code>
  and <code>finishExit</code>. This will be implemented as soon as it is needed.
#include "footer.shtml"
<!-- $Id$ -->
