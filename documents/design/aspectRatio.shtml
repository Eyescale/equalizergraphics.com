#define S_DOCUMENTATION
#define S_DOCUMENTATION_DEVELOPER
#define PAGE Documentation
#define SUBPAGE Developer
#define TITLE Fixed Aspect Ratio

#include "header.shtml"

<p>
Author: <a href="mailto:eilemann@gmail.com">eilemann@gmail.com</a><br/>
State: Implemented in svn.
</p>

<h2>Overview</h2>
<p>
  This features adds support for resizing windows without changing the aspect
  ratio of the OpenGL rendering in order to avoid the distortion of the
  model. Upon the size change of the associated channel, the horizontal or
  vertical field of view (FOV) of the wall or projection description is updated
  so that rendering is not 'stretched'.
</p>
  
<a name="Implementation"></a>
<h2>Implementation</h2>
<p>
  Modify the wall's width or height or the projection's horizontal or vertical
  field of view upon a channel pixel viewport size change. Upon
  Compound::setChannel, the compound subscribes to the channel viewport change
  notification. Add PixelViewportListener 'interface' and channel PVPListener
  add/remove/notify API. Refactor the existing window/channel size notifications
  to use new listener API.
</p>
<p>
  Retain the initial pvp in the compound upon the first channel pvp
  notification. Upon subsequent pvp notifications, compute the relative change
  to the initial value and adapt wall or projection accordingly. Applying the
  change using the original wall or projection is necessary to eliminate the
  accumulation of rounding errors if incremental updates would be used.
</p>

<h2>API</h2>
<!-- /* --><pre>
    class PixelViewportListener
    {
        virtual void notifyPVPChanged( const eq::PixelViewport& pvp ) {}
    }
    class Compound : public PixelViewportListener
    { ... }
</pre><!-- */ -->

<h2>File Format</h2>
<p>
  <ul>
    <li>HORIZONTAL: The horizontal FOV or wall width is changed to maintain the
      initial aspect ratio. The vertical field of view or wall height is
      unchanged. The rendered content appears resized.</li>
    <li>VERTICAL: Like HORIZONTAL, but the vertical FOV or wall height is
      changed</li>
    <li>BOTH: Both the vertical and horizontal FOV are changed, so that the
      model rendering remains the same size, centered in the middle of the
      channel.</li>
  </ul>
</p>

<!-- /* --><pre>
    global
    {
        EQ_COMPOUND_IATTR_UPDATE_FOV     HORIZONTAL [ON] | VERTICAL | BOTH | OFF
    }

    compound
    {
        attributes
        {
            update_FOV                   HORIZONTAL [ON] | VERTICAL | BOTH | OFF
        }
    }
</pre><!-- */ -->

<a name="Restrictions"></a>
<h2>Restrictions</h2>
<p>
  The BOTH strategy will be implemented later.
</p>

<a name="Issues"></a>
<h2>Open Issues</h2>
<p>
  None
</p>

#include "footer.shtml"
<!-- $Id$ -->
