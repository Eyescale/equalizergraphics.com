#define S_DOCUMENTATION
#define S_DOCUMENTATION_DEVELOPER
#define PAGE Documentation
#define SUBPAGE Developer
#define TITLE View/Camera API

#include "header.shtml"

<p>
Author: <a href="mailto:eilemann@gmail.com">eilemann@gmail.com</a><br/>
State: Design
</p>

<h2>Overview</h2>
<p>
  The purpose of this API is to give read and write access to the views of a
  configuration. A view is one coherent image seen by the user of an Equalizer
  application.
</p>
<p>
  A configuration has one or more views. A view is determined by the frustum
  (wall or projection description), stereo mode and eye separation.
</p>
<p>
  The list of views is immutable. Each parameter of a view is writable, and
  takes effect for the next frame.
</p>

<h2>Implementation</h2>
<p>
  View/Compound association, eye recomputation, ...
</p>

<h2>API</h2>
<!-- /* --><pre>
  const ViewVector& Config::getViews();
  
  class View
  {
  public:
      void setWall( const Wall& wall );
      const Wall& getWall() const;
      // same for Projection

      void setEyeBase( const float eyeBase );
      float getEyeBase() const;

      void setStereoMode( const [Compound::]StereoMode mode );
      StereoMode getStereoMode() const;
  };
</pre><!-- */ -->

<h2>File Format</h2>
<p>
  Additional file format:
</p>
<!-- /* --><pre>
  TBD
</pre><!-- */ -->

<a name="Issues"></a>
<h2>Open Issues</h2>
<p>
  TBD
</p>

#include "footer.shtml"
<!-- $Id$ -->
