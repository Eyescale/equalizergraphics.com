#define S_DOCUMENTATION
#define S_DOCUMENTATION_DEVELOPER
#define PAGE Documentation
#define SUBPAGE Developer
#define TITLE Image Compression

#include "header.shtml"

<p>
  Author: <a href="mailto:eilemann@gmail.com">eilemann@gmail.com</a><br>
  State: 
  <ul>
    <li>Made a <a href="/equalizergraphics.com/documents/design/compression.html">plugin</a> in
      0.9</li>
    <li>Updated in 0.4 to use 8-byte token size</li>
    <li>Implemented in 0.2</li>
  </ul>
</p>

<h2>Overview</h2>
<p>
  Equalizer implements a fast image compression algorithm used for network
  transfers. The algorithm is a modified RLE algorithm, which exploits some
  characteristics of the image data for better performance.
</p>
  
<a name="Implementation"></a>
<h2>Implementation</h2>
<p>
  The compression algorithm uses eight-byte values as the token size. The input
  data has typically four-byte sized elements (one pixel of the data), and using
  eight-byte tokens is slightly faster than four-byte tokens, especially on
  64-bit machines. Comparing pixels instead of bytes enables compression of
  equal input data. Furthermore, we choose a marker byte which is not present in
  the input data, and can therefore quarantee that the compressed data is not
  bigger than the input data (plus additional eight bytes for the marker). The
  compressed data has the following grammar:
</p>
<!-- /* --><pre>
  input: marker data
  data: compressedData | symbol
  compressedData: marker symbol count
</pre><!-- */ -->
<p>
  The compression algorithm compresses streams of more than three equal input
  symbols to 'marker symbol count', and can therefore quarantee a maximum size
  for the output stream. The decompression algorithm simply replicates each
  single symbol from the input to the output stream, and expands compressedData
  to the according number of symbols.
</p>

<a name="Issues"></a>
<h2>Open Issues</h2>
<p>
  Handling of non-four-byte pixels, which are not currently used in Equalizer.
</p>
<p>
  Eight-byte token can cause unitialized memory reads at the end of the pixel
  data. This is not an error condition, since the memory buffer is big enough.
</p>

#include "footer.shtml"
<!-- $Id$ -->
