#define S_DOCUMENTATION
#define S_DOCUMENTATION_DEVELOPER
#define PAGE Documentation
#define SUBPAGE Developer
#define TITLE Configuration File Format

#include "header.shtml"

<p>
Author: <a href="mailto:eilemann@gmail.com">eilemann@gmail.com</a><br/>
State: Implemented
</p>

<p>
  The configuration file format for the Equalizer server is described below. The
  <a href="/cgi-bin/viewvc.cgi/trunk/src/examples/configs/">examples
  directory</a> does contain some example configuration
  files. The <a href="/documents/user/configTool.html">configuration tool</a>
  automatically creates some standard configuration files.
</p>
<p>
  The file format is not described in detail here. Please refer to
  the <a href="/survey.html">Programming Guide</a> in general, and to
  the <a href="/documents/design/fileFormat.html#changes">changes</a> section
  below for individual feature specifications. The actual implementation may
  differ slightly from this specification, but we try to keep it up to date. The
  loader implementation is the reference for the file format, look at
  <a href="/cgi-bin/viewvc.cgi/trunk/src/server/loader.y?view=markup">src/server/loader.y</a>,
  if you understand lex/yacc code.
</p>
<p>
  Note that this format is the representation for the server's low-level
  scalable rendering engine. Eventually this file format will be replaced by a
  higher-level format or API, and may even be partially hidden from the
  user. Automatic configuration and load balancing are not yet implemented,
  hence the need to have these low-level configuration files.
</p>
<p>
  All Equalizer units are in meters. This applies currently to the wall
  coordinates and the eye base, as well as the head matrix supplied
  programmatically.
</p>
<p>
  Global values have useful default parameters, which can be overriden with
  environment variables of the same name. For enumeration values,
  e.g., <code>EQ_COMPOUND_IATTR_STEREO_MODE</code>, the corresponding integer
  value has to be used. The global values in the config file override these
  defaults, and are in turn overriden by the corresponding attributes sections
  of the associated entities.
</p>

<a name="global"></a>
<!-- /* --><pre>
global
{
     EQ_CONNECTION_SATTR_HOSTNAME             string
     EQ_CONNECTION_SATTR_LAUNCH_COMMAND       string
     EQ_CONNECTION_CATTR_LAUNCH_COMMAND_QUOTE 'character'
     EQ_CONNECTION_IATTR_TYPE                 TCPIP | SDP
     EQ_CONNECTION_IATTR_TCPIP_PORT           unsigned
     EQ_CONNECTION_IATTR_LAUNCH_TIMEOUT       unsigned
     EQ_CONFIG_FATTR_EYE_BASE                 float
     EQ_NODE_IATTR_THREAD_MODEL               ASYNC | DRAW_SYNC | LOCAL_SYNC
     EQ_PIPE_IATTR_HINT_THREAD                OFF | ON
     EQ_WINDOW_IATTR_HINT_STEREO              OFF | ON | AUTO
     EQ_WINDOW_IATTR_HINT_DOUBLEBUFFER        OFF | ON | AUTO
     EQ_WINDOW_IATTR_HINT_DECORATION          OFF | ON
     EQ_WINDOW_IATTR_HINT_FULLSCREEN          OFF | ON
     EQ_WINDOW_IATTR_HINT_SWAPSYNC            OFF | ON   // AGL, WGL only
     EQ_WINDOW_IATTR_HINT_DRAWABLE            window | pbuffer | FBO
     EQ_WINDOW_IATTR_HINT_STATISTICS          OFF | FASTEST [ON] | NICEST
     EQ_WINDOW_IATTR_PLANES_COLOR             unsigned
     EQ_WINDOW_IATTR_PLANES_ALPHA             unsigned
     EQ_WINDOW_IATTR_PLANES_DEPTH             unsigned
     EQ_WINDOW_IATTR_PLANES_STENCIL           unsigned
     EQ_WINDOW_IATTR_PLANES_ACCUM             unsigned
     EQ_WINDOW_IATTR_PLANES_ACCUM_ALPHA       unsigned
     EQ_WINDOW_IATTR_PLANES_SAMPLES           unsigned
     EQ_CHANNEL_IATTR_HINT_STATISTICS         OFF | FASTEST [ ON ] | NICEST
     EQ_COMPOUND_IATTR_STEREO_MODE                 QUAD | ANAGLYPH
     EQ_COMPOUND_IATTR_STEREO_ANAGLYPH_LEFT_MASK   [ RED GREEN BLUE ]
     EQ_COMPOUND_IATTR_STEREO_ANAGLYPH_RIGHT_MASK  [ RED GREEN BLUE ]
}
server
{
    connection // 0-n times, listening connections of the server
    {
        type       TCPIP | SDP
        TCPIP_port unsigned
        hostname   string
    }

    config // 1-n times, currently only the first one is used by the server
    {
        latency int    // # of frames pipes may fall behind application
        attributes
        {
             eye_base     float // distance between left and right eye
        }

        (node|appNode) // 1-n times, a system in the cluster
                       // 0|1 appNode: launches render thread within app process
        {
            name     string
            connection // 0-n times, possible connections to this node
            {
                type          TCPIP | SDP
                TCPIP_port    unsigned
                hostname      string
                command       string      // render client launch command
                command_quote 'character' // launch command argument quote char
                timeout       unsigned    // timeout in milliseconds for launch
            }
            attributes
            {
                thread_model ASYNC | DRAW_SYNC | LOCAL_SYNC
            }
            pipe // 1-n times
            {
                name     string
                port     unsigned     // X server number or ignored
                device   unsigned     // graphics adapter number
                viewport [ viewport ] // default: autodetect
                attributes
                {
                    hint_thread   OFF | ON   // default ON
                }

                window // 1-n times
                {
                    name     string
                    viewport [ viewport ] // wrt pipe, default full screen

                    attributes
                    {
                        hint_stereo         OFF | ON | AUTO
                        hint_doublebuffer   OFF | ON | AUTO
                        hint_decoration     OFF | ON
                        hint_fullscreen     OFF | ON
                        hint_swapsync       OFF | ON         // AGL, WGL only
                        hint_drawable       window | pbuffer | FBO
                        hint_statistics     off | fastest [on] | nicest
                        planes_color        unsigned
                        planes_alpha        unsigned
                        planes_depth        unsigned
                        planes_stencil      unsigned
                        planes_accum        unsigned
                        planes_accum_alpha  unsigned
                        planes_samples      unsigned
                    }
                    channel // 1-n times
                    {
                        name     string
                        viewport [ viewport ] //wrt window, default full window
                        drawable [ FBO_COLOR FBO_DEPTH FBO_STENCIL ]
                        attributes
                        {
                            hint_statistics     OFF | FASTEST [ON] | NICEST
                        }
                    }
                }
            }
        }
        
        layout  # 1...n times
        {
            name string
            view  # 1...n times
            {
                name     string
                viewport [ viewport ]

                wall       // frustum description
                {
                    bottom_left  [ float float float ]
                    bottom_right [ float float float ]
                    top_left     [ float float float ]
                    type         fixed | HMD
                }
                projection // alternate frustum description, last one wins
                {
                    origin       [ float float float ]
                    distance     float
                    fov          [ float float ]
                    hpr          [ float float float ]
                }
            }
        }

        canvas  # 1...n times
        {
            name    string
            layout  name

            wall       
            {
                    bottom_left  [ float float float ]
                    bottom_right [ float float float ]
                    top_left     [ float float float ]
                    type         fixed | HMD
            }
            projection
            {
                    origin       [ float float float ]
                    distance     float
                    fov          [ float float ]
                    hpr          [ float float float ]
            }
            
            segment # 1...n times
            {
                channel  string
                name     string
                viewport [ viewport ] 

                wall       // frustum description
                {
                    bottom_left  [ float float float ]
                    bottom_right [ float float float ]
                    top_left     [ float float float ]
                    type         fixed | HMD
                }
                projection // alternate frustum description, last one wins
                {
                    origin       [ float float float ]
                    distance     float
                    fov          [ float float ]
                    hpr          [ float float float ]
                }
            }
        }
        
        compound // 1-n times
        {
            name     string
            channel  channel-ref             // see below

            task     [ CLEAR DRAW READBACK ASSEMBLE ] // CULL later
            buffer   [ COLOR DEPTH ]         // default COLOR

            viewport [ viewport ]            // wrt parent compound, sort-first
            range    [ float float ]         // DB-range for sort-last
            pixel    [ int int int int ]     // pixel decomposition (x y w h)
            eye      [ CYCLOP LEFT RIGHT ]   // monoscopic or stereo view
            zoom     [ float float ]         // up/downscale of parent pvp

            loadBalancer 
            {
                mode [ 2D | DB | VERTICAL | HORIZONTAL | DPLEX | DFR ]
                framerate float // DFR only
            }

            attributes
            {
                stereo_mode                  QUAD | ANAGLYPH    // default QUAD
                stereo_anaglyph_left_mask    [ RED GREEN BLUE ] // default red
                stereo_anaglyph_right_mask   [ RED GREEN BLUE ] // df green blue
            }

            wall       // frustum description
            {
                bottom_left  [ float float float ]
                bottom_right [ float float float ]
                top_left     [ float float float ]
                type         fixed | HMD
            }
            projection // alternate frustum description, last one wins
            {
                origin       [ float float float ]
                distance     float
                fov          [ float float ]
                hpr          [ float float float ]
            }
            
            child-compounds

            swapbarrier  // compounds with the same barriername sync swap
            {
                name string
                NV_group OFF | ON | unsigned
                NV_barrier OFF | ON | unsigned
            }
            outputframe
            {
                name   string
                buffer [ COLOR DEPTH ]
                type texture | memory
            }
            inputframe
            {
                name string // corresponding output frame
            }
        }
    }
}

channel-ref: 'string' | '(' channel-segment-ref ')'
channel-segment-ref: ( canvas-ref ) segment-ref ( layout-ref ) view-ref
canvas-ref:  'string' | 'index'
segment-ref: 'string' | 'index'
layout-ref:  'string' | 'index'
view-ref:    'string' | 'index'
</pre><!-- */ -->

<a name="changes"></a>
<h2>Changes</h2>
<ul>
    <li><a href="/documents/design/view.html">Layout API</a> added:
    <!-- /* --><pre>
       layout  # 1...n times
       {
            name string
            view  # 1...n times
            {
                name     string
                viewport [ viewport ]

                wall       // frustum description
                {
                    bottom_left  [ float float float ]
                    bottom_right [ float float float ]
                    top_left     [ float float float ]
                }
                projection // alternate frustum description, last one wins
                {
                    origin       [ float float float ]
                    distance     float
                    fov          [ float float ]
                    hpr          [ float float float ]
                }
            }
        }

        canvas  # 1...n times
        {
            name   string
            layout string

            wall       
            {
                    bottom_left  [ float float float ]
                    bottom_right [ float float float ]
                    top_left     [ float float float ]
            }
            projection
            {
                    origin       [ float float float ]
                    distance     float
                    fov          [ float float ]
                    hpr          [ float float float ]
            }
            
            segment # 1...n times
            {
                channel  string
                name     string
                viewport [ viewport ] 

                wall       // frustum description
                {
                    bottom_left  [ float float float ]
                    bottom_right [ float float float ]
                    top_left     [ float float float ]
                }
                projection // alternate frustum description, last one wins
                {
                    origin       [ float float float ]
                    distance     float
                    fov          [ float float ]
                    hpr          [ float float float ]
                }
            }
        }


        }
        compound
        {
            channel channel-ref
            ...
        }

    </pre><!-- */ -->
  </li>
  <li><a href="/documents/design/swapBarrier.html">NV_swap_group (G-Sync)
      support</a> added:
    <!-- /* --><pre>
      swapbarrier 
      {
         NV_group   OFF | ON | unsigned
         NV_barrier OFF | ON | unsigned
      }
    </pre><!-- */ -->
  </li>
  </li>
  <li>Dynamic frame resolution added:
    <!-- /* --><pre>
      compound
      {
          zoom     [ float float ]         // up/downscale of parent pvp
          loadBalancer 
          {
             mode DFR
             framerate float
          }
          outputframe
          {
              type texture | memory
          }
      }
    </pre><!-- */ -->
  </li>  
  <li>FBO Support added:
    <!-- /* --><pre>
      global
      {
          EQ_WINDOW_IATTR_HINT_DRAWABLE    window | pbuffer | FBO
      }

      window
      {
          attributes
          {
              hint_drawable    window | pbuffer | FBO
          }
          channel
          {
              drawable [ FBO_COLOR FBO_DEPTH FBO_STENCIL ]
          }
      }
    </pre><!-- */ -->
  </li>  
  <li>Easier thread model selection added:
    <!-- /* --><pre>
      global
      {
          EQ_NODE_IATTR_THREAD_MODEL    ASYNC | DRAW_SYNC | LOCAL_SYNC
      }
      node
      {
          attributes
          {
              thread_model    async | draw_sync | local_sync
          }
      }
    </pre><!-- */ -->
  </li>
  <li>Support for accumulation buffer and multisampling added:
    <!-- /* --><pre>
      global
      {
          EQ_WINDOW_IATTR_PLANES_ACCUM             unsigned
          EQ_WINDOW_IATTR_PLANES_ACCUM_ALPHA       unsigned
          EQ_WINDOW_IATTR_PLANES_SAMPLES           unsigned
      }
      window
      {
          attributes
          {
              planes_accum        unsigned
              planes_accum_alpha  unsigned
              planes_samples      unsigned
          }
      }
    </pre><!-- */ -->
  </li>  
  <li>Load-Balancing added:
    <!-- /* --><pre>
      compound
      {
          loadBalancer 
          {
               mode [ 2D | DB | VERTICAL | HORIZONTAL ]
          }
      }
    </pre><!-- */ -->
  </li>  
  <li>Added during implementation of
    the <a href="/documents/design/statisticsOverlay.html">Statistics
      Overlay</a>:
    <!-- /* --><pre>
      global
      {
          EQ_WINDOW_IATTR_HINT_STATISTICS    off | fastest [on] | nicest
      }
      window
      {
          attributes
          {
              hint_statistics     off | fastest [on] | nicest
          }
      }
    </pre><!-- */ -->
  </li>  
  <li><a href="/documents/design/PBuffer.html">PBuffer Support</a> added:
    <!-- /* --><pre>
      global
      {
          EQ_WINDOW_IATTR_HINT_DRAWABLE    window | pbuffer
      }

      window
      {
          attributes
          {
              hint_drawable    window | pbuffer
          }
      }
    </pre><!-- */ -->
  </li>  

  <li>Configurable launch command argument quotes were added after v0.4.1:
    <!-- /* --><pre>
      global
      {
           EQ_CONNECTION_CATTR_LAUNCH_COMMAND_QUOTE 'character'
      }

      node
      {
          connection // 0-n times, possible connections to this node
          {
              type          TCPIP | SDP
              TCPIP_port    unsigned
              hostname      string
              command       string      // render client launch command
              command_quote 'character' // launch command argument quote char
              timeout       unsigned    // timeout in milliseconds for launch
          }
      }
    </pre><!-- */ -->
  </li>  

  <li><a href="/documents/design/pixelCompound.html">Pixel Decompositions</a>
    added:
    <!-- /* --><pre>
      compound
      {
          pixel    [ int int int int ]     // pixel decomposition (x y w h)
      }
    </pre><!-- */ -->
  </li>  

  <li><a href="/documents/design/nonthreaded.html">Nonthreaded Rendering</a>
    added:
    <!-- /* --><pre>
      global
      {
          EQ_PIPE_IATTR_HINT_THREAD   off | on
      }
    
      pipe
      {
          attributes
          {
              hint_thread   off | on
          }
      }
    </pre><!-- */ -->
  </li>  

  <li><a href="/documents/design/anaglyph.html">Anaglyphic Stereo</a> added:
    <!-- /* --><pre>
      global
      {
          EQ_COMPOUND_IATTR_STEREO_MODE                 QUAD | ANAGLYPH
          EQ_COMPOUND_IATTR_STEREO_ANAGLYPH_LEFT_MASK   [ RED GREEN BLUE ]
          EQ_COMPOUND_IATTR_STEREO_ANAGLYPH_RIGHT_MASK  [ RED GREEN BLUE ]
      }
      compound // 1-n times
      {
          attributes
          {
              stereo_mode                  QUAD | ANAGLYPH    // default QUAD
              // enable visible color components
              stereo_anaglyph_left_mask    [ RED GREEN BLUE ] // default red
              stereo_anaglyph_right_mask   [ RED GREEN BLUE ] // df green blue
          }
      }
    </pre><!-- */ -->
  </li>

  <li><a href="/documents/design/immersive.html">Stereo and Head Tracking</a>
    added:
    <!-- /* --><pre>
      global
      {
          EQ_CONFIG_FATTR_EYE_BASE            float
          EQ_WINDOW_IATTR_HINT_STEREO         OFF | ON | AUTO
      }
      config // 1-n times, currently only the first one is used by the server
      {
          attributes
          {
               eye_base float // distance between left and right eye
          }
      }
      window
      {
          attributes
          {
              hint_stereo         off | on | auto
          }
      }
      compound
      {
          eye      [ CYCLOP LEFT RIGHT ]   // monoscopic or stereo view
      }
    </pre><!-- */ -->
  </li>  

  <li><a href="/documents/design/statistics.html">Statistics Interface</a>
    added:
    <!-- /* --><pre>
      global
      {
          EQ_CHANNEL_IATTR_HINT_STATISTICS    off | fastest [on] | nicest
      }
      channel
      {
          attributes
          {
              hint_statistics     off | fastest [on] | nicest
          }
      }
    </pre><!-- */ -->
  </li>

  <li><a href="/documents/design/compounds.html">Compounds</a> added:
    <!-- /* --><pre>
      global
      {
          EQ_COMPOUND_*
      }
      compound // 1-n times
      {
          ...
      }
    </pre><!-- */ -->
  </li>  
</ul>

#include "footer.shtml"
<!-- $Id$ -->
