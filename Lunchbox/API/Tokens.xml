<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>LBERROR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>log_8h.html</Path>
    <Anchor>a92e4d12e3e46c1bfc6621841912c1244</Anchor>
    <Abstract>Output an error message to the per-thread Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LBWARN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>log_8h.html</Path>
    <Anchor>aa6ce5b1840ab1d9bfc7fcc9a70b4ec07</Anchor>
    <Abstract>Output a warning message to the per-thread Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LBINFO</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>log_8h.html</Path>
    <Anchor>a4aa7eab491821715f6b2913196d60e92</Anchor>
    <Abstract>Output an informational message to the per-thread Log.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LBVERB</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>log_8h.html</Path>
    <Anchor>ae5bad30c3702f35f20e3b7d821884ec3</Anchor>
    <Abstract>Output a verbatim message to the per-thread Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LBLOG</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>log_8h.html</Path>
    <Anchor>affdf07fed2dd75e991e08606bd88eb68</Anchor>
    <Abstract>Output a message pertaining to a topic to the per-thread Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aab104979a3e0aadb5fcbf881dd57607a</Anchor>
    <Abstract>Increases the indentation level of the Log stream, causing subsequent lines to be intended by four ch...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exdent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aadf006b12376a6ffe3f4dceadb124367</Anchor>
    <Abstract>Decrease the indent of the Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a22f2485b1341d90869b161f7baea8041</Anchor>
    <Abstract>Disable flushing of the Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aa9de42ad673eb2a1473074ef2679849f</Anchor>
    <Abstract>Re-enable flushing of the Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a1e360cb63fdd4f72ac9055150b62a632</Anchor>
    <Abstract>Flush the Log stream regardless of the auto-flush state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>abfdbbae852837cacd0bee34dc1de1f2f</Anchor>
    <Abstract>Disable printing of the Log header for subsequent lines.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>af2ab1c6f1ed35fc441b30f65e65f381e</Anchor>
    <Abstract>Re-enable printing of the Log header.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>usort</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>stdExt_8h.html</Path>
    <Anchor>a51d68f640f3cf2ae35561e3d71e37708</Anchor>
    <Abstract>MSVC.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>stdExt_8h.html</Path>
    <Anchor>a665a5b63f642806e525bd58746d848d9</Anchor>
    <Abstract>Find the element in the given vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>stdExt_8h.html</Path>
    <Anchor>ab1af4b1293acf06c4c4f0202f93f8f1e</Anchor>
    <Abstract>Find the element in the given vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>stdExt_8h.html</Path>
    <Anchor>a329d7d62cb9057777645e5553fdc5665</Anchor>
    <Abstract>Find the element matching the predicate.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>find_if</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>stdExt_8h.html</Path>
    <Anchor>af3b7c1239bc2545610977af311cade76</Anchor>
    <Abstract>Find the element matching the predicate.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Strings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aea35aa9bfc7484de290c0ed0dbcfeceb</Anchor>
    <Abstract>A vector of std::strings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a_int32_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a4f4ba0a198a145a091514d20275f97bf</Anchor>
    <Abstract>An atomic 32 bit integer variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a_ssize_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a836a09793d6520b6ac44485b20f5b438</Anchor>
    <Abstract>An atomic signed size variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Bufferb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>af4d147a89a2b79db1a733c657fb9944f</Anchor>
    <Abstract>a byte buffer</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hash&lt; lunchbox::uint128_t &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>hash&lt; lunchbox::uint128_t &gt;</Scope>
    </TokenIdentifier>
    <Path>structhash_3_01lunchbox_1_1uint128__t_01_4.html</Path>
    <Abstract>std::string hash function.</Abstract>
    <DeclaredIn>stdExt.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std::iterator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>iterator</Scope>
    </TokenIdentifier>
    <Path>classstd_1_1iterator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Abstract>Abstraction layer and common utilities for multi-threaded programming.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memoryBarrier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aa8dcc0970325a4fd73b2d5decc7e06a8</Anchor>
    <Abstract>Perform a full memory barrier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIndexOfLastBit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ae448417a963ee82fe4a16259336f9f8c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sysError</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ab358edf4639e6230e547e381c9808033</Anchor>
    <Abstract>Print a textual description of the current system error.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backtrace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aeedc30437afd8997f8f4bc1cf42b897d</Anchor>
    <Abstract>Print the current call stack.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>className</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aaa9c89f4a51c6b4b96218461ffd85f22</Anchor>
    <Abstract>Print the RTTI name of the given class.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>searchDirectory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ab490e3f29dca64f351378490bd26ce3a</Anchor>
    <Abstract>Retrieve a list of files in a directory matching a pattern.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFilename</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>add7855a4ae33a12a1d71324f4b0789c3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirname</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a864136f98a609e3f8673c3db9392aa1f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a3f932e11108c071cc47b2ab9398db1f9</Anchor>
    <Abstract>Initialize the Lunchbox base classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ab94eeb235decc139db89525c80004a63</Anchor>
    <Abstract>De-initialize the Lunchbox base classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>acabd089ae5f2fc81306eba0e6a59479d</Anchor>
    <Abstract>Output the vector and up to 256 items to the ostream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aa0b59f28886629aed23b6e45d9950788</Anchor>
    <Abstract>Print the data to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aab104979a3e0aadb5fcbf881dd57607a</Anchor>
    <Abstract>Increases the indentation level of the Log stream, causing subsequent lines to be intended by four ch...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exdent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aadf006b12376a6ffe3f4dceadb124367</Anchor>
    <Abstract>Decrease the indent of the Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a22f2485b1341d90869b161f7baea8041</Anchor>
    <Abstract>Disable flushing of the Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aa9de42ad673eb2a1473074ef2679849f</Anchor>
    <Abstract>Re-enable flushing of the Log stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forceFlush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a1e360cb63fdd4f72ac9055150b62a632</Anchor>
    <Abstract>Flush the Log stream regardless of the auto-flush state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>abfdbbae852837cacd0bee34dc1de1f2f</Anchor>
    <Abstract>Disable printing of the Log header for subsequent lines.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableHeader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>af2ab1c6f1ed35fc441b30f65e65f381e</Anchor>
    <Abstract>Re-enable printing of the Log header.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a840cd0fc7a87c0a6894543b5604941e1</Anchor>
    <Abstract>Print the monitor to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perThreadDelete</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a684a461c314e03b66095c8e70c610a1a</Anchor>
    <Abstract>Default PerThread destructor deleting the object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perThreadNoDelete</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a69ee5adba467b7f6fcf8e4f4e9b7b525</Anchor>
    <Abstract>Empty PerThread destructor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a9a14a94586e17899c151f5c3acca49e7</Anchor>
    <Abstract>Print the reference pointer to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sleep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a5832d9de155629b6117a133b6f272c69</Anchor>
    <Abstract>Sleep the current thread for a number of milliseconds.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a13f93627175388ad18871f0d0d6ef353</Anchor>
    <Abstract>Print the thread to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a353cbc3167353070321e1108aa7eef3c</Anchor>
    <Abstract>ostream operator for 128 bit unsigned integers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a25b174411d00d5c2c1aa25cd55a738e0</Anchor>
    <Abstract>Add a 64 bit value to a 128 bit value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a0654c68d13115d755ce89e978dad58e5</Anchor>
    <Abstract>Subtract a 64 bit value from a 128 bit value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&amp;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>af072d337c0f9f89535e17b8dae5c4e01</Anchor>
    <Abstract>Bitwise and operation on two 128 bit values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator|</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a96d624a6f24869b2ba2336815645f137</Anchor>
    <Abstract>Bitwise or operation on two 128 bit values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_uint128</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a39411681873069f0c7aaad4b6c72024c</Anchor>
    <Abstract>Create a 128 bit integer based on a string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Monitorb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a5b17ccd4a5baea475ece5b3f5528d7b7</Anchor>
    <Abstract>A boolean monitor variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Monitoru</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a9225c9132da8788f84a8ce137b57fc84</Anchor>
    <Abstract>An unsigned 32bit integer monitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedFastRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a38f2dd0d032969c1e99325b137151fbf</Anchor>
    <Abstract>A scoped mutex for a fast uncontended read operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedFastWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a0c118c0f203f0c74f28c771bb44323dc</Anchor>
    <Abstract>A scoped mutex for a fast uncontended write operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a616d2b35671649b3bd000281c26af03a</Anchor>
    <Abstract>A scoped mutex for a read operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ab8e3e9002decffb853f466e4fc24adc2</Anchor>
    <Abstract>A scoped mutex for a write operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Strings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>aea35aa9bfc7484de290c0ed0dbcfeceb</Anchor>
    <Abstract>A vector of std::strings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a_int32_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a4f4ba0a198a145a091514d20275f97bf</Anchor>
    <Abstract>An atomic 32 bit integer variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a_ssize_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a836a09793d6520b6ac44485b20f5b438</Anchor>
    <Abstract>An atomic signed size variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Bufferb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>af4d147a89a2b79db1a733c657fb9944f</Anchor>
    <Abstract>a byte buffer</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_ERROR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ae68656dc67ec561fdc56a0f06f3bb99da872a7f262c105038340247a341de8c4d</Anchor>
    <Abstract>Output critical errors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_WARN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ae68656dc67ec561fdc56a0f06f3bb99da7bda497438ca08d2edb7bf3fed525da9</Anchor>
    <Abstract>Output potentially critical warnings.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_INFO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ae68656dc67ec561fdc56a0f06f3bb99dae146d2ab02b18351aadceb180fac4b60</Anchor>
    <Abstract>Output informational messages.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_VERB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>ae68656dc67ec561fdc56a0f06f3bb99da6c14877cc6a7c9e0667eabc23851d86c</Anchor>
    <Abstract>Be noisy.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_CUSTOM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a68115890651a788f5e8e38de12cc6682a3b62a7d6b3fc0b0d52499cf839247209</Anchor>
    <Abstract>Log topics for other namespaces start here.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOG_ANY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox</Scope>
    </TokenIdentifier>
    <Path>namespacelunchbox.html</Path>
    <Anchor>a68115890651a788f5e8e38de12cc6682aaea6b56f6b96fa283b7cd52f0ff290e7</Anchor>
    <Abstract>Log all Lunchbox topics.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Atomic</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Abstract>A variable with atomic semantics and standalone atomic operations.</Abstract>
    <DeclaredIn>atomic.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Atomic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>aa068c6d172b517045abc47605fae1113</Anchor>
    <Abstract>Construct a new atomic variable with an initial value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Atomic</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>a4485228d93a342f575b5c8b1ebfe2f2b</Anchor>
    <Abstract>Construct a copy of an atomic variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator T</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>a54e40ceec8c08744ad5998475fbc82ad</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>a4968bef8eac8bf6b1258fec7b203a610</Anchor>
    <Abstract>Assign a new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>a8c0d063f4fc4a718368cdd32316fb20f</Anchor>
    <Abstract>Assign a new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>a20318865bc041b3eaab2241d08c75983</Anchor>
    <Abstract>Atomically add a value and return the new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>a9ed268b21266bf4f07cd9592c6010b02</Anchor>
    <Abstract>Atomically substract a value and return the new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>a191a7b6c79e6dc31a29ca656a9f520ba</Anchor>
    <Abstract>Atomically increment by one and return the new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>a9c4d4088e737ddbe05afb08abffef762</Anchor>
    <Abstract>Atomically decrement by one and return the new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>a5c57b649b9545498242c5b75839e9408</Anchor>
    <Abstract>Atomically increment by one and return the old value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>a1143253262d63c0e8c5110aef712f6bf</Anchor>
    <Abstract>Atomically decrement by one and return the old value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>aaca2e330dcb51a465ea6ae78dc6983e1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>a214844e71fd07c4b17abac996e5061cc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareAndSwap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>ad1651aa31eb0602f4766b17197aec083</Anchor>
    <Abstract>Perform a compare-and-swap atomic operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndAdd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>a9392d574ae5b54525336de5dd5e37063</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAndSub</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>a2413157d0b0e8c69c179e24f149a9bb4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndGet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>a1261b0d0590ee491ba49be029d84a448</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subAndGet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>ac6450e548e0234a9a69c2811bf22438f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>incAndGet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>aa95f45bfe0e3496fdef4e3adb83e41c7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decAndGet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>ae06323b8bb46cd5de6c4f39d3c1a3585</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compareAndSwap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Atomic</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Atomic.html</Path>
    <Anchor>a49977b83d150b3c94f8f131ce538ca9d</Anchor>
    <Abstract>Perform a compare-and-swap atomic operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Buffer</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Abstract>A simple memory buffer with some helper functions.</Abstract>
    <DeclaredIn>buffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>a88f26982ff4d1a672dcee7b53b7983f2</Anchor>
    <Abstract>Construct a new, empty buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>a32895990741832f8dbf03aa0a25ee1e4</Anchor>
    <Abstract>Construct a new buffer of the given size.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>adf219be3b028ea8346fcb74ec886a343</Anchor>
    <Abstract>Destruct the buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>a064df0e0b830f853318005100f9bde78</Anchor>
    <Abstract>Flush the buffer, deleting all data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>a382fa6980e4a2f19812bcbb4b62b6287</Anchor>
    <Abstract>Tighten the allocated memory to the size of the buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>a14904ae28b13b446a0cb084187a91493</Anchor>
    <Abstract>Copy constructor, transfers ownership to new Buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>a37d801bcb8308849daa4393336f03c82</Anchor>
    <Abstract>Assignment operator, copies data from Buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>ad1b0094394b40d20cd04ac7e87f449da</Anchor>
    <Abstract>Direct access to the element at the given index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>a87e982d22e38bc9b707d7eef4848162c</Anchor>
    <Abstract>Direct const access to an element.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>adcb79d46d4dbaf6765896c751fadf7bf</Anchor>
    <Abstract>Ensure that the buffer contains at least newSize elements.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>grow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>ab394923fd663070ec104a642877cfaee</Anchor>
    <Abstract>Ensure that the buffer contains at least newSize elements.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reserve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>a004d37da826ecee982a5fdf958e949f6</Anchor>
    <Abstract>Ensure that the buffer contains at least newSize elements.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>a34125269bc80caa851afbb816f180931</Anchor>
    <Abstract>Set the buffer size and malloc enough memory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>af11b17b0addbd13ff11f1b9ff711f4aa</Anchor>
    <Abstract>Append elements to the buffer, increasing the size.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>a74df2718b78522818bea4978a08c8589</Anchor>
    <Abstract>Append one element to the buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>ab76c09eaf723245d92f0fda130d2a465</Anchor>
    <Abstract>Replace the existing data with new data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>swap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>a5602040c109325be55419c870b855079</Anchor>
    <Abstract>Swap the buffer contents with another Buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>a3c27774d120a491efba6523a8389649f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>ab9f62833f958c3eff66540b544aecf3b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>ab344aba82be7d2ab62ccbe6df3b9b9a9</Anchor>
    <Abstract>Set the size of the buffer without changing its allocation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>a27779c8d5742a8eb6d72e66b4e6a468a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>a3f0d8b889d50ff0ce4b668c062947a5a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Buffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Buffer.html</Path>
    <Anchor>a50e35b21a3506679e188ffc5d5caa119</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Clock</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Clock.html</Path>
    <Abstract>A class for time measurements.</Abstract>
    <DeclaredIn>clock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Clock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Clock.html</Path>
    <Anchor>a470b5013d391ac6bdeb24b62ceb02d2c</Anchor>
    <Abstract>Construct a new clock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Clock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Clock.html</Path>
    <Anchor>ac474efed0f92296589052d53cef915c6</Anchor>
    <Abstract>Destroy the clock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Clock.html</Path>
    <Anchor>a79e773ad626f597ef1f972d9ffdfb669</Anchor>
    <Abstract>Reset the base time of the clock to the current time.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Clock.html</Path>
    <Anchor>a869bf258d4a8b69f719f16d2a647006f</Anchor>
    <Abstract>Set the current time of the clock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Clock.html</Path>
    <Anchor>aeebff54f50c1b2fad25038c0ef3242ef</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTimef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Clock.html</Path>
    <Anchor>aea70842de20111f00dadbf4249927da3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTime64</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Clock.html</Path>
    <Anchor>a04ba4dc653c1789edaccb86fb6e1b0ef</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Clock.html</Path>
    <Anchor>af40275bc66d29018e53fb209170c8c20</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMilliSecondsf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Clock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Clock.html</Path>
    <Anchor>ac5d1a3b735eaf1e6e64df837dd3b367e</Anchor>
    <Abstract>Returns the millisecond part of the time elapsed since the last reset.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Condition</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Condition.html</Path>
    <Abstract>A condition variable and associated lock.</Abstract>
    <DeclaredIn>condition.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Condition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Condition.html</Path>
    <Anchor>a0c99f83bf0b425600daa79b462732a41</Anchor>
    <Abstract>Construct a new condition variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Condition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Condition.html</Path>
    <Anchor>ac876a5c4277a9fbaf3ab2c01118220a0</Anchor>
    <Abstract>Destruct this condition variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Condition.html</Path>
    <Anchor>a581bc3cb5910fe9211fac870c2631193</Anchor>
    <Abstract>Lock the mutex.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unlock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Condition.html</Path>
    <Anchor>a2c6fc076e00cf7149d94adcaf44d4d21</Anchor>
    <Abstract>Unlock the mutex.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>signal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Condition.html</Path>
    <Anchor>a87d2093573f687965335d6efc490867a</Anchor>
    <Abstract>Signal the condition.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>broadcast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Condition.html</Path>
    <Anchor>a07aa16903761365eba6282857a7ee8fb</Anchor>
    <Abstract>Broadcast the condition.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wait</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Condition.html</Path>
    <Anchor>a6e75523ac81a219114eefd94aad541ef</Anchor>
    <Abstract>Atomically unlock the mutex, wait for a signal and relock the mutex.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timedWait</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Condition</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Condition.html</Path>
    <Anchor>ada4038bc6e1ba603633808b78907c160</Anchor>
    <Abstract>Atomically unlock the mutex, wait for a signal and relock the mutex.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::DSO</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1DSO.html</Path>
    <Abstract>Helper to access dynamic shared objects (DSO)</Abstract>
    <DeclaredIn>dso.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DSO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1DSO.html</Path>
    <Anchor>a2c16aeae60f5ab582e345f7e9128f318</Anchor>
    <Abstract>Construct a new dynamic shared object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~DSO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1DSO.html</Path>
    <Anchor>a26de55503b6d725a39154f487d70bd51</Anchor>
    <Abstract>Destruct this DSO handle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1DSO.html</Path>
    <Anchor>a563a7c9d07f7fe8da4038bf5224c0ad6</Anchor>
    <Abstract>Open a dynamic shared object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1DSO.html</Path>
    <Anchor>a798b973ef6500051f13ab121459e09cf</Anchor>
    <Abstract>Close the DSO, invalidates retrieved function pointers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFunctionPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1DSO.html</Path>
    <Anchor>a9438a875d8367aa44b501d2ee7a4800f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::DSO</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1DSO.html</Path>
    <Anchor>a27815b9a99a4243d94da3d582cbd8ec6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::PtrHash</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::PtrHash</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PtrHash.html</Path>
    <Abstract>A hash for pointer keys.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::hashRefPtr</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::hashRefPtr</Scope>
    </TokenIdentifier>
    <Path>structlunchbox_1_1hashRefPtr.html</Path>
    <Abstract>A hash function for RefPtr keys.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::RefPtrHash</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::RefPtrHash</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtrHash.html</Path>
    <Abstract>A hash for RefPtr keys.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::UUIDHash</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::UUIDHash</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1UUIDHash.html</Path>
    <Abstract>A hash for UUID keys.</Abstract>
    <DeclaredIn>hash.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::IndexIterator</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::IndexIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1IndexIterator.html</Path>
    <Abstract>Counter-based, as opposed to pointer-based, iterator for any container.</Abstract>
    <DeclaredIn>indexIterator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Launcher</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Launcher</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Launcher.html</Path>
    <Abstract>The launcher executes a command from a separate process.</Abstract>
    <DeclaredIn>launcher.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Launcher</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Launcher.html</Path>
    <Anchor>ac32d9186049d3548b2b9e3ee69d069ef</Anchor>
    <Abstract>Execute the given command in a new process.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::LFQueue</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFQueue.html</Path>
    <Abstract>A thread-safe, lock-free queue with non-blocking access.</Abstract>
    <DeclaredIn>lfQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LFQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFQueue.html</Path>
    <Anchor>ab81f6db5cfd932741a4db1307038429e</Anchor>
    <Abstract>Construct a new queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~LFQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFQueue.html</Path>
    <Anchor>a7cc3c5bc72dbbfca71c5a2ea8541cc8e</Anchor>
    <Abstract>Destruct this queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFQueue.html</Path>
    <Anchor>a2febf57c0e90faadc2a0031e934eac8b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFQueue.html</Path>
    <Anchor>ab9b9e20309e4e7670ded69c00d6a0be2</Anchor>
    <Abstract>Reset (empty) the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFQueue.html</Path>
    <Anchor>aa43df91e458ae30aed03d00d77362a70</Anchor>
    <Abstract>Resize and reset the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFQueue.html</Path>
    <Anchor>aff32197fe03d8398047850e2227bb554</Anchor>
    <Abstract>Retrieve and pop the front element from the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFQueue.html</Path>
    <Anchor>afd6b8a0a92e974d356232795a4451d0a</Anchor>
    <Abstract>Retrieve the front element from the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFQueue.html</Path>
    <Anchor>a9b7ef3653b6163779209810eec58c2a4</Anchor>
    <Abstract>Push a new element to the back of the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCapacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFQueue.html</Path>
    <Anchor>aeeb9a83bc7e6fc3cb08cf35e79b21d3b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::LFVector</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Abstract>STL-like vector implementation providing certain thread-safety guarantees.</Abstract>
    <DeclaredIn>lfVector.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LFVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a5acd5b06b6aca7495f6f6185ed2279a6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LFVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a0ebf32602c36f3d47decdb7ee0a2f8b8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LFVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a5ef939fa9ac24318a68fd88db437557d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LFVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>af91c3073508b7febfe2020de56ae5758</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LFVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a96fe5c22db75756d925490105d779033</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~LFVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a509fce5075a4dc34a95a8b9a3b61e70c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>ac8a815775019e7dba8ad1b0592ac8f46</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a33c1e064a92280134d68146da1c16519</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a342a3ef537e7c09d800b073dd897cda7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>empty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>aa8501cd6da063b5460c69f4bdc1ecb5b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a4d77897f414a129531a925bfd3a5f4e7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a86f316ab5d12a2804f31c0c28841c406</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>ab4b0642bf5e450128f70e3c8975b02f5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>front</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a369183d60c35c2d0e4513b473f7778cd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>back</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a4d272fb81ac5bd586cbdb7a6d844d8be</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a7ba6772e64ec85ffdc0e3d805ed3ffbe</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a46bd5e2a4119ed19ed1c367dde01113c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a53f4f89b37f982bed7565fd48a148588</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>ac12b33dc792e5efce939f1b7a6aba38a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>expand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>aa00de75ca31c968b398e2725b291cd9c</Anchor>
    <Abstract>Resize the vector to at least the given size.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push_back</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a8f1f55bf88ce0f60479be421052e20d9</Anchor>
    <Abstract>Add an element to the vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop_back</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>ad0366264ecccb336fb94f0bbfc5578d5</Anchor>
    <Abstract>Remove the last element (STL version).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop_back</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a822c6c9a12e2d33ff8c6ee84834ad39a</Anchor>
    <Abstract>Remove the last element (atomic version).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>erase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>ad75708979ff159278f97be65a1c8f71d</Anchor>
    <Abstract>Remove an element.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>erase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>ad52dbb67b63742cd0b7e34d0c8d54bb6</Anchor>
    <Abstract>Remove the last occurence of the given element.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a5f70230f674ba4e64287169320e233ff</Anchor>
    <Abstract>Clear the vector and all storage.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>ace371244ebd13192b2200e2b7f0291d4</Anchor>
    <Abstract>Iterator over the vector elements.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>const_iterator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>lunchbox::LFVector</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVector.html</Path>
    <Anchor>a17ad7c05b229a1c2b0dd5599808ddc78</Anchor>
    <Abstract>Iterator over the const vector elements.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::LFVectorIterator</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::LFVectorIterator</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LFVectorIterator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Lock</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lock.html</Path>
    <Abstract>A lock (mutex) primitive.</Abstract>
    <DeclaredIn>lock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lock.html</Path>
    <Anchor>a7236eee0aca7430f848a021dffa71df8</Anchor>
    <Abstract>Construct a new lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Lock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lock.html</Path>
    <Anchor>a8c5129cd80a9af362456f1e160a3ecb8</Anchor>
    <Abstract>Destruct the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lock.html</Path>
    <Anchor>a3ada607929dfa72110818d8b20ba5daa</Anchor>
    <Abstract>Acquire the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lock.html</Path>
    <Anchor>a981b8ce8f23eb05dee662c16e41eb373</Anchor>
    <Abstract>Release the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lock.html</Path>
    <Anchor>af0a397d78384d226fffb69b81434d676</Anchor>
    <Abstract>Acquire the lock shared with other readers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lock.html</Path>
    <Anchor>a947fe1709d7c2e7cca198c02724ba25a</Anchor>
    <Abstract>Release a shared read lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trySet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lock.html</Path>
    <Anchor>a85808bdfd19aac97708c248c981b09aa</Anchor>
    <Abstract>Attempt to acquire the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lock.html</Path>
    <Anchor>aa50fa7907bf742737325d76c5d076d22</Anchor>
    <Abstract>Test if the lock is set.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Lockable</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lockable.html</Path>
    <Abstract>A convenience structure to hold data together with a lock for access.</Abstract>
    <DeclaredIn>lockable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lockable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lockable.html</Path>
    <Anchor>a545266d20a7a99f623ef34eea1d86c08</Anchor>
    <Abstract>Construct a new lockable data structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lockable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lockable.html</Path>
    <Anchor>ad09578bf94a32b3fa346124cd8e1a7b6</Anchor>
    <Abstract>Construct and initialize a new data structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lockable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lockable.html</Path>
    <Anchor>ab913952bac275dcfbd74c8d5fdf052c6</Anchor>
    <Abstract>Construct and initialize a new data structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lockable.html</Path>
    <Anchor>ae4aa823b216b7044f45f2563b394cde0</Anchor>
    <Abstract>Access the held data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lockable.html</Path>
    <Anchor>afbf82da3f3b0da5a7cdc0b1938e4161d</Anchor>
    <Abstract>Access the held data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lockable.html</Path>
    <Anchor>a9be37f4f4d204cc1f6f49e15f130e2fa</Anchor>
    <Abstract>Access the held data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lockable.html</Path>
    <Anchor>a8dee219c4cdb65e77bb66a1855fb98cd</Anchor>
    <Abstract>Access the held data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lockable.html</Path>
    <Anchor>a56f70e36e58b55312c70f5b8e5c5646d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Lockable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Lockable.html</Path>
    <Anchor>a12bd8647540f303fdd5e3c50a32615c7</Anchor>
    <Abstract>Assign another value to the data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::LogBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::LogBuffer</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1LogBuffer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Log</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Log.html</Path>
    <Abstract>The logging class.</Abstract>
    <DeclaredIn>log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Log.html</Path>
    <Anchor>ab4bfb710ab1a152f49ad8b4a6784ea31</Anchor>
    <Abstract>The per-thread logger.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Log.html</Path>
    <Anchor>af331baff1b1f9fde6cd83f96de5593a0</Anchor>
    <Abstract>The per-thread logger.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Log.html</Path>
    <Anchor>a508355b010c69b65f885f43118e95768</Anchor>
    <Abstract>Exit the log instance for the current thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLogLevelString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Log.html</Path>
    <Anchor>ad5fd334a1703a9536a469e55ab27e7d5</Anchor>
    <Abstract>The string representation of the current log level.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLogLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Log.html</Path>
    <Anchor>add3a650cfa5e8a2199401a370188c562</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Log.html</Path>
    <Anchor>adbd07cf1912d642c286374654ee772c2</Anchor>
    <Abstract>Change the output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOutput</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Log.html</Path>
    <Anchor>aefe156e283803f3346034c7337885684</Anchor>
    <Abstract>Get the current output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Log.html</Path>
    <Anchor>adb9c6299cb67baf2154d9d540df173e1</Anchor>
    <Abstract>Set the reference clock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>level</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Log.html</Path>
    <Anchor>a1853405208f56e45cf1e91fa9f691fbc</Anchor>
    <Abstract>The current log level.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>topics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::Log</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Log.html</Path>
    <Anchor>a0025532beb7d114f7b6fec82d16a4cba</Anchor>
    <Abstract>The current log topics.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::MemoryMap</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MemoryMap.html</Path>
    <Abstract>Helper to map a file to a memory address (mmap)</Abstract>
    <DeclaredIn>memoryMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MemoryMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MemoryMap.html</Path>
    <Anchor>a893342827c6cb4e6be1d76b76c22adff</Anchor>
    <Abstract>Construct a new memory map.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MemoryMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MemoryMap.html</Path>
    <Anchor>adc630e5f52ebe368fbc618acfdf66351</Anchor>
    <Abstract>Destruct the memory map.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>map</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MemoryMap.html</Path>
    <Anchor>ab9919551b04fe90b95f77025b3da92c5</Anchor>
    <Abstract>Map a file to a memory address.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unmap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MemoryMap.html</Path>
    <Anchor>afee63b1e51c6a28d329852c507b51cdb</Anchor>
    <Abstract>Unmap the file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAddress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MemoryMap.html</Path>
    <Anchor>a3e942b2437470f0f928629b1911923a0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MemoryMap</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MemoryMap.html</Path>
    <Anchor>a5be5d450cd168983053cc6b05447ad5b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Monitor</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Abstract>A monitor primitive.</Abstract>
    <DeclaredIn>monitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Monitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a9ccea26bb37295705d4d553d971f4c40</Anchor>
    <Abstract>Construct a new monitor with a default value of 0.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Monitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>aa108ccf33c8deae93297083560397e14</Anchor>
    <Abstract>Construct a new monitor with a given default value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Monitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a44bc656d09f783f29afca1ae7a8bf909</Anchor>
    <Abstract>Ctor initializing with the given monitor value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Monitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>ad5de0e0cafc67308ffb77db7630df952</Anchor>
    <Abstract>Destructs the monitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>ad8e37edbb3843933e78ca2daf7705741</Anchor>
    <Abstract>Increment the monitored value, prefix only.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a49d4e024b636594bb7708d9c41d4c329</Anchor>
    <Abstract>Decrement the monitored value, prefix only.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a69d6e9f1bc9d82b9cf1aaa7e600d7c36</Anchor>
    <Abstract>Assign a new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a3ca5d6a1d43903b41b0880fc467b2204</Anchor>
    <Abstract>Assign a new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator|=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a5591e04993c5909e74792a29cdf192ce</Anchor>
    <Abstract>Perform an or operation on the value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>ae47ea923c39403e6291b105d0c2d4c0a</Anchor>
    <Abstract>Set a new value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitEQ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a1dffafa32a85fb29ac47004fd418279d</Anchor>
    <Abstract>Block until the monitor has the given value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitNE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a27e55a47658258031ee6af2b5a5417fc</Anchor>
    <Abstract>Block until the monitor has not the given value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitNE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a1445722f55dca5e15e40886cb3d598f8</Anchor>
    <Abstract>Block until the monitor has none of the given values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitGE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a3174b097cd0d5586791c2595337e6774</Anchor>
    <Abstract>Block until the monitor has a value greater or equal to the given value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a9801fc5798c6d4efaf26d9d21402ce5d</Anchor>
    <Abstract>Block until the monitor has a value less or equal to the given value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timedWaitEQ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>ac86a4412245731f5e8b11fdaf9d0ab4a</Anchor>
    <Abstract>Block until the monitor has the given value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timedWaitGE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a2a8b5c1fc9b3cfdd917a2955aa555b53</Anchor>
    <Abstract>Block until the monitor has a value greater or equal to the given value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timedWaitNE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a233c15fbd650abbce70a7546636f5527</Anchor>
    <Abstract>Block until the monitor has not the given value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>af96d8a6cd5b5943c79130ccffc33b76f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a4f65b15236944dee768f06d25e441005</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a078d09757f95ff0cf0d6920f8f9cf2d8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator|</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>af9f6595235a9d5adda8503572238c3b9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&amp;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Monitor</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Monitor.html</Path>
    <Anchor>a837f715563966e1fc1a7e233fa246036</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::MTQueue</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Abstract>A thread-safe queue with a blocking read access.</Abstract>
    <DeclaredIn>mtQueue.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MTQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a02d01344e7d49bed377fecb0393019de</Anchor>
    <Abstract>Construct a new queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MTQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a8023a6fd553a9c20580c462236f754d1</Anchor>
    <Abstract>Construct a copy of a queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MTQueue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a31c9359912b04c714d11737e9762563a</Anchor>
    <Abstract>Destruct this Queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a24404824800ef291633257163a4be7e4</Anchor>
    <Abstract>Assign the values of another queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a603c893cd3d305366315e035b232e18f</Anchor>
    <Abstract>Retrieve the requested element from the queue, may block.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a52d8a019021e2242ace2c74bbcc32636</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>ad47d88ad49338dd08868283557740a19</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMaxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a87171a084e02bb30d79ed0e99cedfc00</Anchor>
    <Abstract>Set the new maximum size of the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMaxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a5e8c24c850872a024d892a0ea6f401ae</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a81335dadfabdd5d5941406a1ae74306e</Anchor>
    <Abstract>Wait for the size to be at least the number of given elements.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a1aa4378f4a855b49bb7dc7a3505c7bb1</Anchor>
    <Abstract>Reset (empty) the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a91510c2c9390818ff86806e5242b8401</Anchor>
    <Abstract>Retrieve and pop the front element from the queue, may block.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timedPop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a8ceb8ef85211373130b2310bc5f29934</Anchor>
    <Abstract>Retrieve and pop the front element from the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tryPop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a4e13eceabbd50c12f935c7a898302221</Anchor>
    <Abstract>Retrieve and pop the front element from the queue if it is not empty.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tryPop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>abd205008dcac8133111fb4bd707c4402</Anchor>
    <Abstract>Try to retrieve a number of items for the front of the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a49c00df6cf40487057ed2e7844031433</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a88624a241c23b468112347734bff9b88</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a25b6d6a42aede1adc7fc185a3b8be736</Anchor>
    <Abstract>Push a new element to the back of the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>a9387c77d79e7329f0190f834a8d12d15</Anchor>
    <Abstract>Push a vector of elements to the back of the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>ad2c93b3f23c5e1ec44095dce24ca4727</Anchor>
    <Abstract>Push a new element to the front of the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pushFront</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::MTQueue</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1MTQueue.html</Path>
    <Anchor>ab9e3f9826d7eea2ef95c5413ff6040e8</Anchor>
    <Abstract>Push a vector of elements to the front of the queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::NonCopyable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::NonCopyable</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1NonCopyable.html</Path>
    <Abstract>Base class to make objects non-copyable.</Abstract>
    <DeclaredIn>nonCopyable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::OMP</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::OMP</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1OMP.html</Path>
    <Abstract>Base class for OpenMP functionality.</Abstract>
    <DeclaredIn>omp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNThreads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::OMP</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1OMP.html</Path>
    <Anchor>a868ada96196b42e5f87b4d7dd0b550ac</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::PerThread</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Abstract>Implements thread-specific storage for C++ objects.</Abstract>
    <DeclaredIn>perThread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PerThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Anchor>af5131cf1beb2287fef594b52023f3a83</Anchor>
    <Abstract>Construct a new per-thread variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PerThread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Anchor>adbccd7b94bfb6aa6c51b79feb1ded1bb</Anchor>
    <Abstract>Destruct the per-thread variable.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Anchor>ad21017716b9da7c30c7a19819af0ce22</Anchor>
    <Abstract>Assign an object to the thread-local storage.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Anchor>a1b308f24a2b616f507a739696b09e97d</Anchor>
    <Abstract>Assign an object from another thread-local storage.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Anchor>a4cb2dad224c726b996df5f51c31df63d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Anchor>a359691d9a0ebdfd64a8c5c77ffa3a907</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Anchor>a308a07f63067c8870d5c6380794cac6c</Anchor>
    <Abstract>Access the thread-local object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Anchor>af2947b5f5b7ee0c86ba716f24a294f32</Anchor>
    <Abstract>Access the thread-local object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Anchor>ae06e48da4f49b1a087bec0aaf647f4c2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Anchor>a2fe6f1dfdeee5d8c4df261cb3dc7638f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Anchor>a2e438e6c9c391f20c053ae7325c73f63</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Anchor>a6302a53b459d569ccb46d1375c51d2f1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Anchor>ad07fce9c2fd965aa584613547d8c304d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Anchor>a94d65558a9bfd79c2fa3f550bb414f3c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThread.html</Path>
    <Anchor>a0523e5fd0fcffd48f2b4ed9139353a1d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::PerThreadRef</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThreadRef.html</Path>
    <Abstract>Thread-specific storage for a RefPtr.</Abstract>
    <DeclaredIn>perThreadRef.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PerThreadRef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThreadRef.html</Path>
    <Anchor>abf237e3a7c3b22abccd0db33cfcdeaf1</Anchor>
    <Abstract>Construct a new per-thread RefPtr.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PerThreadRef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThreadRef.html</Path>
    <Anchor>aaf49e13efd98c4cc3b5c231c796a3b94</Anchor>
    <Abstract>Destruct a per-thread RefPtr.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThreadRef.html</Path>
    <Anchor>a6333eff3275ad00f36dde4b5443a8160</Anchor>
    <Abstract>Assign a RefPtr to the thread-local storage.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThreadRef.html</Path>
    <Anchor>a1300eec128da5d3196ed2a71cdeba486</Anchor>
    <Abstract>Assign a RefPtr to the thread-local storage.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThreadRef.html</Path>
    <Anchor>a65c7a600e5788ed02289424df1906f59</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThreadRef.html</Path>
    <Anchor>a5af2c076fbd47444f17c5581b3f83ea0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThreadRef.html</Path>
    <Anchor>a990946dad4ac0dd1db9c1e8937b97c36</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThreadRef.html</Path>
    <Anchor>ac7cfc0e2020672afa1969e0626711723</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThreadRef.html</Path>
    <Anchor>ae943f351d3621bb85a562d0c8ee1ab12</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThreadRef.html</Path>
    <Anchor>af42c0cdbf2bc32290c87253b9ec298d6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThreadRef.html</Path>
    <Anchor>a3608f42fe425a165f5bbbb67d9ec71a5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThreadRef.html</Path>
    <Anchor>a6ecbe7cc5baa80334e40dd7706d0332a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThreadRef.html</Path>
    <Anchor>a315a44efb1751d3c728879106013480b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::PerThreadRef</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1PerThreadRef.html</Path>
    <Anchor>a05c446deec2e186560e9741012e53ce1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Pool</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::Pool</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Pool.html</Path>
    <Abstract>An object allocation pool.</Abstract>
    <DeclaredIn>pool.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Pool</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Pool.html</Path>
    <Anchor>a5db45906124ac4d91e8000605d83821c</Anchor>
    <Abstract>Construct a new pool.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Pool</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Pool</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Pool.html</Path>
    <Anchor>a06a4a67d410a662c1c20663da0a25113</Anchor>
    <Abstract>Destruct this pool.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alloc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Pool</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Pool.html</Path>
    <Anchor>aa91ebc18d14b4b1e6fe16f3a3b43c5bf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>release</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Pool</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Pool.html</Path>
    <Anchor>a7f0c5b7d2c434909db3f0df055a34276</Anchor>
    <Abstract>Release an item for reuse.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flush</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Pool</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Pool.html</Path>
    <Anchor>a371e3a6f850a37ca31f40799058f2ab0</Anchor>
    <Abstract>Delete all cached items.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Referenced</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Referenced.html</Path>
    <Abstract>Base class for referenced objects.</Abstract>
    <DeclaredIn>referenced.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ref</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Referenced.html</Path>
    <Anchor>a4b75d91a8562485c885cbf65b42232a3</Anchor>
    <Abstract>Increase the reference count.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unref</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Referenced.html</Path>
    <Anchor>a5d5fa89a1dc5960563f905866985612a</Anchor>
    <Abstract>Decrease the reference count.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRefCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Referenced.html</Path>
    <Anchor>a3aae6876076ee4e85318ccc298a0c3aa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Referenced.html</Path>
    <Anchor>a4194650cb8c1f901cd3dd8c1ae3a02b0</Anchor>
    <Abstract>Construct a new reference-counted object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Referenced.html</Path>
    <Anchor>a254310e9ede333af755434a529a85b77</Anchor>
    <Abstract>Construct a new copy of a reference-counted object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Referenced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Referenced.html</Path>
    <Anchor>aaa461cf3467f30517b4ca4dfddc34ba6</Anchor>
    <Abstract>Destruct a reference-counted object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Referenced</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Referenced.html</Path>
    <Anchor>af8927e60a30364f76f8e32616306a874</Anchor>
    <Abstract>Assign another object to this object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::RefPtr</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Abstract>A smart reference pointer, aka boost::intrusive_ptr.</Abstract>
    <DeclaredIn>refPtr.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RefPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a4e6e2e31b1521e9fa7c9e13b0328a84a</Anchor>
    <Abstract>Construct a new, empty reference pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RefPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a4fc3c32f45bd44df425d4c20e27c410b</Anchor>
    <Abstract>Construct a reference pointer from a C pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RefPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a0c326e86abaec254baeb23e29640b473</Anchor>
    <Abstract>Construct a copy of a reference pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RefPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>ac97a4cc6fe60c271d50a70ecc32fc537</Anchor>
    <Abstract>Construct a copy of a reference pointer of a different type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RefPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a9a5ba5ffaefc28f58ee1e9b578db30ca</Anchor>
    <Abstract>Destruct this reference pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a8ec4cfb5c5aaead38aedbcd91f11526f</Anchor>
    <Abstract>Assign another RefPtr to this reference pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a9bc8f4541ba0102780ad80af9b541761</Anchor>
    <Abstract>Assign a C pointer to this reference pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a1826174d8680bfe9659041340ccae871</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a63f026e705eb5a1cd5a4721158a32d9d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator bool_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a6d2cc70e2c1c6302f20dabee76c05256</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a9f61fd5e1e7da0edc7d23efc10041d23</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a8689289b11ade04055515f012f0419e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a5366f5a9b0a2c504f8cd50f6158aa076</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>ac667d03d76cc8399abe6631b0377722b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a223555bb79099c7eb7a3b050435a4be2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>ac80bb04737cda53d0f8002ca45865935</Anchor>
    <Abstract>Access the held object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>aa1b55787e9a2760b56bccb6743e60365</Anchor>
    <Abstract>Access the held object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>ae520e31813d3b86e52b1efaf0ccc75c9</Anchor>
    <Abstract>Access the held object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a9278d1f007f18d02901b0823d43d9480</Anchor>
    <Abstract>Access the held object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a86e4121d34aea87e87980acb05c7f432</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>a6173f53229b1569b5663c7eddf6f31a5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RefPtr</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RefPtr.html</Path>
    <Anchor>ab93da2352d9394794adee5e3bd1fe9c9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::RequestHandler</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Abstract>A thread-safe request handler.</Abstract>
    <DeclaredIn>requestHandler.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RequestHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>a74fde02591482ec369dcf58a8a964c3e</Anchor>
    <Abstract>Construct a new request handler.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RequestHandler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>a170a88142bad5fed1b1ec95516c9e2dd</Anchor>
    <Abstract>Destruct the request handler.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>registerRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>a3e2248bad96618d539e7d3a7ba42273d</Anchor>
    <Abstract>Register a new request.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unregisterRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>a5b626d6be7aebd0722e00b50830e860d</Anchor>
    <Abstract>Unregister a request.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>a950bbf4f3e210fc43a43054cdf1126ae</Anchor>
    <Abstract>Wait a given time for the completion of a request.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>ae0b03ec141ef038ca91b4d7c3f09eb45</Anchor>
    <Abstract>Wait for a request with an uint32_t result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>aac29eb83cd12b24b8862464b1597e81c</Anchor>
    <Abstract>Wait for a request with a bool result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>a92bf3ba266baafd79f1de81447622acb</Anchor>
    <Abstract>Wait for a request with an uint128_t result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>waitRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>a90f872e6e1819f8d7e962e669c8c7656</Anchor>
    <Abstract>Wait for a request without a result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRequestServed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>a7f39a9eb31e296ef36fb8c96cb53ad41</Anchor>
    <Abstract>Poll for the completion of a request.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRequestData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>ab81d57dc1b38d2c226406172ea2007af</Anchor>
    <Abstract>Retrieve the user-specific data for a request.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serveRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>af69f9931c6108d13becbf0c8acc2a3be</Anchor>
    <Abstract>Serve a request with a void* result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serveRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>a5af1982404dd0268c587a4aa13ddf951</Anchor>
    <Abstract>Serve a request with an uint32_t result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serveRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>a2fce76fcdaae4a13e90bf6ac91fd26a1</Anchor>
    <Abstract>Serve a request with a bool result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serveRequest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>ab479e8c697a7af2a1b9f3a45b2aed511</Anchor>
    <Abstract>Serve a request with an uint128_t result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPendingRequests</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RequestHandler</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RequestHandler.html</Path>
    <Anchor>adb0458b295ebb5b2a13019e30cfa97a7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::RNG</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::RNG</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RNG.html</Path>
    <Abstract>A random number generator.</Abstract>
    <DeclaredIn>rng.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RNG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RNG</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RNG.html</Path>
    <Anchor>ad57546c87290b2e77e422ae54bb1044e</Anchor>
    <Abstract>Construct a new random number generator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RNG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RNG</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RNG.html</Path>
    <Anchor>a66388ec908392137d158e4c784f6380f</Anchor>
    <Abstract>Destruct the random number generator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reseed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RNG</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RNG.html</Path>
    <Anchor>a7696b9a1bd84d64f9b2100b0cc07cb91</Anchor>
    <Abstract>Re-initialize the seed value for pseudo RNG&amp;#39;s.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::RNG</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RNG.html</Path>
    <Anchor>a17ddd9bd6efce7d7a7a38b8610c19761</Anchor>
    <Abstract>Generate a random number.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>lunchbox::RNG</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1RNG.html</Path>
    <Anchor>a72437a7e4fd6f2a1be18f2c37c9375f1</Anchor>
    <Abstract>Initialize the Lunchbox base classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::ScopedMutex</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>lunchbox::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1ScopedMutex.html</Path>
    <Abstract>A scoped mutex.</Abstract>
    <DeclaredIn>scopedMutex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedMutex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1ScopedMutex.html</Path>
    <Anchor>a387c45fec05d06e00fdf5de2e66b938d</Anchor>
    <Abstract>Construct a new scoped mutex and set the given lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedMutex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1ScopedMutex.html</Path>
    <Anchor>a7a8abf98652899fb039fa18583e19787</Anchor>
    <Abstract>Construct a new scoped mutex and set the given lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ScopedMutex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1ScopedMutex.html</Path>
    <Anchor>a01e6c95bbbc94a2192e286d63cc19430</Anchor>
    <Abstract>Construct a new scoped mutex for the given Lockable data structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ScopedMutex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1ScopedMutex.html</Path>
    <Anchor>ab36012cb4aa0b567591aaa8dff705379</Anchor>
    <Abstract>Destruct the scoped mutex and unset the mutex.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ScopedMutex</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1ScopedMutex.html</Path>
    <Anchor>a7bc4f98f18a9243c7f9b8bcd5091da32</Anchor>
    <Abstract>Leave and unlock the mutex immediately.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Servus</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Servus.html</Path>
    <Abstract>Simple wrapper for ZeroConf key/value pairs.</Abstract>
    <DeclaredIn>servus.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Servus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Servus.html</Path>
    <Anchor>a4eba8716c559e555def8357cb047d111</Anchor>
    <Abstract>Create a new service handle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Servus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Servus.html</Path>
    <Anchor>a6f8276ae268a75a28fa1f1cf2aec0d9e</Anchor>
    <Abstract>Destruct this service.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Servus.html</Path>
    <Anchor>a10f6ddff31796daea81e5fd77313d22a</Anchor>
    <Abstract>Set a key/value pair to be announced.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>announce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Servus.html</Path>
    <Anchor>a8ec1aa211654c36b72351f22f79f2697</Anchor>
    <Abstract>Start announcing the registered key/value pairs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>withdraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Servus.html</Path>
    <Anchor>ac4d496a1f025f660511a20865df38a26</Anchor>
    <Abstract>Stop announcing the registered key/value pairs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnnounced</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Servus.html</Path>
    <Anchor>ad04d898d0850d60b4477f942f3cd32e0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>discover</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Servus.html</Path>
    <Anchor>a99c54c74bc762f96d3616d4cfadf9c30</Anchor>
    <Abstract>Discover all announced key/value pairs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInstances</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Servus.html</Path>
    <Anchor>a22b19fa98dbfa343015ae5afbfe28c51</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKeys</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Servus.html</Path>
    <Anchor>acf98f2dbcc8f4d884ce2f0a7ba2b0f90</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Servus.html</Path>
    <Anchor>a4db41a74bb79ea495f9189120b081c10</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Servus.html</Path>
    <Anchor>affb790aef804112daee71963f90b15f3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IF_ALL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Servus.html</Path>
    <Anchor>a1f660c4794e454ac627b5e7080dfeb7dafda56209b40673c8670c4e0dd31b1389</Anchor>
    <Abstract>use all interfaces</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IF_LOCAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox::Servus</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Servus.html</Path>
    <Anchor>a1f660c4794e454ac627b5e7080dfeb7da5fca551f6e2d6e5b20c73bbd59c5367f</Anchor>
    <Abstract>only local interfaces</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::SpinLock</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1SpinLock.html</Path>
    <Abstract>A fast lock for uncontended memory access.</Abstract>
    <DeclaredIn>spinLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpinLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1SpinLock.html</Path>
    <Anchor>a83bfdaf60a4157d788243c0849c179fa</Anchor>
    <Abstract>Construct a new lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpinLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1SpinLock.html</Path>
    <Anchor>a77d2b3ebee19122712ffd0ee27826e4c</Anchor>
    <Abstract>Destruct the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1SpinLock.html</Path>
    <Anchor>ae7995c53dca44099e561acf88194f27f</Anchor>
    <Abstract>Acquire the lock exclusively.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1SpinLock.html</Path>
    <Anchor>a066465ef29572dd8ed5bd249b0e79bfd</Anchor>
    <Abstract>Release an exclusive lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trySet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1SpinLock.html</Path>
    <Anchor>ac8e5eac2778a44e094ae82719cc316f6</Anchor>
    <Abstract>Attempt to acquire the lock exclusively.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1SpinLock.html</Path>
    <Anchor>aaee19eb9a065f7c0d9793c47515e6e1b</Anchor>
    <Abstract>Acquire the lock shared with other readers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unsetRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1SpinLock.html</Path>
    <Anchor>a684805dffdb69933ed3189447d49ec2e</Anchor>
    <Abstract>Release a shared read lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trySetRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1SpinLock.html</Path>
    <Anchor>a07e5b5e5f9fd4442db258d94fc36c27e</Anchor>
    <Abstract>Attempt to acquire the lock shared with other readers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1SpinLock.html</Path>
    <Anchor>a1c5554fac68a7f071adef4d4f0e8df76</Anchor>
    <Abstract>Test if the lock is set.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSetWrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1SpinLock.html</Path>
    <Anchor>a8ef0fe73e4a2527722adeddcd6904e78</Anchor>
    <Abstract>Test if the lock is set exclusively.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSetRead</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::SpinLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1SpinLock.html</Path>
    <Anchor>acbbcc815a2272b041579b9807aa589ac</Anchor>
    <Abstract>Test if the lock is set shared.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Thread</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Abstract>An utility class to execute code in a separate execution thread.</Abstract>
    <DeclaredIn>thread.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>a2ea57807149c9cd583a5c1c140ac3cca</Anchor>
    <Abstract>Construct a new thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>a3782400e97d260ec0648c2f913243567</Anchor>
    <Abstract>Copy constructor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Thread</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>a1333026f7be472cea17960fe92337a79</Anchor>
    <Abstract>Destruct the thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>ad8afdfecfe8156fb2cef05d5e7b204ef</Anchor>
    <Abstract>Start the thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>a16b60b105263868de86fe3979bd9a104</Anchor>
    <Abstract>The init function for the child thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>run</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>a83d5f979e5054e3900c360416652bca6</Anchor>
    <Abstract>The entry function for the child thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>ab916220d6a24ffa6135e910696bd459b</Anchor>
    <Abstract>Exit the child thread immediately.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cancel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>a27407162c305b0d3e587519448f95b27</Anchor>
    <Abstract>Cancel (stop) the child thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>join</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>ad4ac151acf62bd2c3040c5bf000694c9</Anchor>
    <Abstract>Wait for the exit of the child thread.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isStopped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>a09999f5927ad8aa555367c8e716373bd</Anchor>
    <Abstract>Return if the thread is stopped.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>ae892e5ed033e3e5c8880a75b43bd76e7</Anchor>
    <Abstract>Return if the thread is running.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isCurrent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>a121cdbad00a0117e715c74cc36512c05</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSelfThreadID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>a79fbeca6f458856fc15561df5e579056</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>a478df724e8cfb6881d2017b8fac87275ad2a05346cca184ddfbe0d15ac49f7bb8</Anchor>
    <Abstract>Don&amp;#39;t set any affinity.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CORE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>a478df724e8cfb6881d2017b8fac87275abdc093f548630be3a35d5f76d10bd8dc</Anchor>
    <Abstract>Bind to a specific CPU core.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SOCKET</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>a478df724e8cfb6881d2017b8fac87275af8d8d241627e0789e9034cd0ffeb7a57</Anchor>
    <Abstract>Bind to all cores of a specific socket (CPU)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SOCKET_MAX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>lunchbox::Thread</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Thread.html</Path>
    <Anchor>a478df724e8cfb6881d2017b8fac87275a5402e43e4c126064aeea8f7bdd3e9e1d</Anchor>
    <Abstract>Highest bindable CPU.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::ThreadID</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1ThreadID.html</Path>
    <Abstract>An utility class to wrap OS-specific thread identifiers.</Abstract>
    <DeclaredIn>threadID.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1ThreadID.html</Path>
    <Anchor>a0402747e8780b4498a8632b0532a4d4e</Anchor>
    <Abstract>Construct a new, zero thread identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ThreadID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1ThreadID.html</Path>
    <Anchor>a2e9192dea62860cd76af07e318aec049</Anchor>
    <Abstract>Construct a copy of a thread identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ThreadID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1ThreadID.html</Path>
    <Anchor>afda1d5cd332c80d5a3378559e8f13abe</Anchor>
    <Abstract>Destruct this thread identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1ThreadID.html</Path>
    <Anchor>af810a8acbc69163fff23e0539ce826e5</Anchor>
    <Abstract>Assign another thread identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1ThreadID.html</Path>
    <Anchor>aa4720f297a9f94ca41565bf665cd6cca</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1ThreadID.html</Path>
    <Anchor>ae669171eddb9a1c7fc5d239c3dfc7464</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZERO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1ThreadID.html</Path>
    <Anchor>a599c7aa2660c5f973e6b10275df604b8</Anchor>
    <Abstract>a &amp;#39;NULL&amp;#39; thread identifier</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>lunchbox::ThreadID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1ThreadID.html</Path>
    <Anchor>aba7ab895c1b82338b9fb1e2dc00902e3</Anchor>
    <Abstract>Print the thread to the given output stream.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::TimedLock</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1TimedLock.html</Path>
    <Abstract>A mutex with timeout capabilities.</Abstract>
    <DeclaredIn>timedLock.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TimedLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1TimedLock.html</Path>
    <Anchor>a10514f80629e13658e402c6b4ca6a9b9</Anchor>
    <Abstract>Construct a new timed lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TimedLock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1TimedLock.html</Path>
    <Anchor>a1e7da2755b9b809d2fc0ce694c7e31b0</Anchor>
    <Abstract>Destruct the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1TimedLock.html</Path>
    <Anchor>acdc93ccf7b07a7a47db22fcaac116a4d</Anchor>
    <Abstract>Set the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1TimedLock.html</Path>
    <Anchor>a742867ea927d0cfb142aaa146eb16d1a</Anchor>
    <Abstract>Release the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trySet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1TimedLock.html</Path>
    <Anchor>a8b300df40505366c88015ff59def9b15</Anchor>
    <Abstract>Attempt to set the lock.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::TimedLock</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1TimedLock.html</Path>
    <Anchor>ac22e5abc84d284baf0f036395f5aa0c8</Anchor>
    <Abstract>Test if the lock is set.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::uint128_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Abstract>A base type for 128 bit unsigned integer values.</Abstract>
    <DeclaredIn>uint128_t.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uint128_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>aa4e4258c4208c401c1f73a4ab4900afa</Anchor>
    <Abstract>Construct a new 128 bit integer with a default value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uint128_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>ac01534feb4862c17509822f3be64fd3d</Anchor>
    <Abstract>Construct a new 128 bit integer with default values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uint128_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a3556dc76f85797d6659661cba3bd4cae</Anchor>
    <Abstract>Construct a new 128 bit integer from a string representation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a9f0ea3a466937f74a2da69e7a1df2dff</Anchor>
    <Abstract>Assign another 128 bit value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>ab3c2b4c620d5e08d2dd7e5a6e19f3bbd</Anchor>
    <Abstract>Assign another 64 bit value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a4b27d8e55efb33df5abd6f7057981ac6</Anchor>
    <Abstract>Assign an 128 bit value from a std::string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a203066d3164ff32c6ab0177f85f217bf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>ac396f25c499d951aabba1e37dc4ba3de</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a1888e1e44d478a56779532c0fd8346f8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a36090ac39c0aff2b451d8dbd18f4519c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a46bd5a6ae4656edaec339d47587eaef9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a6576261a29d3dd35c8d1616909088128</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator++</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>ae1b31639a8404de8e4bf36a1755586eb</Anchor>
    <Abstract>Increment the value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator--</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a243fc61aac6844ba5a4c528f59944214</Anchor>
    <Abstract>Decrement the value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>low</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>ad523173c8e420c6f56e00cf957526479</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>high</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a713b4cdae102f0a855da82a52ec34c99</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>low</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>abfdac13d891e8599e5ad8d7acf58ed05</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>high</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a801f681400d60cd75de56dacb5dc192a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShortString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a9aa48f23b07951da70acaa436d65402a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a271f2145f2a67820ce09415ffd17c4df</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>a8ed687aefebae39493dde824665c9669</Anchor>
    <Abstract>Serialize this object to a boost archive.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ZERO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>lunchbox::uint128_t</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1uint128__t.html</Path>
    <Anchor>ab61dbb9216958b47ae0129aaa1c7dc35</Anchor>
    <Abstract>The NULL value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::UUID</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::UUID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1UUID.html</Path>
    <Abstract>Provides a universally unique identifier.</Abstract>
    <DeclaredIn>uuid.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UUID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UUID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1UUID.html</Path>
    <Anchor>aacdc61bc0dc89b0af2f710c4528c91f7</Anchor>
    <Abstract>Construct a new universally unique identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UUID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UUID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1UUID.html</Path>
    <Anchor>a41c0052f9f667ee14ecf64920050c86c</Anchor>
    <Abstract>Construct a new universally unique identifier.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UUID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UUID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1UUID.html</Path>
    <Anchor>ae78e06bc0a8f71ef5df2b99c4c3284e9</Anchor>
    <Abstract>Construct a new universally unique identifier from an unsigned 128 bit integer value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UUID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1UUID.html</Path>
    <Anchor>aac68bb5a7f17f972da540023daa5b9af</Anchor>
    <Abstract>Assign another UUID from a string representation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGenerated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>lunchbox::UUID</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1UUID.html</Path>
    <Anchor>a2812a26205ff521813d60e92d9ffc384</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lunchbox::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Version.html</Path>
    <Abstract>Information about the current LunchBox version.</Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Version.html</Path>
    <Anchor>a297f9bb0ddf582f5a5e30ff60328c65b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Version.html</Path>
    <Anchor>a74d9916927bd2636b05c25bc9c9aa3c0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Version.html</Path>
    <Anchor>ab3331c0a6855187322b80b51f958057e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Version.html</Path>
    <Anchor>a0e3396fa9a999ef43b2409c7ef87c721</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Version.html</Path>
    <Anchor>a070087366d3061d2163e5b7cf47c9579</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Version.html</Path>
    <Anchor>a25cd65909e4c95e9b955caf334763b06</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFloat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Version.html</Path>
    <Anchor>ad98f79d9572f03df64a7be90150e26be</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Version.html</Path>
    <Anchor>a52c485b52956e7be167f6971230be29d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>lunchbox::Version</Scope>
    </TokenIdentifier>
    <Path>classlunchbox_1_1Version.html</Path>
    <Anchor>aeedd906453c48c819b5ccd9b784d0f32</Anchor>
  </Token>
</Tokens>
