#define S_HOME
#define S_HOME_ABOUT
#define PAGE About
#define SUBPAGE Overview
#define KEYWORDS "parallel rendering framework distributed Equalizer OpenGL scalable graphics cluster visualization"

#include "header.shtml"

<h2>Overview</h2>
<table>
  <tr>
    <td>
      <p>Equalizer is an open source programming interface and resource
        management system for scalable graphics applications. An Equalizer
        application can run unmodified on any visualization system, from a
        singlepipe workstation to large scale graphics clusters and shared
        memory visualization systems. Equalizer is build from ground up as a
        parallel, scalable programming interface solving the problems common to
        any multipipe application.
        <br><a href="useCases.html">More about use cases...</a>
      </p><p>
        Equalizer development started in 2005. The source code is available for
        interested developers and early adopters. Equalizer is a cross-platform
        toolkit and is initially available for Linux and Mac OS X. A Windows
        version is planned. Please <a href="contact.html">contact
        us</a> if you are interested to learn more about Equalizer, to
        participate in the design and development, or if you have any other
        questions.
      </p>
    </td>
    <td><a href="images/parallel-big.png">
        <img src="images/parallel.png" alt="Parallel Rendering">
    </a></td>
  </tr>
</table>
<h3>Mission Statement</h3>
<p>
  The Equalizer project will provide the standard programming
  environment for multipipe applications, ranging from workstations to
  large-scale High-Performance Visualization (HPV) clusters. The goal for
  Equalizer is to reach a status similar to the MPI library, but for interactive
  3D graphics applications. To achieve this goal we invite programmers,
  researchers, independent software vendors and hardware manufacturers to
  contribute to this effort.
</p>

<h2>Components</h2>
<h3>Resource Management System</h3>
<p>
  The core of Equalizer is the configuration server. It is configured once for a
  visualization system, and it know the system's resources. It provides
  system-wide load balancing and resource allocation for all applications.
  <br><a href="configuration.html">More about resource management...</a>
</p>
<h3>Programming Framework</h3>
<p>
  Application developers use the Equalizer client library to write scalable
  graphics applications based on parallel rendering. The Equalizer client
  library is the interface to the Equalizer server, it abstracts the application
  from the actual configuration of the execution environment. Compared to other
  cluster-rendering software, it does not replace the OpenGL library but
  parallelizes and distributes the application's rendering code for optimal
  performance.
</p><p>
  Equalizer provides the natural execution framework for any multi-pipe
  application and does not impose any specific rendering framework, such
  as a scenegraph, to the application. It uses a callback-driven architecture,
  making it easy to port existing applications to Equalizer.
  <br><a href="api.html">More about the programming interface...</a>
</p><p>
  In addition to traditional multi-pipe execution, where one graphics card is
  driving one display device, Equalizer will offer a broad range of
  decomposition modes to accelerate the rendering of large data sets by
  parallelizing the rendering of a single view across multiple graphics cards
  and CPU's.
  <br><a href="scalability.html">More about scalability...</a>
</p>
<h3>Transparent OpenGL Layer</h3>
<p>
  The transparent layer will enable the execution of unmodified OpenGL
  applications. They can take advantage of the system's resource management and
  load balancing, without any additional configuration. This layer will allow a
  seamless integration of unmodified and scalable applications on the same
  system.
</p>
<h3>Distributed Scene Graphs</h3>
<p>
  Equalizer will provide sample implementations for popular scene graphs, such
  as <a href="http://www.openscenegraph.org/">OpenSceneGraph</a>, 
  <a href="http://www.coin3d.org/">Coin3D</a>
  or <a href="http://www.ogre3d.org/">Ogre3D</a>. Applications using these scene
  graphs can then easily implement parallel, scalable applications which
  integrate well with other applications based on Equalizer, and profit from the
  feature set of Equalizer.
</p>
<div class="footnote">
Linux&reg; is a trademark of Linus Torvalds. Mac OS&reg; is a trademark of Apple
Computer, Inc. OpenGL&reg; are trademarks of Silicon Graphics, Inc. Windows&reg;
is a trademark of Microsoft Corporation. All other products named are trademarks
of their respective owners.
</div>

#include "footer.shtml"
<!-- $Id$ -->
