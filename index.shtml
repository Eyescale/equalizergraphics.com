
#define S_HOME
#define S_HOME_ABOUT
#define PAGE About
#define SUBPAGE Overview
#define KEYWORDS "overview api high-performance distributed Equalizer OpenGL scalable graphics cluster visualization"

#include "header.shtml"

<h2>Overview</h2>
<p>
  Equalizer is an open source programming interface and resource management
  system for scalable multipipe applications. An Equalizer application can run
  unmodified on any visualization system, from a singlepipe workstation to large
  scale graphics clusters and shared memory visualization systems. Equalizer is
  build from ground up as a parallel, scalable programming interface solving the
  common problems for any multipipe application.
  <br><a href="useCases.html">More about use cases...</a>
</p><p>
  Equalizer development started in 2005. The source code repository is available
  for interested developers. Equalizer is a cross-platform toolkit and will be
  initially available for Linux and Mac OS X. Feel free
  to <a href="contact.html">contact us</a> if you are interested to learn more
  about Equalizer, to participate in the design and development, or if you have
  any other questions.
</p>
<h3>Resource Management System</h3>
<p>
  The core of Equalizer is the configuration server. It is configured once for a
  visualization system, to know the system's resources. It provides system-wide
  load balancing and resource allocation for all applications.
  <br><a href="configuration.html">More about resource management...</a>
</p>
<h3>Programming Framework</h3>
<p>
  The Equalizer client library is the interface to the Equalizer
  server. Application developers can directly use this API to write scalable
  graphics applications. It abstracts the application from the actual
  configuration of the execution environment. Compared to other
  cluster-rendering software, it does not replace the OpenGL library but
  parallelizes and distributes the application's rendering code for optimal
  performance.
</p><p>
  Equalizer provides the natural execution framework for any multi-pipe
  application and does not impose any specific rendering framework, such
  as a scenegraph, to the application. It uses a callback-driven architecture,
  making it easy to port existing applications to Equalizer.
  <br><a href="api.html">More about the API...</a>
</p><p>
  In addition to traditional multi-pipe execution, where one graphics card is
  driving one display device, Equalizer will offer a broad range of
  decomposition modes to accelerate the rendering of large data sets by
  parallelizing the rendering of a single view across multiple graphics cards
  and CPU's.
  <br><a href="scalability.html">More about scalability...</a>
</p>
<h3>Transparent OpenGL Layer</h3>
<p>
  The transparent layer will enable the execution of unmodified OpenGL
  applications. They can take advantage of the system's resource management and
  load balancing, without any additional configuration. This layer will allow a
  seamless integration of unmodified and scalable applications on the same
  system.
</p>
<h3>Distributed Scene Graphs</h3>
<p>
  Equalizer will provide sample implementations for popular scene graphs, such
  as <a href="http://www.openscenegraph.org/">OpenSceneGraph</a>
  or <a href="http://www.ogre3d.org/">Ogre3D</a>. Applications using these scene
  graphs can then easily implement parallel, scalable applications based on
  Equalizer.
</p>
<div class="footnote">
SLI&trade; is a trademark of NVIDIA Corporation. Crossfire&trade; is a trademark
of ATI Technologies Inc. All other products named are trademarks of their
respective owners.
</div>

#include "footer.shtml"
