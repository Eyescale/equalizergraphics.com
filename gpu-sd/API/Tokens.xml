<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>gpusd</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>gpusd</Scope>
    </TokenIdentifier>
    <Path>namespacegpusd.html</Path>
    <Abstract>The GPU-SD discovery library.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GPUInfos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>gpusd</Scope>
    </TokenIdentifier>
    <Path>namespacegpusd.html</Path>
    <Anchor>a7c394cd864c82fb08279d3c5cabda373</Anchor>
    <Abstract>A vector of GPUInfo structs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GPUInfosIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>gpusd</Scope>
    </TokenIdentifier>
    <Path>namespacegpusd.html</Path>
    <Anchor>a7e70f1dc62cca4b4e06ed1ee4e6fa8e7</Anchor>
    <Abstract>An iterator over GPUInfos.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GPUInfosCIter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>gpusd</Scope>
    </TokenIdentifier>
    <Path>namespacegpusd.html</Path>
    <Anchor>aa9652c7a879928b85527025df84376a8</Anchor>
    <Abstract>A const iterator over GPUInfos.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FilterPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>gpusd</Scope>
    </TokenIdentifier>
    <Path>namespacegpusd.html</Path>
    <Anchor>af7a97ac2357c3b779f087cf31c5c21f5</Anchor>
    <Abstract>A Filter shared_ptr.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gpusd::Filter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>gpusd::Filter</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Filter.html</Path>
    <Abstract>Base class for all discovery filters.</Abstract>
    <DeclaredIn>filter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Filter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>gpusd::Filter</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Filter.html</Path>
    <Anchor>a683c3f2f58568e17d6373fac17f12b22</Anchor>
    <Abstract>Create a new filter.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Filter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>gpusd::Filter</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Filter.html</Path>
    <Anchor>a90eca26724ba6df96dd59995168b4cfe</Anchor>
    <Abstract>Destruct this filter.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator|</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>gpusd::Filter</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Filter.html</Path>
    <Anchor>afc42942e213a84296823170b4e3b446e</Anchor>
    <Abstract>Chain another filter to this one.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator|=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>gpusd::Filter</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Filter.html</Path>
    <Anchor>ad3564ecaecb8d493794bf51196ea6a59</Anchor>
    <Abstract>Chain another filter to this one.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>gpusd::Filter</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Filter.html</Path>
    <Anchor>a0392264e2601882544d89214f5f67e71</Anchor>
    <Abstract>Call all chained operators.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gpusd::DuplicateFilter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>gpusd::DuplicateFilter</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1DuplicateFilter.html</Path>
    <Abstract>Filters all duplicates during discovery.</Abstract>
    <DeclaredIn>filter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>gpusd::DuplicateFilter</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1DuplicateFilter.html</Path>
    <Anchor>a25fe101b3561ade191b729a0f00b5567</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gpusd::MirrorFilter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>gpusd::MirrorFilter</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1MirrorFilter.html</Path>
    <Abstract>Filter overlapping duplicates with different GPU types.</Abstract>
    <DeclaredIn>filter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>gpusd::MirrorFilter</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1MirrorFilter.html</Path>
    <Anchor>aae8fa2925ef7cccd742733e7e84eba7f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gpusd::SessionFilter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>gpusd::SessionFilter</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1SessionFilter.html</Path>
    <Abstract>Filters for a specific session.</Abstract>
    <DeclaredIn>filter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>gpusd::SessionFilter</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1SessionFilter.html</Path>
    <Anchor>a540d2e84614afa60f65d6fd26b32e562</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gpusd::GPUInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Abstract>A structure containing GPU-specific information.</Abstract>
    <DeclaredIn>gpuInfo.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GPUInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>ad2a46d87adf15ab64e5013c5b17abea4</Anchor>
    <Abstract>Default constructor pointing to the default display.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GPUInfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>acb701b393d4ba2cee16ae69c10ef3e17</Anchor>
    <Abstract>Constructor pointing to default display of a specific GPU type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invalidatePVP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>a575d147268cccd1916271c075ad45261</Anchor>
    <Abstract>Invalidate the pixel viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>a64cf1489a143419e7917065fc802b3d2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>a94456cc6e761fa28525bc888a7cd1260</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>a18bdabe71cf1233b2413a26e6199d710</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>ad76ff905264e003373df9f48161ee134</Anchor>
    <Abstract>Four-character code of the GPU type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>port</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>ae70e5fbf20a7b18ef08de68fe394ffe1</Anchor>
    <Abstract>The display (GLX) or ignored (WGL, AGL).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>device</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>a91a6de1f8941e3966babf80cf1955ea5</Anchor>
    <Abstract>The screen (GLX, WGL), GPU (WGLn, WGLa) or virtual screen (AGL).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pvp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>af57be425532720b302b9e1bd5fdf1b13</Anchor>
    <Abstract>The size and location of the GPU (x,y,w,h).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hostname</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>a66043414e54320f069071e0b1a2a7dff</Anchor>
    <Abstract>remote system hostname, empty for local GPUs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>session</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>a2fad3bd6efe056409f821360d7235fe5</Anchor>
    <Abstract>session name: local, default or custom string</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>ab89a1e713dd751a70f8a5b7b5040027e</Anchor>
    <Abstract>bitmask of additional GPU capabilities</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dummy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>aa2394e4abb0c9587258e32c96cafb792</Anchor>
    <Abstract>Buffer for binary-compatible additions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>adda46b8fe96ce9d5e20c0d86b2a18f9c</Anchor>
    <Abstract>A non-enumerated port or device.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLAG_VIRTUALGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>a26e4ab49c0f099c29a39b30d7e47fe4a</Anchor>
    <Abstract>Process runs under VirtualGL.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLAG_VIRTUALGL_DISPLAY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>gpusd::GPUInfo</Scope>
    </TokenIdentifier>
    <Path>structgpusd_1_1GPUInfo.html</Path>
    <Anchor>a9bfd28b98cb3d63c5ade6eb4e7a424d5</Anchor>
    <Abstract>VirtualGL redirect GPU.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gpusd::Module</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>gpusd::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Module.html</Path>
    <Abstract>Base class for runtime-attached DSOs of a query implementation.</Abstract>
    <DeclaredIn>module.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Module</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>gpusd::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Module.html</Path>
    <Anchor>a0a9eab0bd7ce9862f57ce8ba8fbef026</Anchor>
    <Abstract>Register and construct a new module.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Module</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>gpusd::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Module.html</Path>
    <Anchor>a782c908bdd970555199db87c4b9d4876</Anchor>
    <Abstract>Destruct this module.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>discoverGPUs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>gpusd::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Module.html</Path>
    <Anchor>ab57d6dd0436f8e9ae4a21a8d8f2335be</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>discoverGPUs_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>gpusd::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Module.html</Path>
    <Anchor>a672775252d11bd7aaae736bf9566ef21</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gpusd::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>gpusd::Version</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Version.html</Path>
    <Abstract>Information about the current GPU-SD version.</Abstract>
    <DeclaredIn>version.in.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>gpusd::Version</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Version.html</Path>
    <Anchor>aea3259b9b5141ade12f1ab9515a6f220</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>gpusd::Version</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Version.html</Path>
    <Anchor>ac0d70c878b314c7c2e5d11f026d9e5a5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>gpusd::Version</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Version.html</Path>
    <Anchor>a33b0119701055611d90cc956437b20f7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>gpusd::Version</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1Version.html</Path>
    <Anchor>a5eaf69119957f9060c6d5fbf5198456c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gpusd::cgl::Module</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>gpusd::cgl::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1cgl_1_1Module.html</Path>
    <Abstract>The CGL implementation for local GPU discovery.</Abstract>
    <DeclaredIn>module.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>use</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>gpusd::cgl::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1cgl_1_1Module.html</Path>
    <Anchor>a55d0cf2f250c81369ec6628bd090dfbe</Anchor>
    <Abstract>Instantiate an CGL discovery module for the process.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>discoverGPUs_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>gpusd::cgl::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1cgl_1_1Module.html</Path>
    <Anchor>a8477c54fc973a79d7e918a471d44ec4d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gpusd::detail::Filter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>gpusd::detail::Filter</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1detail_1_1Filter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gpusd::detail::SessionFilter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>gpusd::detail::SessionFilter</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1detail_1_1SessionFilter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gpusd::dns_sd::Module</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>gpusd::dns_sd::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1dns__sd_1_1Module.html</Path>
    <Abstract>The DNS_SD implementation for remote GPU discovery.</Abstract>
    <DeclaredIn>module.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>use</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>gpusd::dns_sd::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1dns__sd_1_1Module.html</Path>
    <Anchor>af2cf5a3f88962bc09a94373d09834791</Anchor>
    <Abstract>Instantiate an AGL discovery module for the process.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>discoverGPUs_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>gpusd::dns_sd::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1dns__sd_1_1Module.html</Path>
    <Anchor>a9b767b92b62bf2025481f5489c484185</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gpusd::glx::Module</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>gpusd::glx::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1glx_1_1Module.html</Path>
    <Abstract>The GLX implementation for local GPU discovery.</Abstract>
    <DeclaredIn>module.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>use</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>gpusd::glx::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1glx_1_1Module.html</Path>
    <Anchor>a8ddc5c7c9e26f647d82f4f5e45592370</Anchor>
    <Abstract>Instantiate an AGL discovery module for the process.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>discoverGPUs_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>gpusd::glx::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1glx_1_1Module.html</Path>
    <Anchor>a0f74c3efbde8f0cda2185e27a0e23413</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gpusd::wgl::Module</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>gpusd::wgl::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1wgl_1_1Module.html</Path>
    <Abstract>The WGL implementation for local GPU discovery.</Abstract>
    <DeclaredIn>module.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>use</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>gpusd::wgl::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1wgl_1_1Module.html</Path>
    <Anchor>a68b155ae666b5a7c12e459949babd274</Anchor>
    <Abstract>Instantiate an WGL discovery module for the process.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>discoverGPUs_</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>gpusd::wgl::Module</Scope>
    </TokenIdentifier>
    <Path>classgpusd_1_1wgl_1_1Module.html</Path>
    <Anchor>ae9f839aaa79cdf1f74ccd0f9578da828</Anchor>
  </Token>
</Tokens>
